<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My LifeChronicle</title>
    <description>Be a Imagineer.</description>
    <link>https://many258.github.io/</link>
    <atom:link href="https://many258.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 07 Apr 2021 21:29:35 +0900</pubDate>
    <lastBuildDate>Wed, 07 Apr 2021 21:29:35 +0900</lastBuildDate>
    <generator>Jekyll v4.2.0</generator>
    
      <item>
        <title>[데이터통신] 근거리 네트워킹(LAN)</title>
        <description>&lt;h1 id=&quot;lanlocal-area-network&quot;&gt;LAN(Local Area Network)&lt;/h1&gt;
&lt;p&gt;동일 빌딩 내 또는 한정된 지역 내 등 &lt;strong&gt;비교적 좁은 지역&lt;/strong&gt;에 분산 배치된 컴퓨터와 프린터 등의 단말기를 &lt;strong&gt;통신 회선으로 연결&lt;/strong&gt;하여 각종 정보를 교환할 수 있는 통신 네트워크&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;단일 기관의 소유 및 제한된 지역 내의 네트워크&lt;/li&gt;
  &lt;li&gt;어떤 종류의 통신 시스템 기기와도 연결이 가능&lt;/li&gt;
  &lt;li&gt;광대역 전송 매체의 사용으로 고속 통신 가능&lt;/li&gt;
  &lt;li&gt;오류 발생률이 낮으며, 전송 지연을 최소화할 수 있다&lt;/li&gt;
  &lt;li&gt;공유 매체의 사용으로 &lt;strong&gt;경로 선택없이&lt;/strong&gt; 매체에 연결된 모든 장치로 데이터 전송 가능&lt;/li&gt;
  &lt;li&gt;통신 기기의 &lt;strong&gt;재배치와 확장성이 좋다&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;노드 값이 저렴&lt;/li&gt;
  &lt;li&gt;기본 형태는 스타형, 링형, 버스형, 계층형으로 분류&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;lan의-평가-요소&quot;&gt;LAN의 평가 요소&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;지연 시간(&lt;strong&gt;Turn Around Time&lt;/strong&gt;)&lt;/li&gt;
  &lt;li&gt;시스템 신뢰성(&lt;strong&gt;System Reliability&lt;/strong&gt;)&lt;/li&gt;
  &lt;li&gt;응답 시간(&lt;strong&gt;Reponse Time&lt;/strong&gt;)&lt;/li&gt;
  &lt;li&gt;처리량(&lt;strong&gt;Throughput&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;lan의-서비스-영역에-따른-구분&quot;&gt;LAN의 서비스 영역에 따른 구분&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;CO-LAN&lt;/strong&gt;(Central Office LAN)&lt;br /&gt;
대학, 병원 및 연구소, 기업체 등 LAN 구성 여건이 미비한 지역과 지역 사이를 기존의 통신망을 연결시켜 제공한 망으로 보통 공중 기업 데이터망이라 한다&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;MAN&lt;/strong&gt;(Metropolitan Area Network)&lt;br /&gt;
LAN의 지역적인 협소성을 경제적으로 개선한 망으로 서비스 범위는 대략 50Km 영역으로 규정짓고 있다. 도시형 통신망이라고도 하며, 대단위 아파트 단지 등을 대상으로 구성하는 통신망&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;WAN&lt;/strong&gt;(Wide Area Network)&lt;br /&gt;
지역적인 거리와 무관하게 같은 이해 단체 간을 연결한 망 형태로 각기 다른 LAN을 통합해야 하는 어려움이 있지만 &lt;strong&gt;망간의 폐쇄성 때문에 안전성이 뛰어나&lt;/strong&gt; 많이 사용되는 형태&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;VAN&lt;/strong&gt;(Value Added Network)&lt;br /&gt;
통신회선을 직접 보유하거나 통신 사업자의 회선을 임차하여 단순한 정보 기능 이상의 &lt;strong&gt;부가가치를 부여&lt;/strong&gt;하고 음성 또는 데이터 정보를 제공하는 광범위하고도 복합적인 통신 서비스 형태&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;lan의-통신-방식에-따른-구분&quot;&gt;LAN의 통신 방식에 따른 구분&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;베이스밴드&lt;/strong&gt; 방식
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;디지털&lt;/strong&gt; 신호&lt;/li&gt;
      &lt;li&gt;채널이 1개&lt;/li&gt;
      &lt;li&gt;전송 속도는 1~10Mbps&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;양방향 통신&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;데이터 전송에 응용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;브로드밴드&lt;/strong&gt; 방식
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;아날로그&lt;/strong&gt; 신호&lt;/li&gt;
      &lt;li&gt;채널이 20~30개&lt;/li&gt;
      &lt;li&gt;전송 속도는 150Mbps&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;단방향 통신&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;음성, 영상 전송에 응용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;lan의-기본-형태&quot;&gt;LAN의 기본 형태&lt;/h2&gt;

&lt;h3 id=&quot;스타형성형&quot;&gt;스타형(성형)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;중앙&lt;/strong&gt;에 컴퓨터가 있고 이를 중심으로 단말기가 연결된 형태&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;네트워크 구성의 가장 기본적인 형태로 교환 노드의 수가 적다&lt;/li&gt;
  &lt;li&gt;온라인 시스템의 전형적인 방식&lt;/li&gt;
  &lt;li&gt;중앙 집중 제어용이므로 보수 관리와 단말기의 추가, 삭제가 용이&lt;/li&gt;
  &lt;li&gt;각 단말기마다 &lt;strong&gt;전송 속도를 다르게&lt;/strong&gt; 할 수 있다&lt;/li&gt;
  &lt;li&gt;하나의 단말기가 고장나도 &lt;strong&gt;다른 단말기에 영향을 주지 않는다&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;단말기의 고장 발견이 쉽다&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;독립된 경로를 갖고&lt;/strong&gt; 있으므로 &lt;strong&gt;보안성이 뛰어나다&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;중앙 컴퓨터가 고장나면 전체 시스템이 마비&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;링형&quot;&gt;링형&lt;/h3&gt;
&lt;p&gt;서로 &lt;strong&gt;이웃&lt;/strong&gt;하고 있는 단말기가 컴퓨터끼리만 연결시킨 형태&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;양쪽 방향으로 접근이 가능하여 통신 장애에 대한 &lt;strong&gt;융통성&lt;/strong&gt;이 존재&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;LAN에서 가장 많이 채택&lt;/strong&gt;되고 있는 방식&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;중계기의 수가 많아&lt;/strong&gt;진다&lt;/li&gt;
  &lt;li&gt;한 노드가 절단되어도 우회로를 구성하여 통신이 가능한 형태의 통신망&lt;/li&gt;
  &lt;li&gt;단말기의 추가 및 삭제가 복잡&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;공유하는 경로를 갖고&lt;/strong&gt; 있으므로 &lt;strong&gt;보안성이 떨어진다&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;버스형&quot;&gt;버스형&lt;/h3&gt;
&lt;p&gt;1개의 통신 회선에 여러 개의 단말기를 접속하는 형태&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;통신 회선이 1개이므로 물리적 구조가 간단&lt;/li&gt;
  &lt;li&gt;단말기의 추가 및 삭제가 용이&lt;/li&gt;
  &lt;li&gt;하나의 단말기가 고장나도 다른 단말기에 영향을 주지 않는다&lt;/li&gt;
  &lt;li&gt;공유하는 경로를 갖고 있으므로 보안성이 떨어진다&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;lan의-전송-매체&quot;&gt;LAN의 전송 매체&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;케이블 규격
    &lt;blockquote&gt;
      &lt;p&gt;X BASE/BROAD Y&lt;br /&gt;
&lt;sub&gt;&lt;strong&gt;X&lt;/strong&gt; : 데이터 전송 속도(단위-1Mbps)&lt;/sub&gt;&lt;br /&gt;
&lt;sub&gt;&lt;strong&gt;Y&lt;/strong&gt; : 길이(단위-100M)&lt;/sub&gt;&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;꼬임선 케이블(Twisted Cable)
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;전기적 간섭 현상을 줄이기 위해&lt;/strong&gt;서 균일하게 서로 감겨있는 형태의 케이블&lt;/li&gt;
      &lt;li&gt;하나의 케이블에 여러 쌍의 꼬임선들을 절연체로 피복하여 구성&lt;/li&gt;
      &lt;li&gt;다른 전송 매체에 비해서 거리/대역폭/데이터 전송률 면에서 제한적&lt;/li&gt;
      &lt;li&gt;가격이 저렴하고 설치가 간편한 이점&lt;/li&gt;
      &lt;li&gt;주파수 대역이 좁기 때문에 채널 수가 제한적&lt;/li&gt;
      &lt;li&gt;내구성이 약하다&lt;/li&gt;
      &lt;li&gt;스타형/링형/버스형에서 주로 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;동축 케이블(Coaxial Cable)
    &lt;ul&gt;
      &lt;li&gt;신뢰성/경제성/내구성 우수&lt;/li&gt;
      &lt;li&gt;버스형/링형에 주로 사용&lt;/li&gt;
      &lt;li&gt;베이스밴드 방식&lt;br /&gt;
디지털 신호를 변조하지 않고 사용하며 데이터 통신에 적합&lt;/li&gt;
      &lt;li&gt;브로드밴드 방식&lt;br /&gt;
주파수를 다중화시켜 사용하며 CATV에 적합&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;광 케이블(Optical Fiber Cable)
    &lt;ul&gt;
      &lt;li&gt;LAN의 전송 매체 중 가장 우수&lt;/li&gt;
      &lt;li&gt;대역폭이 넓어 정보 전송 능력이 향상되며, 동축 케이블보다 신호 감쇠 현상이 매우 적다&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;전기적 잡음 영향을 받지 않기 때문에&lt;/strong&gt; 신뢰성이 좋다&lt;/li&gt;
      &lt;li&gt;광을 이용하여 전송하기 때문에 &lt;strong&gt;보안성&lt;/strong&gt;이 뛰어나다&lt;/li&gt;
      &lt;li&gt;동축 케이블에 비해 &lt;strong&gt;무게와 크기에서 이점&lt;/strong&gt;을 가진다&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;전기적으로 무 유도성, 무 누화&lt;/strong&gt;이다&lt;/li&gt;
      &lt;li&gt;고속의 데이터 전송과 대량의 데이터 전송이 가능&lt;/li&gt;
      &lt;li&gt;작은 크기와 적은 무게로 설치가 용이&lt;/li&gt;
      &lt;li&gt;많은 중계 급 전선이 필요하지 않다(증폭기 간격 최대 119Km)&lt;/li&gt;
      &lt;li&gt;버스형과 링형에 주로 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;van&quot;&gt;VAN&lt;/h2&gt;
&lt;p&gt;통신 회선을 직접 보유하거나 통신 사업자의 회선을 임차하여 단순한 정보 기능이상의 &lt;strong&gt;부가가치를 부여&lt;/strong&gt;하고 음성 또는 데이터 정보를 제공하는 광범위하고도 복합적인 통신 서비스&lt;/p&gt;

&lt;h3 id=&quot;van-계층&quot;&gt;VAN 계층&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;정보 처리 계층(응용 계층) - &lt;strong&gt;정보 처리 기능&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;업무 처리, DB 관리, 고객 관리, 회계 관리 등 제공&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;통신 처리 계층(표현/세션/전송 계층) - &lt;strong&gt;통신 처리 기능&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;속도 변환, 코드 변환, 포맷 변환, 미디어 변환, 프로토콜 변환&lt;/li&gt;
      &lt;li&gt;메일 박스 : 메시지를 축적해두고 필요시 꺼내는 기능&lt;/li&gt;
      &lt;li&gt;동보 통신 : 1번의 통신으로 다수의 상대방에게 동일한 메시지를 보내는 기능&lt;/li&gt;
      &lt;li&gt;시각 지정 통신 : 정해진 시간에 메시지를 전송하는 기능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;네트워크 계층(네트워크 계층) - &lt;strong&gt;교환 기능&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;패킷 교환, 회선 교환&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;기본 처리 계층(데이터링크/물리) - &lt;strong&gt;전송 기능&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;물리적 회선을 의미하여 정보를 단순히 전송하는 고유 기능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;이더넷ethernet&quot;&gt;이더넷(Ethernet)&lt;/h2&gt;
&lt;p&gt;LAN의 가장 대표적인 버스 구조 방식으로 DEC, Intel, Xerox가 공동으로 개발시킨 &lt;strong&gt;표준 LAN&lt;/strong&gt;을 이더넷이라고 부른다.&lt;/p&gt;

&lt;p&gt;이더넷은 데이터를 보내려는 컴퓨터가 먼저 통신망이 사용중인지 아닌지 판별한 후에 비어 있을 때 데이터를 보내는 CSMA/CD 방식을 사용&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;접근 방법 : &lt;strong&gt;CSMA/CD&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;주소 지정 : &lt;strong&gt;6바이트&lt;/strong&gt;의 물리적인 주소&lt;/li&gt;
  &lt;li&gt;신호 방식 : &lt;strong&gt;맨체스터&lt;/strong&gt; 디지털 부호&lt;/li&gt;
  &lt;li&gt;데이터 전송률 : 1~100Mbps&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;교환형 이더넷(Switched Ethernet)
    &lt;ul&gt;
      &lt;li&gt;10BASE-T형 이더넷의 성능을 향상시킨 모델&lt;/li&gt;
      &lt;li&gt;물리적으로 스타형, 논리적으로 버스형의 형태&lt;/li&gt;
      &lt;li&gt;이론적인 전송속도 : 10Mbps * N(교환기의 수)&lt;/li&gt;
      &lt;li&gt;스위칭 기술의 도입으로 불필요한 패킷의 흐름을 막을 수 있다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;고속 이더넷(Fast Ethernet)
    &lt;ul&gt;
      &lt;li&gt;영상처리/실시간 오디오/비디오와 같은 새로운 응용들이 구현되면서 10Mbps보다 높은 전송 속도가 필요하여 개발된 모델&lt;/li&gt;
      &lt;li&gt;데이터 전송률 : 100Mbps&lt;/li&gt;
      &lt;li&gt;변형된 스타형의 형태&lt;/li&gt;
      &lt;li&gt;전송 속도가 증가되었으며 충돌 영역도 감소&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;기가비트 이더넷(Gigabit Ethernet)
    &lt;ul&gt;
      &lt;li&gt;광 케이블을 사용하며, 전송속도는 1Gbps&lt;/li&gt;
      &lt;li&gt;전이중, 반이중 통신 방식 지원&lt;/li&gt;
      &lt;li&gt;최소한의 충돌 감지를 위하여 프레임 크기를 64바이트에서 512바이트로 확장&lt;/li&gt;
      &lt;li&gt;기존 네트워크와의 호환성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 07 Apr 2021 00:00:00 +0900</pubDate>
        <link>https://many258.github.io/study/data-communication-lan/</link>
        <guid isPermaLink="true">https://many258.github.io/study/data-communication-lan/</guid>
        
        <category>데이터통신</category>
        
        
        <category>study</category>
        
      </item>
    
      <item>
        <title>[데이터통신] 트래픽 제어</title>
        <description>&lt;h1 id=&quot;트래픽-제어traffic-control&quot;&gt;트래픽 제어(Traffic Control)&lt;/h1&gt;
&lt;p&gt;네트워크 내로 송/수신되는 &lt;strong&gt;패킷의 수&lt;/strong&gt;를 일정하게 조절하여 네트워크를 효율적으로 이용할 수 있도록하는 기술로 수신측의 버퍼량이 &lt;strong&gt;한계점을 초과&lt;/strong&gt;하지 않도록 한다&lt;/p&gt;

&lt;h2 id=&quot;흐름-제어flow-control&quot;&gt;흐름 제어(Flow Control)&lt;/h2&gt;
&lt;p&gt;패킷 교환 방식에서 통신망 내 트래픽 제어의 원할한 흐름을 위해 네트워크 내의 노드와 노드 사이에 &lt;strong&gt;전송하는 패킷의 양이나 속도를 규제&lt;/strong&gt;하는 기술. 혹은 &lt;strong&gt;수신기 버퍼의 오버플로우를 예방&lt;/strong&gt;하기 위한 것으로 데이터 프레임의 전송률을 조정하는 것을 의미&lt;/p&gt;

&lt;h3 id=&quot;일정한-시간choke-packet&quot;&gt;일정한 시간(Choke Packet)&lt;/h3&gt;
&lt;p&gt;수신측에서 송신측에 전송하는 전송 지연 신호로 송신측의 데이터 전송 속도를 조절하는 방법. 수신측에서 일정한 시간(Choke Packet)을 송신측에 전송할 때마다 송신측은 &lt;strong&gt;일정한 시간만큼 점증적으로 데이터 전송 시간을 늦춘다&lt;/strong&gt;. 지원 중지 시간(Time Out) 동안 수신측에서 &lt;strong&gt;Choke Packet이 없는 경우&lt;/strong&gt; 송신측은 다시 &lt;strong&gt;원래의 속도로 복귀&lt;/strong&gt;한다&lt;/p&gt;

&lt;h3 id=&quot;단일-승낙&quot;&gt;단일 승낙&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Wait-Before-Go&lt;/strong&gt;&lt;br /&gt;
수신측의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Go&lt;/code&gt; 명령이 오면 전송하고 아무런 신호가 도착하지 않으면 대기(송신측이 &lt;strong&gt;수동적&lt;/strong&gt;)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Ask-And-Wait&lt;/strong&gt;&lt;br /&gt;
송신측에서 전송 여부를 물어보고 수신이 가능하다는 신호가 도착하면 전송(송신측이 &lt;strong&gt;능동적&lt;/strong&gt;)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;다중-승낙&quot;&gt;다중 승낙&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Window-Edge&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;수신측의 버퍼의 개수&lt;/strong&gt;를 송신측에 전송 하면 송신측에서는 임의로 데이터의 개수를 정하여 전송하는 방법&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;wbatwait-before-and-transmission&quot;&gt;WBAT(Wait Before And Transmission)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;수신측&lt;/strong&gt;에서는 수신할 데이터의 개수를 &lt;strong&gt;임의로 정하여&lt;/strong&gt; 송신측에 전달하면 송신측은 수신측에서 요구한 개수만큼만을 송신. 수신측에는 아무런 신호가 도착하지 않으면 무한정 대기&lt;/p&gt;

&lt;h3 id=&quot;슬라이딩-윈도sliding-window&quot;&gt;슬라이딩 윈도(Sliding Window)&lt;/h3&gt;
&lt;p&gt;전송측이 전송한 프레임에 대한 ACK 프레임을 수신하지 않더라도 여러 개의 프레임을 연속적으로 전송하도록 허용하는 방법&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/network/data-communication/sliding-window.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;한 번에 여러 개의 프레임을 전송할 경우 가장 효율적인 기법으로 송신측에서는 수신측으로 부터 전송할 &lt;strong&gt;프레임의 개수(윈도 크기)를 미리 지정&lt;/strong&gt;받는다.&lt;/p&gt;

&lt;p&gt;지정받은 개수만큼 송신 측에서는 자율적으로 프레임의 개수를 전송할 수 있다. 송신측에서는 &lt;strong&gt;지정받은 프레임의 개수&lt;/strong&gt;만큼을 모두 &lt;strong&gt;전송하고 나면 더 이상 전송할 수 없게&lt;/strong&gt; 된다&lt;/p&gt;

&lt;p&gt;수신측에서 전송할 프레임의 개수를 &lt;strong&gt;다시 지정&lt;/strong&gt;하게 되면 그때서야 &lt;strong&gt;다시 전송&lt;/strong&gt;할 수 있게 된다&lt;/p&gt;

&lt;h2 id=&quot;혼잡-제어congestion-control&quot;&gt;혼잡 제어(Congestion Control)&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;네트워크 내&lt;/strong&gt;에서 패킷의 대기 지연이 너무 높아지게 되어 트래픽이 붕괴되지 않도록 네트워크 측면에서 패킷의 흐름을 제어하는 트래픽 제어 기술&lt;/p&gt;

&lt;p&gt;네트워크 상에 패킷 수를 조절하는 기술로 네트워크 상에 각 노드들의 &lt;strong&gt;패킷 수신 버퍼를 한계점 이하로 사용&lt;/strong&gt;하도록 조절한다&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/network/data-communication/congestion-avoidance.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;느린 시작&lt;/strong&gt;(Slow Start)&lt;br /&gt;
윈도우의 크기를 1/2/4/8… 지수적으로 증가시켜 초기에는 느리지만 갈수록 빨라진다&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;혼잡 회피&lt;/strong&gt;(Congestion Avoidance)&lt;br /&gt;
느린 시작의 지수적 증가가 임계값에 도달하면 혼잡으로 간주하고 회피를 위해 윈도우의 크기를 1씩 선형적으로 증가시켜 혼잡을 예방하는 방식&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;네트워크상에 체증 제어가 실패하면 패킷의 흐름이 전혀 없는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;교착상태&lt;/code&gt;가 발생하여 궁극적으로 인접한 모든 노드까지 영향을 주게 되는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;룩업&lt;/code&gt; 상태가 된다&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;흐름 제어&lt;/strong&gt; : &lt;strong&gt;두 노드 사이&lt;/strong&gt;에 패킷 수를 조절하는 기술&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;체증 제어&lt;/strong&gt; : &lt;strong&gt;네트워크에서&lt;/strong&gt; 패킷 수를 조절하는 기술&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;교착상태-회피&quot;&gt;교착상태 회피&lt;/h2&gt;
&lt;p&gt;노드 간에 패킷을 기억할 수 있는 &lt;strong&gt;버퍼가 디스크의 용량이 넘쳐 패킷을 전송할 수 없는 상태&lt;/strong&gt;로 흐름 제어가 실패하면 체증이 유발되고 패킷의 흐름이 정지되는 교착상태가 발생&lt;/p&gt;

&lt;p&gt;이러한 교착상태가 발생되는 경우는 같은 목적지를 갖는 패킷을 모두 할당하지 않도록 조절해야 한다. 교착상태 발생 후 계속적으로 심화되면 룩업 상태가 발생하므로 그 전에 교착상태에 있는 노드 중에 하나를 선택하여 &lt;strong&gt;패킷 버퍼를 모두 폐기&lt;/strong&gt;하면 룩업 상태를 방지할 수 있다.&lt;/p&gt;

&lt;p&gt;이 때 폐기되는 패킷들은 사용자에 의하여 재전송되어야 한다.&lt;/p&gt;

&lt;h3 id=&quot;룩업-상태lock-up&quot;&gt;룩업 상태(Lock-Up)&lt;/h3&gt;
&lt;p&gt;패킷 교환망에서 교환기를 여러 사용자가 공유함으로써 패킷의 개수가 급속히 증가하거나 교환기 버퍼 용량의 부족으로 교착상태가 발생한다.&lt;/p&gt;

&lt;p&gt;이러한 부분적인 교착상태는 계속 확대되어 근접한 교환기까지도 영향을 주게 되며, 이로 인하여 &lt;strong&gt;네트워크 전체의 패킷 흐름이 멈추게 되는&lt;/strong&gt; 현상을 말한다.&lt;/p&gt;
</description>
        <pubDate>Tue, 06 Apr 2021 00:00:00 +0900</pubDate>
        <link>https://many258.github.io/study/data-communication-traffic-control/</link>
        <guid isPermaLink="true">https://many258.github.io/study/data-communication-traffic-control/</guid>
        
        <category>데이터통신</category>
        
        
        <category>study</category>
        
      </item>
    
      <item>
        <title>[데이터통신] 경로 선택 제어</title>
        <description>&lt;h1 id=&quot;경로-선택routing&quot;&gt;경로 선택(Routing)&lt;/h1&gt;
&lt;p&gt;송/수신 간에 중간 서브넷을 거쳐 &lt;strong&gt;최적의 경로를 선택&lt;/strong&gt;하는 기술&lt;/p&gt;

&lt;p&gt;서브넷 &lt;strong&gt;자원의 이용을 최대화&lt;/strong&gt;하여 평균 패킷 전송 시간을 &lt;strong&gt;최소화&lt;/strong&gt;한다&lt;/p&gt;

&lt;h2 id=&quot;경로-선택-요소&quot;&gt;경로 선택 요소&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;성능 기준(Performance Criterion)
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;홉수의 최소화&lt;/strong&gt; : 가장 적게 교환기를 경유할 수 있도록 한다&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;최저 비용 경로&lt;/strong&gt; : 경로를 배정하는 기술이나 비용이 적게 사용되도록 한다&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;최고의 처리율&lt;/strong&gt; : 정해진 시간 안에 패킷의 경로 배정을 최대로 진행하게 한다&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;지연의 최소화&lt;/strong&gt; : 패킷이 교환기에 저장된 시간이 최소가 되도록 한다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;결정 시간(Decision Time)
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;데이터그램 방식&lt;/strong&gt; : 패킷의 경로 결정 시간을 환경에 맞게 정한다&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;가상 회선 방식&lt;/strong&gt; : 패킷의 경로 결정 시간은 이미 정해져 있게 한다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;결정 장소(Decision Place)
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;분산식&lt;/strong&gt; : 주변 네트워크 정보를 참조&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;집중식&lt;/strong&gt; : 경로 정보 센터(RCC)의 정보를 참조&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;네트워크 정보 발생지(Network Information Source)
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;네트워크 형태&lt;/strong&gt; : 패킷이 처음 만들어진 네트워크 형태를 의미&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;트래픽 양&lt;/strong&gt; : 정해진 시간 안에 패킷들의 송/수신 개수를 의미&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;경로 배정 전략(Routing Plan)
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;고정형&lt;/strong&gt; : 패킷의 경로가 항상 일정하게 전달&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;범람형&lt;/strong&gt; : 패킷을 여러 개로 복사하여 전달&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;적응형&lt;/strong&gt; : 경로 선택기의 진행 정보를 이용하여 전달&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;적응 경로 배정 갱신 시간(Adaptive Routing Update Time)
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;연속적&lt;/strong&gt; : 경로 선택기의 정보를 계속 변경해준다&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;주기적&lt;/strong&gt; : 경로 선택기의 정보를 주기적으로 변경해준다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;경로-선택-프로토콜&quot;&gt;경로 선택 프로토콜&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/network/data-communication/routing-protocol.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;현재의 인터넷 상에서 운영되는 모든 네트워크에서는 서로 다른 경로 선택 프로토콜들이 사용되고 있다. 인터넷은 하나의 네트워크 관리 조직이 운영하는 지역인 AS의 집합으로 이루어져 있다&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AS&lt;/strong&gt;(Autonomous Systems, 자율 시스템) : 동일한 라우팅 프로토콜을 사용하는 네트워크&lt;/p&gt;

&lt;p&gt;모든 AS는 AS 안에 있는 경로 선택기들과 통신을 하기 위하여 경로 선택 프로토콜을 사용&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;거리벡터 알고리즘&lt;/strong&gt;&lt;br /&gt;
행렬로 이루어진 거리 정보 값을 인접 라우터와 주기적으로 교환하여 테이블을 갱신하고 이를 통해 경로를 선택하는 구조.&lt;/p&gt;

    &lt;p&gt;교환되는 정보가 기본적으로 거리 정보뿐이기 때문에 단순하고 다루기 쉬운 반면, 장애 등의 원인을 알아내기에는 어렵다는 단점이 존재&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;라우터와 라우터 간의 거리를 더하여 계산&lt;/li&gt;
      &lt;li&gt;라우팅 메트릭 값의 설정 요소
        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;&lt;strong&gt;네트워크 지연&lt;/strong&gt;&lt;br /&gt;
하나의 패킷이 네트워크를 통하여 전송측에서 목적지까지 전송되는 데 소요되는 시간으로 링크의 대역폭, 실제 거리, 포트의 큐, 네트워크의 과부하 등 다양한 요인에 의해 결정&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;&lt;strong&gt;대역폭&lt;/strong&gt;&lt;br /&gt;
연결된 네트워크 구간에서 사용 가능한 트래픽의 양&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;&lt;strong&gt;신뢰성&lt;/strong&gt;&lt;br /&gt;
각 네트워크 연결 상태에 있어서 얼마만큼의 신뢰를 유지하는 가를 수치로 표현&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;&lt;strong&gt;부하&lt;/strong&gt;&lt;br /&gt;
네트워크 트래픽의 바쁜 정도&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;링크상태 알고리즘&lt;/strong&gt;&lt;br /&gt;
거리벡터 라우팅 프로토콜의 단점을 보완하기 위해 개발.&lt;/p&gt;

    &lt;p&gt;모든 라우터가 모든 링크 정보를 가지며 라우팅 정보가 변경될 경우(이벤트 기반)에 &lt;strong&gt;변경된 라우팅 정보만을 전파&lt;/strong&gt;시키는 구조(트래픽 발생량 감소 =&amp;gt; 규모 큰 네트워크에서도 사용이 가능, 라우팅 루프같은 오류가 발생하지 않음)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;시간 지연 문제의 발생이 적다&lt;/li&gt;
      &lt;li&gt;복잡한 구조로 경로설정이 구현되므로 주소 배분이나 장치 설정의 어려움이 발생&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;igpinterior-gateway-protocol-내부-게이트웨이-프로토콜&quot;&gt;IGP(Interior Gateway Protocol, 내부 게이트웨이 프로토콜)&lt;/h3&gt;
&lt;p&gt;AS 내부의 라우터들끼리 라우팅 정보를 교환하는 데 사용되는 라우팅 프로토콜&lt;/p&gt;

&lt;h4 id=&quot;riprouting-information-protocol-인터넷-라우팅-프로토콜&quot;&gt;RIP(Routing Information Protocol, 인터넷 라우팅 프로토콜)&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;거리벡터 알고리즘을 사용하는 가장 단순하고 일반적인 프로토콜&lt;/li&gt;
  &lt;li&gt;라우팅 테이블은 데이터그램 패킷을 통하여 모든 라우터에 전달&lt;/li&gt;
  &lt;li&gt;매 30초마다 라우팅 정보를 전달, 라우팅 정보는 180초 동안만 유효&lt;/li&gt;
  &lt;li&gt;최대 홉을 15로 제한하므로 소/중규모 네트워크에 적합&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Broadcast 방식&lt;/strong&gt;을 사용해서 인접한 라우터 간의 정보를 교환하므로 네트워크 대역폭의 낭비가 초래되고 네트워크에 연결되어 있는 모든 호스트들은 라우팅 처리와 무관하게 관련된 패킷을 처리해야 하므로 연결된 모든 장치에 &lt;strong&gt;오버헤드가 발생&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;ripv2rfc1723&quot;&gt;RIPv2(RFC1723)&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;RIP와 동일한 기본 알고리즘을 사용하면서 단점을 보완한 프로토콜&lt;/li&gt;
  &lt;li&gt;인증 메커니즘을 제공하고 인터넷 전체에 &lt;strong&gt;VLSM&lt;/strong&gt;을 사용할 수 있도록 보완&lt;/li&gt;
  &lt;li&gt;인식 기능이 제공되기 때문에 Broadcast 방식이나 Multicast 방식으로 갱신 정보를 전송하는 것이 가능&lt;/li&gt;
  &lt;li&gt;서브넷 마스크 기능 포함&lt;/li&gt;
  &lt;li&gt;EGP에서 얻어진 AS 번호 등의 정보를 통지하기 위해 사용되는 외부 루트태그 기능 존재&lt;/li&gt;
  &lt;li&gt;RIP에서는 서브넷 마스크를 바이트 단위로 인식을 하여 A/B/C 클래스 단위로 인식하였으나, RIPv2에서는 &lt;strong&gt;비트 단위&lt;/strong&gt;로 인식&lt;/li&gt;
  &lt;li&gt;멀티라우팅 프로토콜 환경에서 라우팅 수행 중에 다음에 전송될 라우터 중 최적 라우터의 선택이 가능하도록 하는 ‘다음 홉 주소’ 사용&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;멀티캐스트&lt;/strong&gt; 방식을 사용하기 때문에 라우팅 프로토콜이 지원하지 않는 호스트의 부하를 경감시킬 수 있으며, 또한 RIP 외는 지원하지 않는 라우터에서 해석할 수 없는 정보를 RIPv2 라우터 사이에 공유하도록 함으로써 신뢰성을 향상시킨다&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;ospfopen-shortest-path-first&quot;&gt;OSPF(Open Shortest Path First)&lt;/h4&gt;
&lt;p&gt;RIP의 한계를 극복하기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IETF&lt;/code&gt;(Internet Engineering Task Force)에서 고안한 방식으로 네트워크 &lt;strong&gt;변화가 있을 때에만 갱신함&lt;/strong&gt;으로 대역을 효과적으로 사용할 수 있는 라우팅 프로토콜&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;망 구성이 &lt;strong&gt;계층적 구조&lt;/strong&gt;로 구성되어 있으며 Area라는 구간을 나누어 사용(대규모 네트워크에서 효율적으로 사용이 가능)&lt;/li&gt;
  &lt;li&gt;Area를 나누면 서로 교환해야 되는 상태정보도 줄어들고 링크 계산 속도, 빈도가 줄어들게 되며 라우팅 테이블의 크기도 줄어 관리하기가 용이해진다&lt;/li&gt;
  &lt;li&gt;라우팅 정보를 인접한 라우터에 모두 전송하는 플러딩 방식을 사용하므로 토폴로지에 관한 정보가 전체 네트워크 상의 라우터에서 동일하게 유지&lt;/li&gt;
  &lt;li&gt;거리의 제한이 없다&lt;/li&gt;
  &lt;li&gt;SPF 알고리즘을 통해 직접 경로계산을 하기 때문에 리소스 소모량이 많다&lt;/li&gt;
  &lt;li&gt;LSA : 라우팅 정보를 담아 주고 받는 광고 패킷&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;igrpinternet-gateway-routing-protocol&quot;&gt;IGRP(Internet Gateway Routing Protocol)&lt;/h4&gt;
&lt;p&gt;BGP를 보완한 기술로 중간 규모의 네트워크에서 사용하는 경로 설정 프로토콜&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;시스코 사에서 독자적으로 개발한 프로토콜&lt;/li&gt;
  &lt;li&gt;독립적인 네트워크 내에서만 사용하기 위해 개발&lt;/li&gt;
  &lt;li&gt;RIP와 유사하게 Hop수를 기준으로 한 정보를 전송&lt;/li&gt;
  &lt;li&gt;복수의 경로상에서 로드 밸런싱 기능을 지원&lt;/li&gt;
  &lt;li&gt;RIP와 유사하지만, 크고 복잡한 네트워크를 위해 개발&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;eigrpenhanced-interior-gateway-routing-protocol&quot;&gt;EIGRP(Enhanced Interior Gateway Routing Protocol)&lt;/h4&gt;
&lt;p&gt;거리 벡터 알고리즘을 사용하는 IGRP를 발전시켜 개발한 라우팅 프로토콜.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;IGRP의 매트릭 방식을 그대로 사용하여 최적경로를 선택&lt;/li&gt;
  &lt;li&gt;링크제어 알고리즘처럼 네트워크 변화에 즉시 업데이트를 수행&lt;/li&gt;
  &lt;li&gt;Router 정보 전송을 위해 IP 프로토콜 88번 사용&lt;/li&gt;
  &lt;li&gt;DUAL(Diffusing Update Algorithm)을 사용하여 최적 경로(Successor)와 후속 경로(Feasible Successor)를 선출&lt;/li&gt;
  &lt;li&gt;메트릭 값이 같은 경로만 부하 분산이 가능한 RIP와 OSPF와는 다르게 메트릭 값이 다른 경로로 부하 분산이 가능(Unequal Cost 부하 분산 지원)&lt;/li&gt;
  &lt;li&gt;대규모 네트워크에 적용 시 SIA(Stuck In Active)현상이 발생할 수 있다&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;egperpexterior-gatewayrouting-protocol-외부-게이트웨이-프로토콜&quot;&gt;EGP/ERP(Exterior Gateway/Routing Protocol, 외부 게이트웨이 프로토콜)&lt;/h3&gt;
&lt;p&gt;RIP만으로는 패킷망의 모든 경로를 가상으로 확보할 수 없기에 TCP/IP를 사용하는 네트워크와의 연합으로 패킷 경로를 확보한다.&lt;/p&gt;

&lt;p&gt;즉, AS 상호 간에 라우팅 정보를 교환하는 데 사용되는 프로토콜&lt;/p&gt;

&lt;h4 id=&quot;bgpborder-gateway-protocol-경계-게이트웨이-프토토콜&quot;&gt;BGP(Border Gateway Protocol, 경계 게이트웨이 프토토콜)&lt;/h4&gt;
&lt;p&gt;인터넷상의 게이트웨이 호스트들 간에 흔히 사용되는 프로토콜로 &lt;strong&gt;관리자에 의해 독자적인 경로 설정이 필요&lt;/strong&gt;할 때 사용하는 프로토콜&lt;br /&gt;
ISP 업체 연결하거나, 두개이상 ISP 동시 접속할때 (Multihoming), BGP를 사용 한다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;라우팅정보를 유니캐스트 방식으로 전송한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;경로-선택-전략&quot;&gt;경로 선택 전략&lt;/h2&gt;

&lt;h3 id=&quot;비적응적-방법&quot;&gt;비적응적 방법&lt;/h3&gt;
&lt;p&gt;경로 선택이 단순하고 중간 노드의 상태를 전혀 고려하지 않는다.&lt;/p&gt;

&lt;p&gt;패킷을 전송할 때 경로를 선택할 수 잇는 프로그램을 미리 패킷에 삽입하면 패킷은 패킷에 있는 경로 선택 프로그램대로 진행되도록 하는 &lt;strong&gt;정적이고 수동적인 방법&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&quot;고정-경로-선택fixed-routing-착국-부호-방식&quot;&gt;고정 경로 선택(Fixed Routing, 착국 부호 방식)&lt;/h4&gt;
&lt;p&gt;교환기마다 접속하려는 상대방에 미리 붙여둔 번호를 해석하여 진행 경로를 선정하는 방식&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;이미 정해진 경로로 진행하기 때문에 유연성이 없다&lt;/li&gt;
  &lt;li&gt;지나간 경로로 되돌아가는 루프가 없다&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;범람-경로-선택flooding-routing-플러딩&quot;&gt;범람 경로 선택(Flooding Routing, 플러딩)&lt;/h4&gt;
&lt;p&gt;입력된 경로를 제외하고 &lt;strong&gt;모든 경로에 패킷의 복사본이 전송&lt;/strong&gt;되는 방법으로 &lt;strong&gt;신뢰성&lt;/strong&gt;과 최단 경로가 보장되지만 복사된 패킷의 증가로 &lt;strong&gt;체증이 유발&lt;/strong&gt;될 수 있다&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;홉카운트를 이용하여 체증 유발을 방지할 수 있다&lt;/li&gt;
  &lt;li&gt;중간 네트워크(서브넷) 정보를 이용하지 않는다&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;적응적-방법&quot;&gt;적응적 방법&lt;/h3&gt;
&lt;p&gt;중간 노드의 상태가 원활하지 않는 경우 체증과 지연이 심화될 수 있다. 이러한 단점을 보완한 적응적 방법은 중간 노드의 체증이나 교착상태 등의 변화에 대한 &lt;strong&gt;정보를 얻어 능동적&lt;/strong&gt;으로 경로를 선택하는 동적인 방법&lt;/p&gt;

&lt;h4 id=&quot;국부적-경로-선택isolated-routing&quot;&gt;국부적 경로 선택(Isolated Routing)&lt;/h4&gt;
&lt;p&gt;지역적으로 외부 노드의 정보를 얻지 않고 국부적인 노드의 &lt;strong&gt;독립적인 판단&lt;/strong&gt;에 의하여 결정되는 방법으로 거시적인 관점보다는 근시안적이기 때문에 체증 유발 가능성이 존재&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;짧은 큐 경로 선택&lt;/strong&gt;(Shortest Queue Routing, Hot Potato Routing)&lt;br /&gt;
인접 노드의 버퍼의 개수가 가장 적은 쪽으로 패킷을 보내는 방식&lt;br /&gt;
패킷이 &lt;strong&gt;목적지와 멀어질 수 있다&lt;/strong&gt;는 단점이 있지만 패킷을 노드 밖으로 보내는 방법으로는 가장 확실한 방법&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;국부 지연 평가 방법&lt;/strong&gt;(Local Delay Estimate, Backward Learning)&lt;br /&gt;
이미 지나간 패킷의 정보를 &lt;strong&gt;충분한 시간을 갖고 평가&lt;/strong&gt;하여 경로를 선택하는 방법&lt;br /&gt;
정확도나 경로 선택의 &lt;strong&gt;시기를 놓칠 수 있다&lt;/strong&gt;는 단점 존재&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;분산-경로-선택distribute-routing&quot;&gt;분산 경로 선택(Distribute Routing)&lt;/h4&gt;
&lt;p&gt;체증이 발생하는 문제점과 효율적인 경로 선택을 위해 사용하며 자신을 중심으로 &lt;strong&gt;인접해있는 모든 경로 선택기&lt;/strong&gt;의 정보를 분석하여 광범위한 지역까지의 경로를 확보하는 방식&lt;/p&gt;

&lt;h4 id=&quot;집중-경로-선택centralized-routing&quot;&gt;집중 경로 선택(Centralized Routing)&lt;/h4&gt;
&lt;p&gt;전체 네트워크의 경로 흐름을 파악하고 제어하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RCC&lt;/code&gt;(Routing Control Center)의 정보로 경로를 선택하는 방법으로 RCC의 고장 시 전체 통신망은 마비된다&lt;/p&gt;
</description>
        <pubDate>Mon, 05 Apr 2021 00:00:00 +0900</pubDate>
        <link>https://many258.github.io/study/data-communication-routing/</link>
        <guid isPermaLink="true">https://many258.github.io/study/data-communication-routing/</guid>
        
        <category>데이터통신</category>
        
        
        <category>study</category>
        
      </item>
    
      <item>
        <title>[데이터통신] 데이터 회선망</title>
        <description>&lt;h1 id=&quot;전용-회선&quot;&gt;전용 회선&lt;/h1&gt;
&lt;p&gt;두 개 이상의 단말기가 점 대 점 방식으로 통신 회선이 항상 고정적으로 연결되어 있는 회선&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;비경제적이지만 &lt;strong&gt;고속의 데이터 전송&lt;/strong&gt;을 할 수 있고 &lt;strong&gt;전송 오류가 적은&lt;/strong&gt; 방법&lt;/li&gt;
  &lt;li&gt;전용 회선으로 연결된 단말기의 개수가 N개이면 통신 회선의 수는 $\frac{N(N-1)}{2}$개&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;같은 회선만 사용할 수 있다&lt;/li&gt;
  &lt;li&gt;경로 선택 기술이 필요 없다&lt;/li&gt;
  &lt;li&gt;보안성이 좋다&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;교환-회선&quot;&gt;교환 회선&lt;/h1&gt;
&lt;p&gt;송신측의 단말기에서 송신한 데이터를 교환기가 식별하여 수신측에 있는 해당 단말기에 전송하는 방식&lt;/p&gt;

&lt;p&gt;전용 회선에 비해 고속 전송과 전송 데이터의 품질은 보장할 수 없으나 통신 장치와 회선 비용을 줄일 수 있어 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;경제적&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;통신 범위가 넓다&lt;/li&gt;
  &lt;li&gt;회선 사용 효율이 좋다&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;교환-기술의-성능-비교&quot;&gt;교환 기술의 성능 비교&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;전파 지연 시간&lt;/strong&gt;(Propagation Delay)&lt;br /&gt;
신호가 한 교환기에서 다음 교환기로 도달할 때까지 걸리는 시간&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;전송 시간&lt;/strong&gt;(Transport)&lt;br /&gt;
데이터가 출발지로부터 목적지까지 도달할 때까지 걸리는 시간&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;노드 지연 시간&lt;/strong&gt;(Node Delay)&lt;br /&gt;
축적 교환망에서 데이터가 다음 경로를 배정 받아 전달될 때까지 축적 교환기에 대기하는 시간&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;데이터 처리율&lt;/strong&gt;(Data Processing Rate)&lt;br /&gt;
정해진 시간 동안에 데이터를 교환시키는 양의 비율&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;데이터-교환-방식&quot;&gt;데이터 교환 방식&lt;/h1&gt;
&lt;h2 id=&quot;회선-교환-방식circuit-switching&quot;&gt;회선 교환 방식(Circuit Switching)&lt;/h2&gt;
&lt;p&gt;경로가 확보되고 수신측에 응답이 있는 상태라면 교환 방식 중에 전파 지연이 가장 짧으며 실시간 통신이 가능한 방식&lt;/p&gt;

&lt;p&gt;하지만 데이터 전송 전에 경로를 확보하기 위해 긴 시간이 필요하므로 전체 시간으로 볼 때는 많은 시간이 소요된다&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;제어 신호 종류
    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;strong&gt;관리 제어 신호&lt;/strong&gt;&lt;br /&gt;
상대편과 통화를 하기 위해 필요한 자원의 이용 가능성이 있는 지를 파악하여 알려준다&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;strong&gt;주소 제어 신호&lt;/strong&gt;&lt;br /&gt;
상대편의 전화번호를 식별하여 상대편과 통화할 수 있는 경로를 확보하는 작업을 수행&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;strong&gt;호 정보 제어 신호&lt;/strong&gt;&lt;br /&gt;
현재 호(링크 확립)의 상태 정보를 전화를 거는 사람에게 제공&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;strong&gt;감시 제어 신호&lt;/strong&gt;&lt;br /&gt;
망의 전체적인 운영/유지/오류 제어/고장 수리 등을 위해 사용되는 제어 신호&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;기억 장치를 사용하지 않는다&lt;/li&gt;
  &lt;li&gt;코드와 속도가 다른 단말기 간에는 통신이 불가능&lt;/li&gt;
  &lt;li&gt;전체 경로가 미리 확보되어야 한다&lt;/li&gt;
  &lt;li&gt;일정한 데이터 전송률을 제공하므로 동일한 전송 속도가 유지&lt;/li&gt;
  &lt;li&gt;연결만 되면 실시간 통신이 가능&lt;/li&gt;
  &lt;li&gt;연결되면 통신 회선은 공유되지 않고 일 대 일 방식으로 데이터를 송수신&lt;/li&gt;
  &lt;li&gt;통신 회선이 독점되므로 비용이 고가&lt;/li&gt;
  &lt;li&gt;고정 대역폭을 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;공간-분할-교환-방식sds-space-division-switch&quot;&gt;공간 분할 교환 방식(SDS: Space Division Switch)&lt;/h3&gt;
&lt;p&gt;두 단말기 간의 경로가 공간적으로 분할된 방식으로 두 단말기 사이에 신호를 전송하는 교환기가 필요하고 이 교환기를 거친 물리적인 경로가 설정되는 방식(교환기를 거치지만 1:1로 연결)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;단일 단계 교환 방식(Single Stage Switch, 크로스 매트릭스 교환 방식)&lt;br /&gt;
N개의 입력과 N개의 출력으로 구성되어 있으며 N X N의 교차점이 있는 교환기로 연결하는 방식&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;다단계 교환 방식(Multi-Stage Switch, 3단계 교환기)&lt;br /&gt;
단일 단계 교환 방식의 단점을 보완한 방식으로 N개의 입력 선을 분할하여 교환기 수가 줄고 경제적인 교환을 가능하게 한다&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;시간-분할-교환-방식tds-time-division-swtich&quot;&gt;시간 분할 교환 방식(TDS: Time Division Swtich)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;TDM 버스 교환(TDM Bus Switch)&lt;br /&gt;
한 전송 회선을 &lt;strong&gt;시간으로 분할&lt;/strong&gt;하여 다중 신호가 이 회선을 공유하는 방식.&lt;br /&gt;
주로 &lt;strong&gt;동기식 TDM 버스 교환&lt;/strong&gt;을 사용&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;시간 슬롯 상호 교환(TSI: Time Slot Interchange)&lt;br /&gt;
전 2중 동작을 위하여 한 쌍의 슬롯을 교환함으로써 시간 슬롯 또는 채널의 동기화된 TDM 열을 이룬다.&lt;br /&gt;
대부분 시간 분할 교환 방식이 채택하는 기술&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;시간 다중화 교환(TMS: Time-Multiplex Switch)&lt;br /&gt;
TSI 장치는 제한된 수의 접속만을 제공하는데 특히 액세스 속도가 고정되었을 때 TSI의 크기가 커지면 지연은 더욱 커지게 된다.&lt;br /&gt;
이러한 문제점을 해결하고 많은 양의 채널을 확보하기 위해 사용되는 방식&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;축적-교환-방식store-and-forward-swtiching&quot;&gt;축적 교환 방식(Store and Forward Swtiching)&lt;/h2&gt;
&lt;p&gt;회선 교환처럼 직접적으로 전기적인 연결은 없지만 일시적으로 저장 기능이 있어 네트워크의 흐름이나 변화에 충분히 대처할 수 있는 장점이 있다.&lt;/p&gt;

&lt;p&gt;또한, 통신 회선을 공동으로 사용할 수 있으므로 경제적인 통신이 가능&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;전달되는 데이터가 축적 교환기에 &lt;strong&gt;일시적으로 저장&lt;/strong&gt;되었다가 전달되기 때문에 저장 시에 데이터를 변환시킬 수 있다&lt;/li&gt;
  &lt;li&gt;기종이 다른 어떠한 통신 장비와도 통신이 가능&lt;/li&gt;
  &lt;li&gt;저장되기 때문에 전달 속도가 느린 문제점 존재&lt;/li&gt;
  &lt;li&gt;호출자와 피 호출자가 동시에 운영 상태에 있지 않아도 된다&lt;/li&gt;
  &lt;li&gt;데이터 전송량이 폭주하는 혼란을 피할 수 있다&lt;/li&gt;
  &lt;li&gt;같은 내용의 메시지를 여러 곳에 전송할 수 있다(=통신 비용 저렴)&lt;/li&gt;
  &lt;li&gt;데이터의 손실을 막기 위해 부가적인 내용(번호, 시간)을 추가할 수 있다&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;메시지-교환-방식message-switching-전문-교환&quot;&gt;메시지 교환 방식(Message Switching, 전문 교환)&lt;/h3&gt;
&lt;p&gt;전체 데이터를 한 번에 전송한다. 그렇기에 빠른 응답을 요구하는 전송에는 부적합하며 전송되는 데이터는 전송 순서를 기다리는 동안 교환기의 임시 기억 장치에 기억되었다가 순서가 되면 차례로 전송&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;교환 방식 중 전송 지연 시간이 가장 길다&lt;/li&gt;
  &lt;li&gt;수신측이 준비가 안 된 경우에도 지연 후 전송이 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;패킷-교환-방식packet-switching&quot;&gt;패킷 교환 방식(Packet Switching)&lt;/h3&gt;
&lt;p&gt;빠른 응답 시간을 제공하고 통신 회선의 효율적인 사용을 위하여 전송할 전체 데이터를 일정한 크기로 나누어 전송(패킷)하는 방식&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;패킷망에서 전달할 수 있는 패킷의 최대 크기는 1024비트나 2048비트로 제한을 두고 있다&lt;/li&gt;
  &lt;li&gt;데이터 흐름이 많거나 교환기가 고장이 있어도 우회해서 전달될 수 있는 융통성이 존재&lt;/li&gt;
  &lt;li&gt;전송에 실패한 패킷의 경우 재전송이 가능&lt;/li&gt;
  &lt;li&gt;패킷 단위로 헤더를 추가하므로 패킷별 오버헤드가 발생&lt;/li&gt;
  &lt;li&gt;실시간 전송은 이루어지지 않는다&lt;/li&gt;
  &lt;li&gt;다수의 사용자 간에 비대칭적 데이터 전송을 원할하게 하기 위함&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;채널과 포트의 통계적 다중화 기능을 제공하기 위해서 사용&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;패킷 교환망의 주요 기능
    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;strong&gt;패킷 다중화&lt;/strong&gt;&lt;br /&gt;
패킷들이 여러 개의 경로를 공유할 수 있도록 한다&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;strong&gt;논리 채널&lt;/strong&gt;&lt;br /&gt;
컴퓨터나 교환기 간에 가상 회선 교환 채널이나 데이터그램 교환 채널을 설정&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;strong&gt;경로 선택 제어&lt;/strong&gt;&lt;br /&gt;
최적의 경로를 설정&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;strong&gt;순서 제어&lt;/strong&gt;&lt;br /&gt;
패킷이 서로 다른 경로를 통하면 패킷의 전송 순서와 다르게 도착할 수 있으므로 순서적으로 조립되도록 한다&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;strong&gt;트래픽 제어&lt;/strong&gt;&lt;br /&gt;
흐름 제어, 체증 제어, 교착상태 회피, 룩업 상태 해결 등을 지원&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;strong&gt;오류 제어&lt;/strong&gt;&lt;br /&gt;
패킷의 오류를 제거한다든지 패킷을 삭제한다&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;PAD(Packet Assembler/Disassembler)&lt;br /&gt;
패킷화할 수 없는 일반 컴퓨터는 패킷망에 접속할 수 있도록 메시지를 패킷화하는 기능을 갖도록 해야 한다. 이처럼 &lt;strong&gt;비패킷 단말기를 패킷화하는 시스템이나 프로그램&lt;/strong&gt;을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PAD&lt;/code&gt;라고 한다&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;패킷망 기술의 표준(CCITT 규정)
    &lt;ul&gt;
      &lt;li&gt;X.28 : 문자형 비패킷 단말기와 PAD 간에 주고받는 명령과 응답에 대한 규정&lt;/li&gt;
      &lt;li&gt;X.3 : PAD가 문자형 비단말기를 제어하기 위해 사용되는 변수들에 대한 규정&lt;/li&gt;
      &lt;li&gt;X.25 : 패킷망에서 패킷형 단말기를 위한 DTE와 DCE 사이의 접속 규정&lt;/li&gt;
      &lt;li&gt;X.29 : 패킷형 단말기와 문자형 비패킷 단말기의 통신 규정&lt;/li&gt;
      &lt;li&gt;X.75 : 패킷망 상호 간의 접속을 위한 신호 방식 규정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/network/data-communication/ccitt-packet-switching.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;X.25 프로토콜 패킷 교환 3단계
    &lt;ol&gt;
      &lt;li&gt;호 설정(Call Setup)
        &lt;ul&gt;
          &lt;li&gt;호 요구(Request) : 호 설정 요청 신호를 보낸다&lt;/li&gt;
          &lt;li&gt;호 연결(Connected) : 호 요청 신호를 받은 측에서 응답&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;데이터 전송(Data Transfer)
        &lt;ul&gt;
          &lt;li&gt;데이터 : 패킷의 순서 번호 순으로 송수신&lt;/li&gt;
          &lt;li&gt;인터럽트 : 문제가 발생하면 인터럽트 패킷을 전달하여 문제점 해결&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;호 제거(Call Cleaning)
        &lt;ul&gt;
          &lt;li&gt;흐름 제어, 오류 제어 : 패킷이 정상 속도를 유지할 수 있도록 조절&lt;/li&gt;
          &lt;li&gt;호 제거 요청(Request) : 호 설정 해제 신호를 보낸다&lt;/li&gt;
          &lt;li&gt;호 제거 확인(Confirmation) : 호 설정 해제 신호를 받은 측에서 응답&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;데이터그램datagram-패킷-교환-방식&quot;&gt;데이터그램(Datagram) 패킷 교환 방식&lt;/h4&gt;
&lt;p&gt;특정 경로의 &lt;strong&gt;설정 없이 전송&lt;/strong&gt;되는 방식. 패킷의 독립성을 부여하여 중간 노드에 문제가 발생하여도 우회하여 목적지에 도착할 수 있는 방식&lt;/p&gt;

&lt;p&gt;목적지가 같은 패킷이라도 &lt;strong&gt;다른 전송로로 진행&lt;/strong&gt;할 수 있어서 매우 &lt;strong&gt;융통성&lt;/strong&gt; 있고 소수의 패킷을 전송하는 경우에 유리&lt;/p&gt;

&lt;p&gt;데이터그램 패킷은 언제든 &lt;strong&gt;순서가 뒤바뀔 수 있기&lt;/strong&gt; 때문에 수신측에서는 순서적으로 &lt;strong&gt;재조립&lt;/strong&gt;해야 한다&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;경로를 확보하지 않는다 = 독립적&lt;/li&gt;
  &lt;li&gt;호 설정, 초기 설정 불필요하며 목적지 주소를 각각 부여&lt;/li&gt;
  &lt;li&gt;오류 발생 시 교환기에서 삭제&lt;/li&gt;
  &lt;li&gt;미국식&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;가상-회선virtual-circuit-패킷-교환-방식&quot;&gt;가상 회선(Virtual Circuit) 패킷 교환 방식&lt;/h4&gt;
&lt;p&gt;패킷을 전송하기 전에 미리 가상적인 경로를 확보(&lt;strong&gt;초기 설정 필요&lt;/strong&gt;)하여 전송하는 방식. 삽입 흐름이나 오류 제어를 서브 넷에서 지원하기 때문에 데이터그램 방식보다 &lt;strong&gt;오류가 적다&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;또한, 패킷의 송신 순서와 &lt;strong&gt;수신 순서가 바뀌지 않기&lt;/strong&gt; 때문에 데이터그램에 비해 복잡하지 않다&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;경로를 확보하고 패킷을 전송한다 = 종속적&lt;/li&gt;
  &lt;li&gt;호 설정, 초기 설정(목적지 주소 부여) 필요&lt;/li&gt;
  &lt;li&gt;오류 발생 시 교환기에서 지원&lt;/li&gt;
  &lt;li&gt;유럽식&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 05 Apr 2021 00:00:00 +0900</pubDate>
        <link>https://many258.github.io/study/data-communication-line-network/</link>
        <guid isPermaLink="true">https://many258.github.io/study/data-communication-line-network/</guid>
        
        <category>데이터통신</category>
        
        
        <category>study</category>
        
      </item>
    
      <item>
        <title>[알뜰폰] 기존 SKT에서 헬로모바일로 환승하기(광고 아님)</title>
        <description>&lt;p class=&quot;notice--warning&quot;&gt;잠깐! 이 포스트는 &lt;strong&gt;4월 5일&lt;/strong&gt;에 작성되었음을 미리 알려드립니다.&lt;/p&gt;

&lt;h1 id=&quot;개요&quot;&gt;개요&lt;/h1&gt;
&lt;p&gt;기존에 SKT를 사용하고 있었는데 그 중에서도 T멤버쉽을 잘 애용하고 있었습니다.&lt;/p&gt;

&lt;p&gt;하지만, 요즘 FLO, WAVVE와 같은 결합 구독이 생겨나면서
SKT는 고객 유치를 위해 구독 전용과 일반으로 나누어 혜택을 주기 시작했고&lt;br /&gt;
구독하고 싶은 상품이 있으면 겸사겸사 같이 사용하는건데 막상 필요가 없는 것들이라 사실상 T멤버쉽 혜택을 받지 못한다고 느낀 부분도 있었고
‘기존에 쓰던 통신비를 더 아낄수 없을까’라는 생각을 하게 되면서 알뜰폰 정보를 찾아보게 되었습니다&lt;/p&gt;

&lt;p&gt;주변 지인도 하나둘씩 사용하기 시작하면서 딱히 품질의 차이가 느껴지지도 않는다고 들었고 아무래도 통신비 지출이 절반으로 줄어든다는 게 큰 메리트로 작용했던 것 같습니다.&lt;/p&gt;

&lt;p&gt;암튼, 알뜰폰 정보를 찾아보던 중 여러 통신사가 있다는 것을 알았고 마침 헬로모바일에서 유심을 이벤트가에 판매하고 있어서 환승을 결심하게 되었습니다ㅎㅎ&lt;/p&gt;

&lt;p&gt;추가로 통신사 상관이 없다면, 각 알뜰폰 통신사에서 &lt;strong&gt;가입 시 제공하는 상품&lt;/strong&gt;도 한 번 보고 신청하는 것도 좋은 방법이라 생각됩니다.&lt;/p&gt;

&lt;p&gt;대략적으로 알뜰폰과 관련해 찾아본 정보에 의하면,&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;대기업의 통신망을 작은기업이 빌려다 쓰는 것이기 때문에 고객센터와 연결이 잘 안된다&lt;/li&gt;
  &lt;li&gt;유심의 불량&lt;/li&gt;
  &lt;li&gt;GPS가 느리다&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이 정도의 단점이 있을 수 있다고 하는 것 같습니다.&lt;/p&gt;

&lt;h1 id=&quot;주의사항&quot;&gt;주의사항&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;위약금 확인 필수&lt;/li&gt;
  &lt;li&gt;가족 할인과 같은 결합 상품 확인하기&lt;/li&gt;
  &lt;li&gt;토요일에도 개통이 가능하나, 혹시라도 오류가 있으면 주말동안 꽤 골치아파지기 때문에 가급적 평일(월요일)을 추천드리는 바입니다.&lt;/li&gt;
  &lt;li&gt;번호 이동 인증 시 기존 통신사와 자동 해지된다는 점 유의바랍니다&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;준비물&quot;&gt;준비물&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;신분증&lt;/strong&gt; : 더 이상 말할 것도 없이 반드시 필요(운전면허증으로 대체 가능)&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;유심&lt;/strong&gt;&lt;br /&gt;
저의 경우 네이버 헬로모바일 스마트스토어에서 저렴하게 구매했습니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;../../assets/images/life/hello-mobile/naver-hello-mobile-1.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;../../assets/images/life/hello-mobile/naver-hello-mobile-2.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;그 밖에도, 편의점(CU, e-Mart24)에서도 구매가 가능합니다만, 무조건 판매하는 것이 아니기에 현재 판매중인지 확인전화 해보셔야 합니다&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;본인 명의의 &lt;strong&gt;신용카드&lt;/strong&gt; or &lt;strong&gt;범용 인증서&lt;/strong&gt; or &lt;strong&gt;네이버 인증서&lt;/strong&gt;(헬로모바일의 경우)&lt;br /&gt;
아직 네이버 인증서를 발급하지 않으셨다면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;신규발급&lt;/code&gt;시 네이버페이 지급하니(4월 5일) 한 번 확인해보세요&lt;/p&gt;

    &lt;p&gt;전 발급받고나서 이벤트를 확인해서 보상을 받을 수 없었습니다 ㅠㅠ&lt;/p&gt;

    &lt;p&gt;추가로 &lt;strong&gt;범용 인증서&lt;/strong&gt;를 발급받으려면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;4,400&lt;/code&gt;원이 필요한데 일주일 내로 폐기하면 환불 처리가 된다고하니 참고하세요&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;공인인증서&lt;/strong&gt; : 자동이체 신청 시 필요&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;요금제 선택&lt;/strong&gt;&lt;br /&gt;
조금만 찾아봐도 요금제가 생각보다 많이 있었습니다.&lt;br /&gt;
막상 선택하기 어렵다면 &lt;a href=&quot;http://direct.lghellovision.net/rate/rateView.do?pgNum=0301&quot;&gt;나에게 맞는 요금제 찾기&lt;/a&gt; 링크를 통해 어떤 상품으로 선택할 지 골라보세요.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;기존 통신비 납부 방법&lt;/strong&gt;&lt;br /&gt;
셀프 개통 시 요금을 납부하는 방법에서 카드 및 계좌를 통해 인증을 진행하는데 3번 이상 틀릴 시 상담원과 연결해야 한다고 합니다&lt;/p&gt;

    &lt;p&gt;저는 체크카드랑 몇 안되는 계좌를 사용 중이라 다행히도 1번 틀리고 인증 성공했습니다.&lt;/p&gt;
    &lt;h1 id=&quot;방법&quot;&gt;방법&lt;/h1&gt;
    &lt;h2 id=&quot;1-가입정보-확인&quot;&gt;1. 가입정보 확인&lt;/h2&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://direct.lghellovision.net/usim/usimView.do?pgNum=0201&quot;&gt;신청 사이트로 가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/life/hello-mobile/hello-mobile-1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;아래 스크린샷처럼 네이버 인증서로도 가입할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/life/hello-mobile/hello-mobile-2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;본인정보를 빠짐없이 기입합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/life/hello-mobile/hello-mobile-3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/life/hello-mobile/hello-mobile-4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-번호이동-인증&quot;&gt;2. 번호이동 인증&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/life/hello-mobile/hello-mobile-5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-개통신청-완료&quot;&gt;3. 개통신청 완료&lt;/h2&gt;

&lt;p&gt;문자를 기다리다가 ARS 방식으로 하려고 했는데 그 때 마침 문자가 와서 문자동의 방식으로 진행하였습니다. 한 5분 정도 기다렸던 것 같습니다&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/life/hello-mobile/hello-mobile-6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;1630일.. 자급제 폰에다가 기본 요금 때문에 저렇게 오래 사용해도 VIP를 못갔다는 게 함정..그래도 그 동안 잘 썼다
&lt;img src=&quot;../../assets/images/life/hello-mobile/skt.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/life/hello-mobile/hello-mobile-7.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;웹페이지에서 셀프 개통이 완료되었다는 메시지를 보고 나서 바로
핸드폰을 끄고 유심을 장착하고 켜봤더니 한 번에 바로 인식이 되었습니다&lt;/p&gt;

&lt;p&gt;-끝-&lt;/p&gt;

&lt;h1 id=&quot;기타-문의&quot;&gt;기타 문의&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;외국인 가입 불가&lt;/li&gt;
  &lt;li&gt;후불 요금제 상품(선불 요금제 가입 불가)&lt;/li&gt;
  &lt;li&gt;오프라인 유심 구매를 하지 못한 경우, 신청서 작성 시 택배로 배송 받을 수도 있습니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;유심은 꼭 셀프 개통 완료&lt;/strong&gt; 후 휴대폰에 장착 해 주세요.&lt;/li&gt;
  &lt;li&gt;셀프개통 이용 시간을 확인하시고 개통 신청 해 주세요.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;신규 가입&lt;/strong&gt; : 08시 ~ 19시 50분 (요일 제한 없음)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;번호 이동&lt;/strong&gt; : 10시 ~ 19시 50분 (일요일, 신정/설/추석 당일 제외)&lt;/li&gt;
  &lt;li&gt;이전 통신사가 KCT, 세종(온세)텔레콤은 토/일/공휴일 불가&lt;/li&gt;
  &lt;li&gt;셀프개통은 LGU+의 유심 신규가입 및 번호이동만 신청 가능합니다.&lt;/li&gt;
  &lt;li&gt;※CU 선구매유심을 제외한 신규가입(택배/퀵배송)건의 경우 선개통 배송되며 셀프개통 신청이 불가합니다.&lt;/li&gt;
  &lt;li&gt;미성년자는 셀프개통 대상에서 제외됩니다.&lt;/li&gt;
  &lt;li&gt;번호이동의 경우 이전 통신사에서 가입 혹은 명의변경 하신 후 90일이 지나야 신청이 가능합니다.&lt;/li&gt;
  &lt;li&gt;번호이동 인증 정보는 반드시 이전 사업자에게 등록되어 있는 정보(계좌, 휴대폰 뒷자리, 납부 신용카드 등)가 필요합니다.&lt;/li&gt;
  &lt;li&gt;번호이동 할 휴대폰 개통 작업 중 전산 해지로 모바일 데이터가 통신 단절 될 수 있으니 꼭 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WI-FI&lt;/code&gt;환경에서 진행 해주세요.&lt;/li&gt;
  &lt;li&gt;제휴카드 신청 고객은 카드 발급 후 해당 카드로 납부 방법을 변경하셔야 할인이 적용됩니다.&lt;/li&gt;
  &lt;li&gt;유심 장착 후 신호가 잡히지 않을 경우, 전원을 &lt;strong&gt;3~4회&lt;/strong&gt; 껐다 켰다를 반복&lt;/li&gt;
  &lt;li&gt;새로운 휴대폰에 유심을 꽂았는데, 번호등록 중이라고만 뜨면서 이용이 안되는 경우, 정보 등록이 되지 않는다면 기기 등록이 필요하므로 고객행복센터(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;114&lt;/code&gt; / &lt;strong&gt;1855-1140&lt;/strong&gt;) 및 헬로모바일 홈페이지&amp;gt;고객센터&amp;gt;기기등록/해외구매폰 VoLTE 등록으로 신청&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;간단-후기&quot;&gt;간단 후기&lt;/h1&gt;
&lt;p&gt;유심의 경우, 이벤트 진행 중일 때 구매하여 배송비 없이 신속하게 도착해서 놀랐고 신청방법또한 어렵지 않아 접근성이 좋아졌다는 것(세상 많이 좋아졌다..?)을 새삼 느낄 수 있었습니다.&lt;/p&gt;

&lt;p&gt;오후에 잠시 일이 있어 외출하다가 실험 겸 GPS를 켜봤는데 전 통신사보다는 잘 튀네요. 그래도 일상 생활에서 크게 문제는 일어나지 않을 정도라 넘어갔습니다&lt;/p&gt;

&lt;p&gt;전화하면서 통화 품질은 나쁘지 않다는 느낌을 받았지만 고객센터 어플은 버벅거림이 있고 이 글 작성하고 있는 저녁까지도 실시간으로 갱신되지 않고 있습니다.&lt;/p&gt;

&lt;p&gt;앞으로 1달정도 써보고 조금은 자세한 장점이나 문제점을 작성해보려고 합니다&lt;/p&gt;

&lt;p&gt;이상입니다&lt;/p&gt;

&lt;p&gt;감사합니다&lt;/p&gt;
</description>
        <pubDate>Mon, 05 Apr 2021 00:00:00 +0900</pubDate>
        <link>https://many258.github.io/life/hello-mobile/</link>
        <guid isPermaLink="true">https://many258.github.io/life/hello-mobile/</guid>
        
        
        <category>life</category>
        
      </item>
    
      <item>
        <title>[데이터통신] 매체 접근 기술(MAC)</title>
        <description>&lt;h1 id=&quot;매체-접속-제어mac--media-access-control&quot;&gt;매체 접속 제어(MAC : Media Access Control)&lt;/h1&gt;
&lt;p&gt;호스트 컴퓨터에 연결되어 있는 여러 개의 단말기들은 통신 회선을 공유하고 있다. 이 단말기들이 &lt;strong&gt;어떻게 통신 회선을 점유하는가&lt;/strong&gt;에 따라 통신 시스템 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;효율&lt;/code&gt;에 영향을 주게 된다.&lt;/p&gt;

&lt;p&gt;공유 회선을 동적으로 점유하는 것을 공유 회선 점유 방식이라고 한다&lt;/p&gt;

&lt;h2 id=&quot;예약-방식reservation&quot;&gt;예약 방식(Reservation)&lt;/h2&gt;
&lt;p&gt;길고 연속적인 정보(&lt;strong&gt;Stream&lt;/strong&gt;)에 적당한 방식으로 통신 회선의 시간 폭(&lt;strong&gt;Slot Time&lt;/strong&gt;)을 미리 예약하는 방식.&lt;/p&gt;

&lt;p&gt;2차국에서 1차국에 송신할 자료가 있다는 신호를 보내면 1차국에서는 통신 회선 점유표(&lt;strong&gt;Time Stamp&lt;/strong&gt;)를 참조하여 통신 회선의 사용을 허가&lt;/p&gt;

&lt;h2 id=&quot;경쟁-방식contention&quot;&gt;경쟁 방식(Contention)&lt;/h2&gt;
&lt;p&gt;트래픽이 적은 소량의 데이터 전송에 적합한 방식으로 모든 단말기가 컴퓨터에 전송하기 위해 &lt;strong&gt;순서와 규칙이 없이 경쟁&lt;/strong&gt;하여 선로를 점유하는 방식&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;즉, 송신 요구를 먼저 한 쪽이 송신권을 갖는 방식&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;구현이 쉽고 전송량이 소량일 때는 적합하지만 전송량이 많을 때는 성능이 저하&lt;/p&gt;

&lt;h3 id=&quot;aloha&quot;&gt;ALOHA&lt;/h3&gt;
&lt;p&gt;Ethernet 모델에서 사용되는 공유 회선 점유 기술인 CSMA/CD의 기본 원리로 이 기법은 모든 단말기에 자유롭게 적용된다.&lt;/p&gt;

&lt;p&gt;우선 단말기는 전송할 데이터가 있으면 &lt;strong&gt;점유 허가 신호&lt;/strong&gt;를 컴퓨터에 전송하고 컴퓨터에서 &lt;strong&gt;긍정적인 응답&lt;/strong&gt;(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ACK&lt;/code&gt;)이 도착할 때까지 일정한 시간(최대 가능한 &lt;strong&gt;왕복 전파 지연 시간&lt;/strong&gt; : 전송 신호가 한 노드에서 다음 노드로 도달할 때 걸리는 시간)을 기다리다가 &lt;strong&gt;응답이 없으면 포기&lt;/strong&gt;하는 방식&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;충돌이 발생&lt;/strong&gt;하면 수신측에서는 전송을 &lt;strong&gt;포기&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;slot-aloha&quot;&gt;Slot-ALOHA&lt;/h3&gt;
&lt;p&gt;ALOHA 기법의 &lt;strong&gt;성능이 떨어지는 단점을 보완&lt;/strong&gt;한 방법으로 모든 단말기의 &lt;strong&gt;공유 회선에 접근할 수 있는 시간 폭&lt;/strong&gt;(Time Slot, 채널)을 할당하여 &lt;strong&gt;동기화&lt;/strong&gt;한다. 각 단말기의 데이터 전송은 해당되는 접근 시간에 전송이 가능하며 시간이 겹칠 경우에는 충돌로 간주&lt;/p&gt;

&lt;h3 id=&quot;csma&quot;&gt;CSMA&lt;/h3&gt;
&lt;p&gt;각 단말기가 1차국의 허가(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ACK&lt;/code&gt;)를 기다리지 않고 서로 경쟁하면서 접근하며, 충돌을 피해가지 않고 &lt;strong&gt;충돌을 이용하는 형태로 변경&lt;/strong&gt;되었다.&lt;/p&gt;

&lt;p&gt;채널이 휴지 시간(Idle Time)이면 점유한다. 채널이 사용 중이면(충돌) 사용이 끝나기를 기다린 후 즉시 점유하거나 일정한 규칙을 정하여 접근&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1-Persistent CSMA
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;낙천형&lt;/strong&gt; : 충돌되지 않으리라는 확률 1을 갖고 사용중이지 않은 것을 감지하자마자 즉시 매체에 접근하여 데이터 프레임 송출&lt;/li&gt;
      &lt;li&gt;충돌발생 가능성이 가장 크므로 채널사용률이 낮은 대신에 대기시간은 짧다&lt;/li&gt;
      &lt;li&gt;유선 LAN 이더넷&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Non-Persistent CSMA
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;비관형&lt;/strong&gt; : 반드시 충돌될 것이라고 비관하여 비록 사용중이지 않은 것을 감지하여도, 확률분포에서 얻어진 임의 시간 만큼 무조건 기다린 후 매체 접근&lt;/li&gt;
      &lt;li&gt;충돌이 적어 채널사용률은 높아지나 대기 시간이 많이 소요&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;P-Persistent CSMA
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;의심염려형&lt;/strong&gt; : 사용중이지 않은 것을 감지하면, 전체 중 확률 P가 충돌되지 않을 것으로 판단하여 매체에 접근하고, 의심을 갖는 나머지 확률(1-P)는 한 단위 시간만큼 기다린 후 매체에 접근&lt;/li&gt;
      &lt;li&gt;충돌을 줄이고(Non-Persistent 방식) 대기시간을 줄이고자(1-Persistent 방식) 하는 상호보완 방식&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;csmacdcarrier-sense-multiple-access--collision-detection&quot;&gt;CSMA/CD(Carrier Sense Multiple Access / Collision Detection)&lt;/h3&gt;
&lt;p&gt;통신 채널의 상태를 파악하여 통신 채널이 데이터 전송을 하지 않을 때 정보를 전송하는 방식&lt;/p&gt;

&lt;p&gt;데이터 프레임 간의 충돌 발생을 해소하기 위해 CSMA 방식에 &lt;strong&gt;충돌 검출&lt;/strong&gt; 기능과 충돌 발생 시 &lt;strong&gt;재송신하는 기능&lt;/strong&gt;을 추가&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;송신 요구를 먼저 한쪽이 송신권을 갖는 방식&lt;/li&gt;
  &lt;li&gt;전송로상의 데이터가 흐르지 않는 것을 확인한 후 데이터를 보내는 방식으로 &lt;strong&gt;LAN의 매체 접근 방식&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;통신 회선이 사용중이면 일정 시간 대기하고 통신 회선상에 데이터가 없을 때에만 데이터를 송신(&lt;strong&gt;송신중에도 전송로의 상태를 계속 감시&lt;/strong&gt;)&lt;/li&gt;
  &lt;li&gt;송신 도중 &lt;strong&gt;충돌이 발생&lt;/strong&gt;하면 &lt;strong&gt;송신을 중지&lt;/strong&gt;하고, 모든 노드에게 &lt;strong&gt;충돌을 알린 후&lt;/strong&gt; 일정시간이 지난 다음 데이터를 &lt;strong&gt;재송신&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;버스형 구조&lt;/strong&gt;에서 주로 사용&lt;/li&gt;
  &lt;li&gt;통신량이 많아지면 충돌이 잦아져 채널의 이용률이 저하되고 전송 지연 시간이 급격히 증가(&lt;strong&gt;회선 이용률이 10% 이하&lt;/strong&gt;이면 충돌이 빈번하게 발생하는 시점)&lt;/li&gt;
  &lt;li&gt;통신량이 적을 때 유리하며 데이터가 &lt;strong&gt;일정한 길이 이하일 경우&lt;/strong&gt;에는 충돌 신호를 &lt;strong&gt;검출할 수 없다&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;충돌이 발생한 경우 &lt;strong&gt;지연 시간을 예측하기 어려움&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ethernet&lt;/code&gt; 모델과 개선된 모델에서 계속 사용하는 MAC 기술&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IEEE 802.3&lt;/code&gt;의 표준 규약&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;csmacacarrier-sense-multiple-access--collision-avoidance&quot;&gt;CSMA/CA(Carrier Sense Multiple Access / Collision Avoidance)&lt;/h3&gt;
&lt;p&gt;무선 네트워크상에서는 충돌을 감지하기 힘들기 때문에 데이터 흐름을 감지하여 네트워크가 사용 중이 아니면 바로 패킷을 보내지 않고, 예비 신호를 먼저 전송해 데이터 전송 중 패킷 충돌을 피하는 방법으로 데이터를 전송한 후에는 충돌 하지 않음&lt;/p&gt;

&lt;p&gt;DCF(Distributed Coordination Function: 동등한 우선 순위를 가지고 경쟁하는 방식)이라고도 한다&lt;br /&gt;
PCF(Point Coordination Function: 우선 순위 기반 경쟁 방식) - 상용화 안 됨&lt;/p&gt;
&lt;h2 id=&quot;순서적-할당-방식round-robin&quot;&gt;순서적 할당 방식(Round Robin)&lt;/h2&gt;
&lt;p&gt;컴퓨터가 단말기에게 전송할 데이터의 유무를 순서적으로 묻는 방식&lt;/p&gt;

&lt;p&gt;각 단말기에게 &lt;strong&gt;순서적&lt;/strong&gt;으로 하나뿐은 공유 회선을 점유할 수 있는 &lt;strong&gt;기회를 제공&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;중앙형polling-방식-roll-call-polling-bus-polling&quot;&gt;중앙형(Polling 방식, Roll-Call Polling, Bus Polling)&lt;/h3&gt;
&lt;p&gt;컴퓨터에서 정해준 순서에 따라 단말기를 선택하여 통신 회선 사용의 유무를 &lt;strong&gt;문의&lt;/strong&gt;(Polling Message)하여 사용하도록 허가하는 방식&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/network/data-communication/polling.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;중앙 컴퓨터&lt;/strong&gt;에 공유 회선 점유 제어 장치 및 프로그램이 존재&lt;/li&gt;
  &lt;li&gt;우선권이나 대역폭을 확보하는데 유리&lt;/li&gt;
  &lt;li&gt;중앙 컴퓨터에서 통제를 하기에 단말기 간 전송 지연이 거의 없다&lt;/li&gt;
  &lt;li&gt;통신 중에 다른 단말기의 영향을 받지 않는다&lt;/li&gt;
  &lt;li&gt;중앙 컴퓨터가 고장이 날 경우 통신이 모두 중단&lt;/li&gt;
  &lt;li&gt;효율성이나 경제성이 떨어진다&lt;/li&gt;
  &lt;li&gt;공유 회선의 독점이 불가능&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;분산형token-방식-hub-go-ahead-polling-hub-polling&quot;&gt;분산형(Token 방식, Hub-go-ahead Polling, Hub Polling)&lt;/h3&gt;
&lt;p&gt;컴퓨터가 가장 멀리 떨어진 단말기에 폴링 메시지를 보내면 폴링 메시지를 받은 단말기는 통신 회선을 점유하여 데이터를 전송한다. 전송할 데이터가 없으면 즉시 자신이 가리키고 있는 &lt;strong&gt;다음 단말기에 폴링 메시지를 넘겨주어&lt;/strong&gt; 통신 회선을 사용할 수 있도록 한다&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;단말기&lt;/strong&gt;에 공유 회선 제어 장치 및 프로그램이 존재&lt;/li&gt;
  &lt;li&gt;중앙에서 통제가 불가하기에 단말기 간에 전송 지연이 발생할 수 있다&lt;/li&gt;
  &lt;li&gt;통신 중에도 다른 단말기의 영향을 받는다&lt;/li&gt;
  &lt;li&gt;효율성이나 경제성이 좋다&lt;/li&gt;
  &lt;li&gt;단말기가 능동적으로 동작한다&lt;/li&gt;
  &lt;li&gt;공유 회선이 독점될 수 있다&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;토큰-버스token-bus&quot;&gt;토큰 버스(Token Bus)&lt;/h3&gt;
&lt;p&gt;허가권(토큰)이 각 단말기를 순서적으로 옮겨 다니는 방식&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/network/data-communication/token-bus.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;각 단말기의 전송 시간을 가변적으로 조절이 가능한 장점이 있지만 CSMA/CD 방식에 비해 복잡하고 지연시간이 길다는 단점이 존재&lt;/li&gt;
  &lt;li&gt;하나의 단말기에는 토큰이 이동해야 할 단말기의 정보를 보유하고 있다&lt;/li&gt;
  &lt;li&gt;전송량이 많을 때도 안정적이며 액세스 시간이 일정하다&lt;/li&gt;
  &lt;li&gt;하나의 &lt;strong&gt;단말기가 고장&lt;/strong&gt;나면 &lt;strong&gt;통신은 전면 중단&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;각 단말기에 공유 회선 점유 시간을 조절할 수 있다&lt;/li&gt;
  &lt;li&gt;전송 데이터의 길이에 제한이 없다&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;버스형&lt;/strong&gt;이나 &lt;strong&gt;트리형&lt;/strong&gt;에 적합한 방식&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IEEE 802.4&lt;/code&gt;의 표준 규약&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;토큰-링token-ring&quot;&gt;토큰 링(Token Ring)&lt;/h3&gt;
&lt;p&gt;링을 따라 순환하는 토큰을 이용하는 방식으로 토큰 버스의 토큰과는 다소 차이가 있다&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/network/data-communication/token-ring.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;토큰은 &lt;strong&gt;자유 토큰&lt;/strong&gt;(Free Token) 형태로 링을 회전하다가 임의의 단말기에서 통신 회선의 사용 요청 신호가 들어오면 회선 사용을 허가하고 &lt;strong&gt;바쁜 토큰&lt;/strong&gt;(Busy Token)으로 변경된다.
통신 회선 사용이 종료되면 다시 자유 토큰 형태로 변환하여 링을 따라 순환한다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;단말기를 모두 경유해야 하거나 하나의 단말기가 고장나면 중단되는 &lt;strong&gt;토큰 버스의 단점을 보완&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;모든 단말기에 공평한 기회 제공&lt;/li&gt;
  &lt;li&gt;하나의 단말기가 고장나더라도 &lt;strong&gt;우회&lt;/strong&gt;하여 다른 단말기와 통신 가능&lt;/li&gt;
  &lt;li&gt;공유 회선의 사용률을 높이기 위해 토큰을 여러 개 사용할 수 있다&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IEEE 802.5&lt;/code&gt;의 표준 규약&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;토큰-패싱token-passing&quot;&gt;토큰 패싱(Token Passing)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;네트워크 형태&lt;/strong&gt;(물리적)는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;버스&lt;/code&gt; 구조 사용, &lt;strong&gt;토큰 운영&lt;/strong&gt;(논리적)은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;링&lt;/code&gt; 형태로 사용&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;데이터 전송 시 반드시 토큰을 취득하여야 하고, 전송을 마친 후에는 토큰을 반납&lt;/li&gt;
  &lt;li&gt;모든 단말기에 공평한 기회 부여&lt;/li&gt;
  &lt;li&gt;하나의 단말기가 고장나더라도 우회하여 다른 단말기와 통신 가능&lt;/li&gt;
  &lt;li&gt;기술이 복잡하여 비용이 많이 든다&lt;/li&gt;
  &lt;li&gt;부하가 크고, 거리 제한이 없다&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;슬롯-링slotted-ring&quot;&gt;슬롯 링(Slotted Ring)&lt;/h3&gt;
&lt;p&gt;링 구조를 하나의 토큰을 사용하지 않고 전체의 &lt;strong&gt;링을 일정한 간격으로 분해&lt;/strong&gt;하여 각 슬롯마다 토큰을 사용&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;시스템이 간결하고 각 스테이션에서 링과의 상호 작용이 작기 때문에 신뢰도가 높은 방식&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;선택-방식selection&quot;&gt;선택 방식(Selection)&lt;/h2&gt;
&lt;p&gt;멀티포인트 방식에 있어서 중앙 컴퓨터가 주변의 단말기로 데이터를 전공하고자 하는 경우 수신측 &lt;strong&gt;단말기의 상태&lt;/strong&gt;를 확인하는 절차로, 컴퓨터에서 &lt;strong&gt;다수의 단말기에 데이터를 전송&lt;/strong&gt;할 때 사용하는 방식&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Select-Hold&lt;/strong&gt;&lt;br /&gt;
컴퓨터에서 단말기로 데이터를 전송할 때 단말기의 수신 가능한 응답을 받고 데이터를 전송하는 방식&lt;br /&gt;
즉, 단말기의 &lt;strong&gt;수신을 준비&lt;/strong&gt;시키고 데이터를 전송시키는 방식&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BASIC&lt;/code&gt; 프레임에서 사용&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Fast-Select&lt;/strong&gt;&lt;br /&gt;
컴퓨터에서 단말기로 데이터를 전송할 때 단말기의 수신 가능한 응답을 받지 않고 전송할 데이터와 응답 요청을 동시에 전송하는 방식&lt;br /&gt;
즉, 단말기의 &lt;strong&gt;수신 상황을 고려하지 않고&lt;/strong&gt; 데이터를 전송하는 방식&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ieee-802-standard-family&quot;&gt;IEEE 802 Standard Family&lt;/h2&gt;
&lt;p&gt;IEEE는 LAN 기술의 표준화를 목적으로 설립한 소위원회다. 위원회에서 결정된 표준안은 ANSI(미국표준협회)를 통해 ISO(국제표준화기구)의 심사 절차를 거쳐 대부분 국제표준으로 채택되고 있으며 LAN의 국제 표준화에 크게 기여하고 있다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;표준 규정&lt;/th&gt;
      &lt;th&gt;규격&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;IEEE 802.3&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;CSMA/CD&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;IEEE 802.4&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;Token Bus&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;IEEE 802.5&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;Token Ring&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;IEEE 802.6&lt;/td&gt;
      &lt;td&gt;MAN 표준안의 DQDB&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;IEEE 802.7&lt;/td&gt;
      &lt;td&gt;Broadband LANs&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;IEEE 802.8&lt;/td&gt;
      &lt;td&gt;Fiber optic LANs&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;IEEE 802.9&lt;/td&gt;
      &lt;td&gt;음성/데이터 통합 LAN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;IEEE 802.10&lt;/td&gt;
      &lt;td&gt;Security LAN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;IEEE 802.11&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;무선 LAN&lt;/strong&gt;, &lt;strong&gt;CSMA/CA&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;IEEE 802.12&lt;/td&gt;
      &lt;td&gt;Cable-TV 프로토콜&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;IEEE 802.15&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;블루투스&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
</description>
        <pubDate>Sun, 04 Apr 2021 00:00:00 +0900</pubDate>
        <link>https://many258.github.io/study/data-communication-media-access-control/</link>
        <guid isPermaLink="true">https://many258.github.io/study/data-communication-media-access-control/</guid>
        
        <category>데이터통신</category>
        
        
        <category>study</category>
        
      </item>
    
      <item>
        <title>[데이터통신] 회선 공유 기술</title>
        <description>&lt;h1 id=&quot;회선-공유-기술&quot;&gt;회선 공유 기술&lt;/h1&gt;
&lt;p&gt;하나의 컴퓨터에 여러 개의 단말기가 원거리에서 접속할 경우 단말기 각각에 &lt;strong&gt;직접 접속하는 것은 통신 회선의 비용이 높아&lt;/strong&gt;지므로 경제적인 시스템을 구축할 수 없다.&lt;/p&gt;

&lt;p&gt;따라서, 단말기로부터 근접한 곳에 통신 회선을 공유할 수 있는 장비 및 프로그램을 설치하여 &lt;strong&gt;다수의 단말기가 컴퓨터에 접속&lt;/strong&gt;할 수 있도록 하는 것이 &lt;strong&gt;경제적&lt;/strong&gt;이다.&lt;/p&gt;

&lt;p&gt;이처럼 통신 회선을 공유하는 장비 및 프로그램에는 통신 회선을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;정적&lt;/code&gt;으로 나누어 사용하는 다중화기와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;동적&lt;/code&gt;으로 사용하는 집중화기가 존재한다.&lt;/p&gt;

&lt;h2 id=&quot;다중화기&quot;&gt;다중화기&lt;/h2&gt;
&lt;p&gt;하나의 고속 통신 회선을 통해 &lt;strong&gt;일정한 시간이나 주파수&lt;/strong&gt;를 규칙적으로 나누어 사용하는 방식&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;여러 개의 채널들이 하나의 통신 회선을 통하여 결합된 신호의 형태로 전송되고 수신측에서 다시 이를 여러 개의 채널 신호로 분리하는 역할 수행&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;전송 효율을 높일 수 있다&lt;/strong&gt;는 것이 가장 중요한 특징&lt;/li&gt;
  &lt;li&gt;구조가 단순, &lt;strong&gt;규칙적인&lt;/strong&gt; 전송에 사용&lt;/li&gt;
  &lt;li&gt;입출력 각각의 &lt;strong&gt;채널 대역폭이 동일&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;M개의 입력 회선을 M개의 출력 회선으로 다중화하는 장치&lt;/li&gt;
  &lt;li&gt;입력 회선의 수는 출력 회선의 수와 &lt;strong&gt;같아야&lt;/strong&gt; 한다&lt;/li&gt;
  &lt;li&gt;모든 단말기가 항상 사용하는 것이 아니므로 통신 회선에 분배된 시간이나 주파수가 &lt;strong&gt;낭비되는 단점&lt;/strong&gt; 존재&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;집중화기&quot;&gt;집중화기&lt;/h2&gt;
&lt;p&gt;하나의 고속 통신 회선을 통해 하나의 단말기만을 사용할 수 있도록 제한&lt;br /&gt;
하나의 단말기가 고속의 통신 회선을 사용하고 있는 동안 다른 단말기에서 요청한 자원은 &lt;strong&gt;버퍼에서 대기&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;통신 회선을 효율적으로 사용할 수 있으나 각 단말기에서 요청한 신호에 의한 &lt;strong&gt;충돌의 문제가 존재&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;구조가 복잡하며, &lt;strong&gt;불규칙적인&lt;/strong&gt; 전송에 사용&lt;/li&gt;
  &lt;li&gt;입출력 각각의 &lt;strong&gt;채널 대역폭이 다르다&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;입력 회선의 수는 출력 회선의 수보다 &lt;strong&gt;같거나 많아야&lt;/strong&gt; 한다&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;M개의 입력 회선을 N개의 출력 회선으로 집중화하는 장치&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;전위 처리기(FEP: Front End Processor)&lt;br /&gt;
특정한 컴퓨터 시스템이 많은 양의 통신 처리 능력을 갖게 해주는 역할을 수행하는 장치&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;다중화기-분류&quot;&gt;다중화기 분류&lt;/h2&gt;
&lt;h3 id=&quot;주파수-분할-다중화fdm-frequency-division-multiplexing&quot;&gt;주파수 분할 다중화(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FDM&lt;/code&gt;: Frequency Division Multiplexing)&lt;/h3&gt;
&lt;p&gt;통신 회선의 주파수를 여러 개의 작은 대역 폭으로 분할하여 여러 대의 단말기가 동시에 사용할 수 있도록 한 방식&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;채널 간의 상호 간섭을 막기 위해 보호 대역이 필요(대신 채널의 이용률을 저하)&lt;/li&gt;
  &lt;li&gt;전송 매체의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;유효 대역폭&lt;/code&gt;이 클 때 사용&lt;/li&gt;
  &lt;li&gt;전송 매체를 지나는 신호는 &lt;strong&gt;아날로그 신호&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;비용 저렴, 구조 간단&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;비동기식 전송&lt;/strong&gt;이며, &lt;strong&gt;멀티 포인트 방식&lt;/strong&gt;에 적합&lt;/li&gt;
  &lt;li&gt;모뎀의 역할을 겸하므로 &lt;strong&gt;별도 모뎀이 필요 없음&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;전송 지연없이 &lt;strong&gt;실시간 전송&lt;/strong&gt; 가능&lt;/li&gt;
  &lt;li&gt;누화 잡음 및 상호 변조 잡음이 발생&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;시간-분할-다중화tdm-time-division-multiplexing&quot;&gt;시간 분할 다중화(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TDM&lt;/code&gt;: Time Division Multiplexing)&lt;/h3&gt;
&lt;p&gt;한 통신 회선의 대역폭을 일정한 &lt;strong&gt;시간 폭(Time Slot)&lt;/strong&gt;으로 나누어 여러 개의 단말기가 하나의 통신 회선을 사용할 수 있도록 하는 기술&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;전송 매체의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;유효 전송률&lt;/code&gt;이 클 때 사용&lt;/li&gt;
  &lt;li&gt;전송 매체를 지나는 신호는 디지털 신호&lt;/li&gt;
  &lt;li&gt;고가의 비용, 복잡한 기술&lt;/li&gt;
  &lt;li&gt;별도의 모뎀 필요, 누화 잡음 및 상호 변조 잡음이 발생하지 않음&lt;/li&gt;
  &lt;li&gt;전송 지연 없이 실시간 전송이 가능&lt;/li&gt;
  &lt;li&gt;대역폭이 낭비되지 않음&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;동기식-시분할-다중화stdm-synchronous-tdm&quot;&gt;동기식 시분할 다중화(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;STDM&lt;/code&gt;: Synchronous TDM)&lt;/h4&gt;
&lt;p&gt;모든 단말기에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;고정된&lt;/code&gt; 시간 폭을 제공&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;매체&lt;/strong&gt;의 데이터 전송률이 &lt;strong&gt;전송 디지털 신호&lt;/strong&gt;의 데이터 전송률을 &lt;strong&gt;능가할 때&lt;/strong&gt; 사용&lt;/li&gt;
  &lt;li&gt;전송할 데이터가 없는 단말 장치에도 타임 슬롯을 할당(전송 용량의 낭비가 크다)&lt;/li&gt;
  &lt;li&gt;고가의 가격, 접속에 소요되는 시간이 늘어난다&lt;/li&gt;
  &lt;li&gt;전송 용량보다 많은 터미널 수에 접속할 수 없다&lt;/li&gt;
  &lt;li&gt;다중화된 회선의 데이터 전송률 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;gt;=&lt;/code&gt; 접속 장치들의 데이터 전송률의 합&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;비동기식-시분할-다중화atdm-asynchronous-tdm-통계적지능적확률적&quot;&gt;비동기식 시분할 다중화(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ATDM&lt;/code&gt;: Asynchronous TDM, 통계적/지능적/확률적)&lt;/h4&gt;
&lt;p&gt;접속된 단말기 중 실제로 전송할 데이터가 있는 단말기에만 시간 폭을 제공&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;매체의 데이터 전송률이 전송 디지털 신호의 데이터 전송률을 &lt;strong&gt;능가하지 않을 때&lt;/strong&gt; 사용하는 다중화 방식&lt;/li&gt;
  &lt;li&gt;전송 매체상의 전송 프레임마다 해당 채널의 시간 슬롯이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;가변적&lt;/code&gt;으로 할당&lt;/li&gt;
  &lt;li&gt;전송 용량의 &lt;strong&gt;낭비가 적다&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;저가의 가격, 접속에 소요되는 시간이 단축&lt;/li&gt;
  &lt;li&gt;같은 속도일 경우 동기식 다중화기보다 &lt;strong&gt;더 많은 수의 터미널에 접속&lt;/strong&gt; 가능&lt;/li&gt;
  &lt;li&gt;다중화된 회선의 데이터 전송률 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;&lt;/code&gt; 접속 장치들의 데이터 전송률의 합&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;코드-분할-다중화cdm-code-division-multiplexing&quot;&gt;코드 분할 다중화(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CDM&lt;/code&gt;: Code Division Multiplexing)&lt;/h3&gt;
&lt;p&gt;아날로그 형태인 음성을 디지털 신호로 전환한 후 난수를 부가하여, 여러 개의 &lt;strong&gt;디지털 코드로 변환해 다중화&lt;/strong&gt;하는 것으로 각 채널에 고유한 코드를 부여하여 해당 코드를 가진 단말기만을 인식하게 하는 방식&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;확산 대역 방식&lt;/strong&gt;(하나의 채널로 전달되는 데이터가 여러 경로를 통해 전달)&lt;/li&gt;
  &lt;li&gt;다원 접속 방식은 FDMA, TDMA, CDMA를 모두 사용&lt;/li&gt;
  &lt;li&gt;전송 용량 증가, 전송 품질 및 보안성 향상&lt;/li&gt;
  &lt;li&gt;이동 통신에 사용되는 통신 방식&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;WAP&lt;/strong&gt;(Wireless Application Protocol, 무선 응용 프로그램)&lt;br /&gt;
무선 단말기상에서 인터넷을 이용할 수 있도록 해주는 프로토콜의 총칭&lt;/p&gt;

    &lt;p&gt;WAP에서 사용되는 주 언어가 WML(무선 마크업 언어)이며 휴대 전화와 같은 소형 이동 장비에 맞게 XML 기반으로 설계&lt;br /&gt;
HTML을 수신하는 경우 이를 컴파일해서 최적화된 이진 데이터로 변환하여 이동 단말에 송신&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Cell&lt;/strong&gt;&lt;br /&gt;
전파 출력을 낮추어 발사하면 전파가 미치는 영역은 좁아지지만 서비스 지역을 여러 개의 작은 영역으로 분할할 수 있게 된다. 작은 영역마다 기지국을 두어 주파수를 발사하면 동일한 주파수를 다른 작은 영역에서도 사용할 수 있게 된다.&lt;/p&gt;

    &lt;p&gt;이 때, &lt;strong&gt;작은 영역을 셀&lt;/strong&gt;이라고 하며 일정한 영역을 여러 개의 셀로 구분하여 사용하면 &lt;strong&gt;채널 수&lt;/strong&gt;를 셀의 영역 수의 배수만큼 &lt;strong&gt;늘릴 수 있다는 장점&lt;/strong&gt;이 있다&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Hand-Off&lt;/strong&gt;&lt;br /&gt;
이동 전화 이용자가 하나의 기지국에서 다른 기지국으로 이동하는 과정에서 통화가 끊기지 않게 이어주는 기능
    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;strong&gt;소프트&lt;/strong&gt;(Soft) 핸드오프&lt;br /&gt;
&lt;strong&gt;기지국과 기지국&lt;/strong&gt; 간에 발생하는 핸드오프 방식으로 하나의 기지국이 이동 전화 이용자의 채널을 먼저 확보하여 &lt;strong&gt;연결한 후&lt;/strong&gt;, 현재 사용 중인 채널의 연결을 끊는 방식&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;strong&gt;하드&lt;/strong&gt;(Hard) 핸드오프&lt;br /&gt;
&lt;strong&gt;교환기와 교환기&lt;/strong&gt; 간에 발생하는 핸드오프 방식으로 기지국이 &lt;strong&gt;기존 신호를 끊은 뒤&lt;/strong&gt; 다른 기지국으로 신호를 넘기는 방식&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;strong&gt;소프터&lt;/strong&gt;(Softer) 핸드오프&lt;br /&gt;
&lt;strong&gt;기지국 내 섹터 간에 발생&lt;/strong&gt;하는 핸드오프 방식으로 같은 기지국 내의 특정 섹터에서 통화하다가 다른 섹터 영역으로 통화 접근을 할 때 소프트 핸드오프와 같은 방법으로 통화 채널을 연결&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Roaming&lt;/strong&gt;&lt;br /&gt;
이동 통신 가입자가 가입된 관리 지역을 벗어나 어디서나 자유롭게 통신할 수 있는 기술&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Bluetooth&lt;/strong&gt;&lt;br /&gt;
휴대폰끼리 또는 휴대폰과 PC 간에 사진이나 벨소리 등의 파일을 전송하는 무선 전송 기술&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;L2CAP&lt;/strong&gt;(Logical Link Control And Adaptation Protocol)&lt;br /&gt;
블루투스 베이스밴드의 상위에 위치하는 프로토콜이며 상위의 프로토콜 스택에 대하여 다중 통신 기능, 데이터의 분할과 조합, 오류 제어, 인증, 암호화를 정의&lt;/p&gt;

    &lt;p&gt;기본적으로 Connection-Oriented 프로토콜을 제공하지만 Connectionless 방식도 제공한다. 하지만 Connectionless 방식은 많이 사용 되지 않는다. 고정된 최대 크기 만큼의 Reliable한 전송을 제공한다. L2CAP의 전송 Reliability는 설정이 가능하며 3가지 정책이 사용 가능하다.&lt;/p&gt;
    &lt;ol&gt;
      &lt;li&gt;재전송를 하지 않는다&lt;/li&gt;
      &lt;li&gt;모든 전송이 실패하기 전까지 재전송 시도&lt;/li&gt;
      &lt;li&gt;특정 시간(0-1279 miliseconds) 후까지 ack이 오지 않았을 경우 패킷을 버리고 큐에 보관된 다음 패킷을 전송.(이 경우는 시간에 따라서 데이터가 전송되어야 할 경우 유효하다)&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;역-다중화기inverse-multiplexer&quot;&gt;역 다중화기(Inverse Multiplexer)&lt;/h2&gt;
&lt;p&gt;하나의 통신 회선으로 데이터를 전송받은 것을 두 개의 음성 대역 회선으로 나누는 장치&lt;/p&gt;

&lt;p&gt;광대역 통신 회선을 사용하기 않고 9600bps 이상의 광대역 속도를 얻을 수 있어 &lt;strong&gt;통신 비용을 줄일 수 있다&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;고속의 선로를 두 개의 낮은 선로로 전송한 후 다시 원래 속도로 변환&lt;/li&gt;
  &lt;li&gt;두 개의 음성 대역 회선을 이용하여 &lt;strong&gt;광 대역 통신 속도&lt;/strong&gt;를 얻을 수 있다&lt;/li&gt;
  &lt;li&gt;두 회선의 전송 속도의 차이로 상대적인 전송 지연이 발생할 수 있고 이를 조절하기 위한 &lt;strong&gt;순환 기억 장치&lt;/strong&gt; 필요&lt;/li&gt;
  &lt;li&gt;여러 가지 변화에 대응해 여러 가지의 전송 속도를 얻을 수 있다&lt;/li&gt;
  &lt;li&gt;음성 대역의 변/복조기 역할을 수행&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;위성-통신&quot;&gt;위성 통신&lt;/h2&gt;
&lt;p&gt;인공위성을 통하여 지구상의 어느 곳이든 통신할 수 있도록 하는 통신 방법&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;주로 3 ~ 30GHz인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHF&lt;/code&gt;(Super high frequency, 초고주파) 주파수를 이용하여 통신 위성의 중계를 거쳐 먼 거리까지 통신하는 방식&lt;/li&gt;
  &lt;li&gt;항상 마주 보이는 안테나가 있어야 통신이 가능(많은 곳에 위성 중계기가 필요)&lt;/li&gt;
  &lt;li&gt;하나의 정지 위성 Cover 비율이 이론적으로 지구 표면에 42.4%이므로 3개의 정지 위성만 있으면 극 지역을 제외한 지구상의 어떤 지점과도 통신이 가능&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;점 대 점&lt;/strong&gt;에서만 가능&lt;/li&gt;
  &lt;li&gt;전송 지연이 존재&lt;/li&gt;
  &lt;li&gt;지구국은 &lt;strong&gt;교외에 설치&lt;/strong&gt;해야 한다(동일 채널 잡음이 발생하므로)&lt;/li&gt;
  &lt;li&gt;보안성이 떨어지며 &lt;strong&gt;기후에 영향&lt;/strong&gt;을 받는다&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul class=&quot;task-list&quot;&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;위성 통신의 기본 구조
    &lt;ul&gt;
      &lt;li&gt;기기계 : 구조계, 자세 제어계, 열 제어계, 전력계, 추진계, 원격 측정 명령계&lt;/li&gt;
      &lt;li&gt;통신계 :
        &lt;ul&gt;
          &lt;li&gt;위성 중계기(트랜스 폰더) : 지구국(지상)으로부터 송신되어 온 신호 주파수를 송신 주파수로 바꿔 &lt;strong&gt;증폭하는 역할&lt;/strong&gt; 수행&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 03 Apr 2021 00:00:00 +0900</pubDate>
        <link>https://many258.github.io/study/data-communication-line-sharing/</link>
        <guid isPermaLink="true">https://many258.github.io/study/data-communication-line-sharing/</guid>
        
        <category>데이터통신</category>
        
        
        <category>study</category>
        
      </item>
    
      <item>
        <title>[데이터통신] 데이터 오류 제어</title>
        <description>&lt;h1 id=&quot;데이터-오류-제어&quot;&gt;데이터 오류 제어&lt;/h1&gt;
&lt;h2 id=&quot;오류-발생-원인&quot;&gt;오류 발생 원인&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;상호 변조 잡음&lt;/strong&gt;(Inter Modulation Noise)&lt;br /&gt;
서로 다른 주파수들이 똑같은 전송 매체를 공유할 때 이 주파수들이 서로의 합과 차의 신호를 발생함으로써 발생되는 채널의 간섭 현상&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;누화 잡음&lt;/strong&gt;(Cross Talk Noise)&lt;br /&gt;
인접한 전송 매체의 &lt;strong&gt;전기적인 신호의 결합&lt;/strong&gt;으로 생기는 잡음&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;동일 채널 잡음&lt;/strong&gt;&lt;br /&gt;
두 개 이상의 채널이 &lt;strong&gt;동일한 주파수를 사용&lt;/strong&gt;하게 될 때 발생하는 잡음&lt;br /&gt;
위성 통신에서 사용하는 주파수와 도심속에서 사용하는 주파수가 가끔 동일할 때 이러한 잡음이 발생한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;방사 잡음&lt;/strong&gt;&lt;br /&gt;
높은 주파수 대역을 사용하는 &lt;strong&gt;위성 통신에서 주로 발생&lt;/strong&gt;하는 잡음으로 전송 신호의 주 신호에서 새어 나가는 신호를 의미&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;지연 왜곡&lt;/strong&gt;(Delay Distortion)&lt;br /&gt;
주로 하드와이어 전송 매체에서 발생되며, 전송 매체를 통한 신호 전달이 주파수에 따라 그 속도를 달리함으로써 유발되는 신호 손상 현상으로 주파수의 중심 주파수와 양쪽 끝 주파수 강도의 차이 때문에 발생하는 오류&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;열 잡음&lt;/strong&gt;(Thermal Noise), &lt;strong&gt;백색 잡음&lt;/strong&gt;(White Noise)&lt;br /&gt;
전송 매체 내에서 &lt;strong&gt;온도 변화에 따른 전자 운동량이 변함&lt;/strong&gt;으로써 발생하는 잡음으로 모든 전자/전기적인 전송 매체에서 발생.
&lt;strong&gt;열 잡음은 위성 통신에서는 발생하지 않음&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;손실, 감쇠 현상, 누화 잡음, 충격성 잡음&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;오류-제어-방식&quot;&gt;오류 제어 방식&lt;/h2&gt;
&lt;h3 id=&quot;순방향전진-오류-수정fec--forward-error-correction&quot;&gt;순방향(전진) 오류 수정(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FEC&lt;/code&gt; : Forward Error Correction)&lt;/h3&gt;
&lt;p&gt;송신측에서 전송 프레임에 잉여 비트를 추가하여 수신츠겡서 오류를 검사하고 &lt;strong&gt;수정까지 할 수 있도록&lt;/strong&gt; 하여 송신측에서는 같은 프레임을 &lt;strong&gt;재전송하는 일이 없도록&lt;/strong&gt; 하는 방식&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;종류 : 해밍코드, 상승 코드&lt;/li&gt;
  &lt;li&gt;송신 측이 한 개이고 수신측이 여러 개일 경우에 사용하는 방식&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;역방향후진-오류-수정bec--backward-error-correction&quot;&gt;역방향(후진) 오류 수정(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BEC&lt;/code&gt; : Backward Error Correction)&lt;/h3&gt;
&lt;p&gt;송신측에서 전송되어 온 프레임들 중 오류가 있는 &lt;strong&gt;프레임을 판단&lt;/strong&gt;하여 오류가 발생되면 송신측에 통보하여 &lt;strong&gt;다시 재전송&lt;/strong&gt; 받는 방식&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;종류 : CRC, 패리티 비트, BSC(블록 합 : Block Sum Check)&lt;/li&gt;
  &lt;li&gt;ARQ(Automatic Repeat reQuest)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;arqautomatic-repeat-request--오류-검출-후-재전송&quot;&gt;ARQ(Automatic Repeat reQuest : 오류 검출 후 재전송)&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Stop-And-Wait ARQ&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;한 번에 한 개의 프레임&lt;/strong&gt;을 전송&lt;br /&gt;
한 개의 프레임을 전송한 후 수신측의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ACK&lt;/code&gt;나 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NAK&lt;/code&gt;를 기다린다&lt;br /&gt;
ACK → 다음 프레임 전송&lt;br /&gt;
NAK, 일정시간 무응답 → 같은 프레임 재전송&lt;br /&gt;
재전송이 있을 수 있으므로 송신측에 버퍼가 한 개 필요&lt;br /&gt;
오버헤드로 인한 부담이 크다&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BASIC&lt;/code&gt; 전송 절차에서 사용하는 오류 제어 방식&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Go-Back-N ARQ&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;여러 개의 프레임&lt;/strong&gt;을 전송&lt;br /&gt;
수신측의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NAK&lt;/code&gt; 신호가 도착하지 않으면 계속적으로 전송&lt;br /&gt;
수신측의 &lt;strong&gt;응답이 없으면 긍정적인 응답&lt;/strong&gt;으로 간주&lt;br /&gt;
오류가 발생하면 &lt;strong&gt;오류가 발생한 프레임부터 다시&lt;/strong&gt; 전송&lt;br /&gt;
&lt;strong&gt;중복 전송 문제&lt;/strong&gt;가 발생&lt;br /&gt;
오류가 적은 전송일 때 효율적&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HDLC&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SDLC&lt;/code&gt; 전송 절차에서 사용되는 오류 제어 방식&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Selective-Repeat ARQ&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;여러 개의 프레임&lt;/strong&gt;을 전송&lt;br /&gt;
수신측의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NAK&lt;/code&gt; 신호가 도착하지 않으면 계속적으로 전송&lt;br /&gt;
수신측의 &lt;strong&gt;응답이 없으면 긍정적인 응답&lt;/strong&gt;으로 간주&lt;br /&gt;
오류가 발생하면 &lt;strong&gt;오류가 발생한 프레임&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;만&lt;/code&gt; 재전송&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;중복 전송 문제를 보완&lt;/strong&gt;한 방식&lt;br /&gt;
일부분을 재전송하면 수신측에서는 재결합을 해야 하므로 &lt;strong&gt;많은 버퍼&lt;/strong&gt;가 필요&lt;br /&gt;
기술적으로 복잡하여 Go-Back-N ARQ에 비해 사용되는 경우가 적다&lt;br /&gt;
&lt;strong&gt;오류가 많을 때&lt;/strong&gt; 주로 사용&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HDLC&lt;/code&gt; 전송 절차에서 사용되는 오류 제어 방식&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Dynamically ARQ&lt;/strong&gt;&lt;br /&gt;
동적으로 프레임을 전송&lt;br /&gt;
수신측에서는 &lt;strong&gt;오류 발생 확률&lt;/strong&gt;을 송신측에 전송&lt;br /&gt;
송신측은 적절한 개수를 수신측에 동적으로 전송&lt;br /&gt;
전송 효율의 향상 기대&lt;br /&gt;
제어 기술이 매우 복잡하고 비용 문제로 인해 거의 사용하지 않음&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;오류-검출-방식&quot;&gt;오류 검출 방식&lt;/h2&gt;
&lt;h3 id=&quot;해밍코드hamming-code&quot;&gt;해밍코드(Hamming Code)&lt;/h3&gt;
&lt;p&gt;데이터비트에 몇 개의 체크비트가 추가된 형태로 수신측에서 에러 비트의 위치와 정정이 가능하므로 &lt;strong&gt;자기 정정 부호&lt;/strong&gt;라고 한다&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1비트의 오류만 수정이 가능하며, 2비트의 오류 검출은 가능하나 수정을 불가능하다&lt;/li&gt;
  &lt;li&gt;정보 비트 외에 잉여 비트가 많이 필요하므로 많은 양의 데이터 전송에 유리하다&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;$2^p &amp;gt;= d + p + 1$&lt;br /&gt;
&lt;sub&gt;d: 데이터 비트 / p: 체크 비트&lt;/sub&gt;&lt;/p&gt;

  &lt;p&gt;패리티 비트의 위치 = $2^n, (n=0,1,2…)$&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;데이터 크기가 8비트라 가정할 때, 위 식에 대입 시 패리티 비트는 4가 되어 4비트의 추가 비트가 필요하다&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/network/data-communication/hamming-code.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;짝수패리티라 가정할 때, 각 검사 시 총 ‘1’의 개수가 짝수가 되도록 확인하여 Pn 값을 입력한다&lt;/p&gt;

&lt;p&gt;P1 : 1번째 비트에서 시작하여 1비트 간격으로 검사&lt;br /&gt;
P2 : 2번째 비트에서 시작하여 2비트 간격으로 검사&lt;br /&gt;
P3 : 4번째 비트에서 시작하여 4비트 간격으로 검사&lt;br /&gt;
P4 : 8번째 비트에서 시작하여 8비트 간격으로 검사&lt;br /&gt;
= Pn : P$^{n-1}$번째 비트에서 시작하여 P$^{n-1}$비트 간격으로 검사&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/network/data-communication/hamming-code-detection.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위 테이블에서 P1, P3을 보면 총 ‘1’의 개수가 홀수이므로 오류임을 알 수 있다. 그렇기 때문에 P1, P3을 ‘1’로 오류가 없는 P2, P3를 ‘0’으로 가정한다.&lt;/p&gt;

&lt;p&gt;이 때, P4/P3/P2/P1(컴퓨터가 인식하는 2진수는 오른쪽부터 시작하므로)으로 나열했을 때 각 위의 값을 넣어주면 최종적으로 0101 값이 구해지고 결과값은 5이므로 5번째 비트가 오류임을 확인할 수 있다.&lt;/p&gt;

&lt;h3 id=&quot;상승-코드부호-방식&quot;&gt;상승 코드(부호) 방식&lt;/h3&gt;
&lt;p&gt;순차적 디코딩과 한계값 디코딩을 사용하여 오류를 수정&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;여러 개의 비트 오류가 있더라도 모두 수정할 수 있는 방식&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;군-계수-검사-방식&quot;&gt;군 계수 검사 방식&lt;/h3&gt;
&lt;p&gt;전송되는 정보 비트열 중 ‘1’의 개수를 세어서 2진수로 변환한 다음 &lt;strong&gt;2진수 끝의 두 비트&lt;/strong&gt;를 전송되는 정보 비트열에 추가하여 전송하는 방식&lt;/p&gt;

&lt;h3 id=&quot;패리티-비트&quot;&gt;패리티 비트&lt;/h3&gt;
&lt;p&gt;잉여 비트를 추가하여 전송 오류의 검출을 위해 사용한다&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;전송 비트 내 ‘1’의 개수가 짝수 또는 홀수 개가 되도록 결정&lt;/li&gt;
  &lt;li&gt;짝수 개의 비트가 오류가 발생할 경우 검출률이 낮아지는 단점 존재&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;수직-중복-검사vrc-vertical-redundancy-check-1차원-패리티&quot;&gt;수직 중복 검사(VRC: Vertical Redundancy Check, 1차원 패리티)&lt;/h3&gt;
&lt;p&gt;오류 검출 방식에서 가장 적은 비용이 들며 가장 널리 사용되는 기법으로 보통 패리티 검사라고 한다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;패리티 비트를 각 정보 비트에 추가하여 패리티 비트를 포함한 정보 비트 내의 ‘1’의 전체 개수를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;짝수&lt;/code&gt;가 되도록 한다&lt;/li&gt;
  &lt;li&gt;패리티 비티의 위치는 고정되지 않고 앞/뒤/중간 어디든 사용 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;세로-중복-검사lrc-longitudinal-redundancy-check-2차원-패리티&quot;&gt;세로 중복 검사(LRC: Longitudinal Redundancy Check, 2차원 패리티)&lt;/h3&gt;
&lt;p&gt;전송 비트를 &lt;strong&gt;일정량의 블록&lt;/strong&gt;으로 묶어서 블록의 맨 마지막에 패리티 비트를 부여&lt;/p&gt;

&lt;h3 id=&quot;순환-중복-방식crc-cycle-redundancy-check&quot;&gt;순환 중복 방식(CRC: Cycle Redundancy Check)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;다항식&lt;/strong&gt; 코드를 사용하여 오류를 검출하는 방식&lt;br /&gt;
정보 비트열 전부를 한 번에 검사하지 않고 &lt;strong&gt;부분적&lt;/strong&gt;으로 중첩되게 검사하므로, 집단/군집 오류 검출 방식이라고도 한다&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;동기식 전송&lt;/strong&gt;에 주로 사용&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HDLC&lt;/code&gt; 프레임의 &lt;strong&gt;FCS&lt;/strong&gt; 블록에서 사용&lt;/li&gt;
  &lt;li&gt;가장 많이 사용되는 오류 검출 방식&lt;/li&gt;
  &lt;li&gt;1개, 2개, 홀수 개의 오류는 완벽하게 검출&lt;/li&gt;
  &lt;li&gt;매우 복잡하나 &lt;strong&gt;오류를 수정할 수 있는 방식이 아님&lt;/strong&gt;을 주의&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;검사-합checksum&quot;&gt;검사 합(Checksum)&lt;/h3&gt;
&lt;p&gt;패리티 검사나 CRC와 같이 중복의 개념을 기반으로 하여 네트워크를 통해 전달된 값이 변경되었는지를 검사하는 값으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;무결성&lt;/code&gt;을 제공&lt;/p&gt;

&lt;p&gt;송신측에서 전송할 모든 데이터를 16 비트 워드 단위로 구분하고 1의 보수를 취한 뒤 그 합에 대한 결과를 전송한다.
수신측은 같은 합을 하여 오류를 검출한다(&lt;strong&gt;검사합의 값이 0 이면 오류 없음, 0이 아니면 오류 있음&lt;/strong&gt;)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;간단한 방식이나 워드의 &lt;strong&gt;순서가 바뀌는 오류에 대한 검출은 불가&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;보통 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;16비트&lt;/code&gt; 워드 단위로 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;rs-부호reedsolomon-error-correction&quot;&gt;RS 부호(Reed–Solomon error correction)&lt;/h3&gt;
&lt;p&gt;Reed와 Solomon이 개발한 군집 형태의 오류를 수정할 수 있는 코드로 콤팩트 디스크에 사용되는 CIRC(교차 인터리브 리드 솔로몬 부호)이다. 하드 디스크에 사용된 LDC(긴거리 부호) 와 DVD에 사용된 RSPC(리드 솔로몬 적부호) 등이 있다.&lt;/p&gt;
</description>
        <pubDate>Thu, 01 Apr 2021 00:00:00 +0900</pubDate>
        <link>https://many258.github.io/study/data-communication-error-control/</link>
        <guid isPermaLink="true">https://many258.github.io/study/data-communication-error-control/</guid>
        
        <category>데이터통신</category>
        
        
        <category>study</category>
        
      </item>
    
      <item>
        <title>[IT이슈] 2021년 가트너 9가지 기술 전략</title>
        <description>&lt;h1 id=&quot;2021년-가트너-기술-전략&quot;&gt;2021년 가트너 기술 전략&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/IT-issue/gartner-trends-2021.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;embed-responsive embed-responsive-16by9&quot;&gt;
  &lt;iframe class=&quot;embed-responsive-item&quot; width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/s3rlYWcwdDY&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;
  &lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 class=&quot;align-center&quot; id=&quot;사람-중심people-centricity&quot;&gt;사람 중심(People Centricity)&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;팬데믹 사태가 사람들의 일하는 방식 그리고 조직과 상호작용하는 방식을 변화시켰을지라도 여전히 사람이 모든 기업의 중심입니다. 따라서, 현재와 같은 환경에서 기업이 작동하기 위해선 프로세스를 디지털화해야 할 필요가 있습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;행동인터넷iob-internet-of-behaviors&quot;&gt;행동인터넷(IoB, Internet of Behaviors)&lt;/h3&gt;
&lt;p&gt;IoB는 데이터를 수집하고 사용하여 사람의 행동을 유도하거나 변경하는 것을 의미한다.&lt;/p&gt;

&lt;p&gt;디지털과 물리적인 세계에서 일상 생활에 대한 데이터를 수집할 수 있는 기술이 증가함에 따라, 데이터를 사람들의 행동에 영향을 미치는 데 사용할 수 있게 되었습니다. 그러나 행동 인터넷은 사용 목적과 결과에 따라 윤리적, 사회적인 영향을 주기도 한다는 점을 유의해야 합니다.&lt;/p&gt;

&lt;h3 id=&quot;전체-경험tx-total-experience--통합-경험&quot;&gt;전체 경험(TX, Total Experience = 통합 경험)&lt;/h3&gt;
&lt;p&gt;다중 경험(MX, MultieXperience), 고객 경험(CX, Customer eXperience), 직원 경험(EX, Employee eXperience) 및 사용자 경험(UX, User eXperience)을 결합한 것을 의미한다. 전체 경험 목표는 기술부터 직원, 고객 및 사용자에 이르기까지의 이러한 모든 요소가 교차하는 전반적인 경험을 개선하는 것이다.&lt;/p&gt;

&lt;h3 id=&quot;개인정보보호-강화-컴퓨팅privacy-enhancing-computation&quot;&gt;개인정보보호 강화 컴퓨팅(Privacy-Enhancing Computation)&lt;/h3&gt;
&lt;p&gt;개인 정보 보호 강화 컴퓨팅에는 사용되는 동안 데이터 처리와 분석을 통해 데이터를 보호하는 세 가지 기술이다.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;민감한 데이터를 처리하거나 분석할 수 있는 신뢰할 수 있는 환경을 제공한다.&lt;/li&gt;
  &lt;li&gt;분산된 방식으로 처리 및 분석을 수행한다.&lt;/li&gt;
  &lt;li&gt;처리 또는 분석 전에 데이터와 알고리즘을 암호화한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이처럼 개인정보보호 강화 컴퓨팅 기술은 개인적인 데이터를 노출하지 않으며, 이 접근 방식은 개인 정보 또는 보안을 유지하면서 데이터를 공유해야 하는 필요성이 증가할 수 있도록 특별히 설계되어야 한다.&lt;/p&gt;

&lt;h2 id=&quot;위치-독립성location-independence&quot;&gt;위치 독립성(Location Independence)&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;COVID-19는 조직의 생태계에서 물리적인 공간을 사라지게 했습니다. 이러한 새로운 형태로 비즈니스가 유지되기 위해선 기술의 전환이 필요합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;분산-클라우드distributed-cloud&quot;&gt;분산 클라우드(Distributed Cloud)&lt;/h3&gt;
&lt;p&gt;분산 클라우드는 퍼블릭 클라우드 서비스가 서로 다른 물리적 위치에 분산되어 있지만 운영, 업데이트, 서비스 개선 등은 퍼블릭 클라우드 제공자가 담당하는 것을 의미한다.&lt;/p&gt;

&lt;p&gt;분산 클라우드는 다음과 같은 이점을 지니고 있습니다.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;데이터 비용을 절감시키고 특정한 지역에 있어야 하는 데이터 관련 규제 법률을 수용할 수 있게 합니다.&lt;/li&gt;
  &lt;li&gt;클라우드 서비스가 로컬 또는 반 로컬 서브넷에 존재하기 때문에 네트워크 장애 위험을 감소시켜 줍니다.&lt;/li&gt;
  &lt;li&gt;클라우드 서비스를 호스팅하거나 사용할 수 있는 영역의 수와 가용성을 매우 증가시킬 수 있습니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;가트너는 분산 클라우드가 클라우드의 미래라고 보며, 2024년까지 대부분의 클라우드 서비스 플랫폼이 필요에 따라 분산 클라우드 서비스를 제공할 것으로 전망하고 있습니다.&lt;/p&gt;

&lt;h3 id=&quot;어디서나-운영anywhere-operation&quot;&gt;어디서나 운영(Anywhere Operation)&lt;/h3&gt;
&lt;p&gt;COVID-19에서 기업이 성공적으로 부상하려면 어디서나 운영 모델이 필수적이다. 핵심적으로 이 운영 모델은 고객, 고용주 및 비즈니스 파트너가 물리적으로 원격 환경에서 운영되는 곳 어디에서나 비즈니스에 접근하고 제공하고 활성화할 수 있도록 해야 한다.&lt;/p&gt;

&lt;p&gt;어디서나 작동하는 모델은 ‘디지털 우선, 원격 우선(Digital first, Remote first)’이다.&lt;/p&gt;

&lt;h3 id=&quot;사이버-보안-메시cybersecurity-mesh&quot;&gt;사이버 보안 메시(Cybersecurity Mesh)&lt;/h3&gt;
&lt;p&gt;자신 또는 개인이 어디에 있든 보안 경계 밖에 존재하는 모든 디지털 자산에 안전하게 접근할 수 있도록 하는 기술을 의미하며, 확장 가능하고 유연하며 안정적인 사이버 보안 제어에 대한 분산 아키텍처 접근 방식이다.&lt;/p&gt;

&lt;p&gt;이제 많은 자산이 기존 보안 경계 외부에 존재한다. 사이버 보안망은 기본적으로 사람이나 사물의 신원과 위치를 중심으로 보안의 경계가 정의되도록 합니다. 이러한 사이버 보안망은 정책 조정을 중앙 집중화하고 정책 시행을 분산하여 더욱 모듈화되고 주의가 필요한 보안 접근 방식을 가능하게 합니다.&lt;/p&gt;

&lt;h2 id=&quot;회복-탄력성resilient-delivery&quot;&gt;회복 탄력성(Resilient Delivery)&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;전 세계의 불황은 언제나 존재해왔습니다. 조직이 이에 대응하고 적응한다면 수 많은 혼란을 극복할 수 있을 것입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;지능형-구성-가능한-비지니스intelligent-composable-business&quot;&gt;지능형 구성 가능한 비지니스(Intelligent Composable Business)&lt;/h3&gt;
&lt;p&gt;현재 상황에 따라 적응하고 근본적으로 재정렬할 수 있는 비즈니스를 의미한다.&lt;/p&gt;

&lt;p&gt;끊임없이 증가하는 속도 변화에 따라 조직이 나아가기 위해선 모듈화, 자율성, 조정, 발견을 기반으로 결합을 강조하는 사고방식을 갖추어야 합니다. 또한 조직이 디지털 트렌스포메이션을 더욱 빠르게 추진하려면 디지털 비즈니스 전략을 가속화하고, 이에 따라 현재 이용할 수 있는 데이터를 기반으로 민첩하고 빠른 비즈니스 결정을 내려야 합니다.&lt;/p&gt;

&lt;p&gt;이를 성공적으로 수행하기 위해 조직은 정보에 대한 더 나은 액세스를 가능하게 하고 더 나은 통찰력으로 정보를 보강하며 해당 통찰력의 의미에 신속하게 대응할 수 있는 능력을 갖추어야 한다. 여기에는 조직 전체의 자율성과 민주화가 포함되어 비효율적인 프로세스에 의해 방해받지 않고 기업의 일부가 신속하게 대응할 수 있다.&lt;/p&gt;

&lt;h3 id=&quot;ai-엔지니어링ai-engineering&quot;&gt;AI 엔지니어링(AI Engineering)&lt;/h3&gt;
&lt;p&gt;강력한 AI 엔지니어링 전략은 AI 투자의 전체 가치를 제공하면서 AI 모델의 성능, 확장성, 해석 가능성 및 안정성을 촉진한다. AI 프로젝트는 종종 유지 보수성, 확장성 및 거버넌스와 관련된 문제에 직면하여 대부분의 조직에 문제가 될 수 있다.&lt;/p&gt;

&lt;p&gt;AI 엔지니어링은 경로를 제공하여 AI를 전문적이고 격리된 프로젝트 세트가 아닌 주류 DevOps 프로세스의 일부로 구현된다. 여러 AI 기술의 조합을 운영할 때 가치에 대한 명확한 경로를 제공하면서 AI 과대광고를 자제시키기 위해 다양한 분야를 통합한다. 또 AI 엔지니어링의 거버넌스 측면으로 인해 ‘책임감있는 AI (Responsible AI)’가 신뢰, 투명성, 윤리, 공정성, 해석 가능성 및 규정 준수 문제를 처리하기 위해 등장하고 있다. 이에 대응해야 될 것이다.&lt;/p&gt;

&lt;p&gt;즉, 그것은 AI 책임의 운영화로 AI 솔루션을 개발하거나 사용하는 모든 조직은 AI 위험이 브랜드를 위태롭게 하거나 규제 조치를 취하거나 보이콧으로 이어지거나 비즈니스 가치를 파괴하지 않도록 사전에 대처해야 한다.&lt;/p&gt;

&lt;h3 id=&quot;초자동화hyperautomation&quot;&gt;초자동화(Hyperautomation)&lt;/h3&gt;
&lt;p&gt;조직에서 자동화할 수 있는 것은 무엇이든 자동화해야 한다는 것이다.&lt;/p&gt;

&lt;p&gt;초자동화는 효율적이지 않은 레거시 비즈니스 프로세스를 보유한 조직이 주도하여 조직에 막대한 비용과 광범위한 문제를 야기한다. 많은 조직들이 희박하거나, 최적화되거나, 연결되거나, 깨끗하거나, 명시적이지 않은 기술의 ‘패치워크(patchwork)’에 의해 지원을 받는다. 동시에 디지털 비즈니스의 가속화는 효율성과 속도, 민주화를 필요로 한다. 효율성, 효율성, 비즈니스 민첩성에 집중하지 않는 조직은 뒤처질 것이다.&lt;/p&gt;

&lt;h3 id=&quot;참고자료&quot;&gt;참고자료&lt;/h3&gt;
&lt;p&gt;2021 가트너 전략 기술 트랜드&lt;br /&gt;
https://www.wedesignx.com/knowledge/2021-gartner-strategic-technology-trend-top-9&lt;/p&gt;
</description>
        <pubDate>Wed, 31 Mar 2021 00:00:00 +0900</pubDate>
        <link>https://many258.github.io/study/it-issue-gartner/</link>
        <guid isPermaLink="true">https://many258.github.io/study/it-issue-gartner/</guid>
        
        <category>IT트랜드</category>
        
        
        <category>study</category>
        
      </item>
    
      <item>
        <title>[데이터통신] 데이터 전송 제어</title>
        <description>&lt;h1 id=&quot;데이터-링크-제어&quot;&gt;데이터 링크 제어&lt;/h1&gt;
&lt;p&gt;데이터 통신망에 접속된 컴퓨터나 단말 장치가 오류 없이 투명한 정보를 효율적이고 원할하게 송/수신하기 위하여 데이터 통신 시스템이 갖추어야 할 제어 기술로 데이터 입출력, 동기 제어, 오류 제어 등을 포함한다&lt;/p&gt;

&lt;h1 id=&quot;데이터-전송-제어-절차&quot;&gt;데이터 전송 제어 절차&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;회선접속&lt;br /&gt;
  일반 교환망에서의 물리적인 접속 단계&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;데이터 링크의 확립&lt;br /&gt;
  데이터 송수신을 위한 논리적인 경로를 구성하는 단계&lt;br /&gt;
  (링크 확립 방법 : &lt;strong&gt;Selection&lt;/strong&gt;, &lt;strong&gt;Polling&lt;/strong&gt;)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;데이터 전송&lt;br /&gt;
  송수신측 간의 메시지 전송 단계&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;데이터 링크의 해제 통보 &lt;br /&gt;
  링크 확립을 종료하는 단계로 논리적인 경로를 해제하는 단계&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;회선 절단&lt;br /&gt;
  교환망에 연결된 회선 접속 단계로 물리적인 접속을 해제하는 단계&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;데이터-전송-프레임&quot;&gt;데이터 전송 프레임&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;전송 프레임&lt;/strong&gt; : 수신측의 입장에서 보면 전송되는 모든 정보가 ‘1’과 ‘0’으로 수신되는데, 이 때 수신된 비트열이 어디서부터 제어 영역이고 어디서부터 정보 영역인지를 미리 &lt;strong&gt;약속&lt;/strong&gt;하지 않는다면 정상적으로 수신된 비트 열일지라도 다른 의미를 갖는 정보로 해석될 수 있다.&lt;/p&gt;

&lt;p&gt;따라서, 7비트(&lt;strong&gt;문자 지향 프레임&lt;/strong&gt;), 8비트(&lt;strong&gt;바이트 지향 프레임&lt;/strong&gt;, DEC사의 DDCMP), &lt;strong&gt;비트 지향 프레임&lt;/strong&gt;을 부여하여 송수신하도록 해야 한다. 이처럼 송신측에서 발생된 정보의 정확한 전송을 위해 사용자 정보에 헤더와 트레일러를 부과하는 과정을 &lt;strong&gt;캡슐화&lt;/strong&gt;라고 하며, 이러한 형식화된 데이터 블록을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;프레임&lt;/code&gt;이라고 한다&lt;/p&gt;

&lt;h2 id=&quot;문자-지향-프레임&quot;&gt;문자 지향 프레임&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;IBM사의 &lt;strong&gt;BASIC&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;전송 방향은 &lt;strong&gt;반이중&lt;/strong&gt; 방식으로만 사용&lt;/li&gt;
  &lt;li&gt;회선 연결은 점 대 점 방식뿐만 아니라 멀티 포인트 링크에서도 사용될 수 있다&lt;/li&gt;
  &lt;li&gt;같은 전송 회선만 가능(&lt;strong&gt;종속적&lt;/strong&gt;)&lt;/li&gt;
  &lt;li&gt;오류 제어 방식은 &lt;strong&gt;Stop-And-Wait&lt;/strong&gt; ARQ를 사용&lt;/li&gt;
  &lt;li&gt;오류 검출이 어렵고, 전송 효율이 나쁘다&lt;/li&gt;
  &lt;li&gt;주로 동기 전송 방식을 사용하나 &lt;strong&gt;비동기 전송 방식&lt;/strong&gt;을 사용하기도 한다&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;../../assets/images/network/data-communication/character-oriented-frame.png&quot; alt=&quot;&quot; /&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;BCC(Block Check Character) 검사 범위 : &lt;strong&gt;[Heading - STX - Text - ETX]&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;source : http://egloos.zum.com/nooriry/v/1598115&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;비트-지향-프레임&quot;&gt;비트 지향 프레임&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;ISO의 HDLC, IBM사의 SDLC, 미 국방성 TCP&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;../../assets/images/network/data-communication/bit-oriented-frame.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;source : http://www.rhyshaden.com/hdlc.htm&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;flag&quot;&gt;FLAG&lt;/h3&gt;
&lt;p&gt;프레임 구조의 앞과 뒤를 구분하는 비트 열(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;'01111110'&lt;/code&gt;, ‘7E’)&lt;/p&gt;

&lt;p&gt;통신 회선을 공유하는 모든 다른 프레임들과 구분하는 비트 열로 송신측에서는 송신하기 전에 송신 메시지 앞과 뒤에 추가하여 전송
FLAG 비트를 제외한 모든 비트는 연속된 ‘1’의 비트가 6개 이상이 되지 않도록 강제적으로 ‘0’을 추가하여 송신.&lt;/p&gt;

&lt;p&gt;수신측은 FLAG 비트를 제외한 비트 열에 ‘1’의 문자가 연속적으로 5개가 입력되면 5개 다음에 입력된 ‘0’ 비트를 제거한다. 이처럼 ‘0’을 삽입하고 ‘0’을 제거하여 기본적인 오류를 검출하고 신뢰성 있는 송수신이 되도록 하는 기능을 &lt;strong&gt;비트 투과성&lt;/strong&gt;(Bit Transparency) 또는 &lt;strong&gt;비트 스터핑&lt;/strong&gt;(Bit Stuffing)이라고 한다&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;프레임의 앞과 뒤를 구분&lt;/li&gt;
  &lt;li&gt;동기를 유지&lt;/li&gt;
  &lt;li&gt;비트 투과성으로 기본적인 오류를 검출&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;address&quot;&gt;ADDRESS&lt;/h3&gt;
&lt;p&gt;상대국이나 복합국의 주소를 지정할 때 사용하는 블록으로 기본적으로 &lt;strong&gt;8비트를 사용하며 8바이트&lt;/strong&gt;까지 확장 가능&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1바이트를 사용할 시, 방송용 주소(11111111)와 시험용(00000000)을 제외하면 실제 주소는 254개 부여 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;control&quot;&gt;CONTROL&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;I(Information)&lt;/strong&gt; 프레임
    &lt;ul&gt;
      &lt;li&gt;순수한 정보만을 전송하는 프레임&lt;/li&gt;
      &lt;li&gt;첫 번째 비트가 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;'0'&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;사용자 데이터를 전달하거나 피기백킹 기법을 통해 데이터에 대한 확인 응답을 보낼 때 사용&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;피기백킹&lt;/strong&gt; : 데이터 프레임에 확인응답을 포함시켜 전송하는 것&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;S(Supervisor)&lt;/strong&gt; 프레임
    &lt;ul&gt;
      &lt;li&gt;정보 전송 프레임을 감시/감독하는 프레임으로 흐름제어, 에러 제어를 담당하는 프레임&lt;/li&gt;
      &lt;li&gt;상위 두 비트가 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;'10'&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;RR(00, 수신 완료), REJ(01, 수신 거부), RNR(10, 수신 준비 안 됨)등의 제어 명령이 존재&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;U(Unnumbered)&lt;/strong&gt; 프레임
    &lt;ul&gt;
      &lt;li&gt;통신하기 위한 초기 설정 및 링크 확립과 해제 등의 명령이 있는 프레임&lt;/li&gt;
      &lt;li&gt;상위 두 비트가 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;'11'&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;SMD(Set Mode)의 기능
        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;&lt;strong&gt;NRM&lt;/strong&gt;(Normal Response Mode, UNC, &lt;strong&gt;표준 응답 모드&lt;/strong&gt;)&lt;br /&gt;
주 스테이션이 링크 제어를 담당하며, 부 스테이션은 주 스테이션으로부터 메시지를 수신한 경우에만 데이터를 전송할 수 있다(&lt;strong&gt;반이중 통신&lt;/strong&gt;)&lt;br /&gt;
점 대 점이나 멀티 포인트 불균형 링크 구성에 사용&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;&lt;strong&gt;ARM&lt;/strong&gt;(Asynchronous Response Mode, UAC, &lt;strong&gt;비동기 응답 모드&lt;/strong&gt;)&lt;br /&gt;
주 스테이션이 링크 제어를 담당하며, 부 스테이션은 주 스테이션으로부터 메시지가 없어도 데이터를 전송할 수 있다(&lt;strong&gt;전이중 통신&lt;/strong&gt;)&lt;br /&gt;
점 대 점이나 멀티포인트 불균형 링크 구성에 사용&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;&lt;strong&gt;ABM&lt;/strong&gt;(Asynchronous Balance Mode, BAC, &lt;strong&gt;비동기 균형 모드&lt;/strong&gt;)&lt;br /&gt;
주 스테이션과 부 스테이션의 구분이 없이 동등하다&lt;br /&gt;
링형이나 망형 구조의 균형 링크 구성에 사용(&lt;strong&gt;전이중 통신&lt;/strong&gt;)&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;&lt;strong&gt;SIM&lt;/strong&gt;(Set Initial Mode, 모드 설정 초기화)&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;정보부&quot;&gt;정보부&lt;/h3&gt;
&lt;p&gt;사용자 사이에서 교환되는 정보 메시지 블록의 길이, 구성과 관계없이 송수신 간 협의에 따른다&lt;/p&gt;

&lt;h3 id=&quot;fcsframe-check-sequence-프레임-검사-순서부&quot;&gt;FCS(Frame Check Sequence, 프레임 검사 순서부)&lt;/h3&gt;
&lt;p&gt;주소부/제어부/정보부 블록의 오류를 검사하는 블록으로 오류 검사 방법은 주로 &lt;strong&gt;CRC 방식&lt;/strong&gt;을 사용&lt;/p&gt;

&lt;h3 id=&quot;hdlc-특징&quot;&gt;HDLC 특징&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;전송 방향 : 단방향/반이중/전이중 방식 모두 사용 가능&lt;/li&gt;
  &lt;li&gt;회선 연결 : 점 대 점, 멀티포인트, 루프 방식 모두 사용 가능&lt;/li&gt;
  &lt;li&gt;오류 제어 방식 : ARQ(&lt;strong&gt;Go-Back-N&lt;/strong&gt;, &lt;strong&gt;Seletive-repeat&lt;/strong&gt;) 사용&lt;/li&gt;
  &lt;li&gt;다른 전송 회선도 가능(&lt;strong&gt;독립적&lt;/strong&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;동기식 전송&lt;/strong&gt;으로 전송 효율과 신뢰성이 높다&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;기타-프레임&quot;&gt;기타 프레임&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;SDLC&lt;/strong&gt;(Synchronous Data Link Control)
    &lt;ul&gt;
      &lt;li&gt;HDLC를 기반으로 하는 비트 위주 데이터 링크 제어 프로토콜&lt;/li&gt;
      &lt;li&gt;X.25 패킷 교환망 표준의 한 부분으로 &lt;strong&gt;ITU-T&lt;/strong&gt;에 의해 제정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;LAP-B&lt;/strong&gt;(Link Access Procedure Balanced)
    &lt;ul&gt;
      &lt;li&gt;X.25 패킷 교환망의 표준으로 &lt;strong&gt;ITU-T&lt;/strong&gt;에서 제정한 HDLC 기반으로 하는 비트 위주 프레임&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;LAP-D&lt;/strong&gt;(Link Access Procedure D channel)
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;ISDN&lt;/strong&gt;의 D채널을 위한 프레임 혹은 데이터 링크 제어 프로토콜&lt;/li&gt;
      &lt;li&gt;LAP-B와는 달리 &lt;strong&gt;다중화된 채널을 성립&lt;/strong&gt;시킬 수 있다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;LLC&lt;/strong&gt;(Logical Link Control)
    &lt;ul&gt;
      &lt;li&gt;LAN에서 사용되는 대표적인 프레임.(IEEE802 표준 계열)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;SLIP&lt;/strong&gt;(Serial Line Internet Protocol)
    &lt;ul&gt;
      &lt;li&gt;전화선과 모뎀을 이용하여 인터넷에 접속하기 위한 프레임&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;PPP&lt;/strong&gt;(Point-to-Point Protocol)
    &lt;ul&gt;
      &lt;li&gt;전화선과 모뎀을 이용하여 인터넷에 접속하기 위한 프레임&lt;/li&gt;
      &lt;li&gt;SLIP을 개선하여 &lt;strong&gt;에러를 검출하고 복구&lt;/strong&gt;하는 기능 존재&lt;/li&gt;
      &lt;li&gt;HDLC와 유사한 점이 있으나 &lt;strong&gt;문자 위주 프레임&lt;/strong&gt;이다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 28 Mar 2021 00:00:00 +0900</pubDate>
        <link>https://many258.github.io/study/data-communication-transmission-control/</link>
        <guid isPermaLink="true">https://many258.github.io/study/data-communication-transmission-control/</guid>
        
        <category>데이터통신</category>
        
        
        <category>study</category>
        
      </item>
    
  </channel>
</rss>
