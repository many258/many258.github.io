<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My LifeChronicle</title>
    <description>Be a Imagineer.</description>
    <link>https://many258.github.io/</link>
    <atom:link href="https://many258.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 13 Apr 2021 00:50:01 +0900</pubDate>
    <lastBuildDate>Tue, 13 Apr 2021 00:50:01 +0900</lastBuildDate>
    <generator>Jekyll v4.2.0</generator>
    
      <item>
        <title>[운영체제/OS] 운영체제 발달 과정</title>
        <description>&lt;h1 id=&quot;운영체제-시스템의-발달-과정&quot;&gt;운영체제 시스템의 발달 과정&lt;/h1&gt;
&lt;h2 id=&quot;일괄-처리batch-processing-시스템&quot;&gt;일괄 처리(Batch Processing) 시스템&lt;/h2&gt;
&lt;p&gt;운영체제 형태 중 시대적으로 가장 먼저 생겨난 시스템으로 시스템의 효율 향상을 위하여 작업량이 &lt;strong&gt;일정한 수준&lt;/strong&gt;이 될 때까지 모아두었다가 &lt;strong&gt;한꺼번에 처리&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;주기억 장치에 어셈블리어로 작성한 프로그램을 적재해 컴퓨터 시스템을 운영&lt;/li&gt;
  &lt;li&gt;컴퓨터 시스템을 중단 없이 효율적으로 사용 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;다중-프로그래밍multiprogramming-시스템&quot;&gt;다중 프로그래밍(Multiprogramming) 시스템&lt;/h2&gt;
&lt;p&gt;하나의 컴퓨터 시스템에서 &lt;strong&gt;여러 프로그램&lt;/strong&gt;이 같이 컴퓨터 시스템에 입력되어 주기억 장치에 적재되고, 이들이 처&lt;strong&gt;리 장치를 번갈아 사용하며 실행&lt;/strong&gt;하도록 하는 방식&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;하나뿐인 자원을 &lt;strong&gt;여러 개의 프로그램이 공동&lt;/strong&gt;으로 사용&lt;/li&gt;
  &lt;li&gt;동일한 기억 장소를 둘 이상의 프로그램들이 사용하는 시스템&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;처리량의 극대화&lt;/strong&gt;를 꾀한다&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;온라인on-line-processing-시스템&quot;&gt;온라인(On-Line Processing) 시스템&lt;/h2&gt;
&lt;p&gt;통신 회선으로 각 시스템을 연결하여 처리하며 장소를 이동하지 않아도 처리 결과를 받아볼 수 있다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;다중 프로그램밍 방식, 일괄 처리 방식으로 처리된 결과를 원격지에서 받아볼 수 있다&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;대화식(Interactive)&lt;/strong&gt; 처리로 운영체제에 적당&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;시분할-처리time-sharing-processing-시스템&quot;&gt;시분할 처리(Time-Sharing Processing) 시스템&lt;/h2&gt;
&lt;p&gt;사용자는 단말 장치를 이용하여 운영체제와 상호작용하며, 시스템은 &lt;strong&gt;일정 시간 단위(Time Slice / Quantum)&lt;/strong&gt;로 CPU를 한 사용자에서 다음 사용자로 신속하게 전환함으로써, 각각의 사용자들은 실제로 자신만의 컴퓨터를 사용하고 있는 것처럼 사용할 수 있는 처리 방식&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;다중 프로그래밍 방식과 결합하여 모든 작업이 동시에 진행되는 것과 같은 대화식 처리를 진행&lt;/li&gt;
  &lt;li&gt;하나의 CPU를 여러 개의 작업이 정해진 시간 동안 번갈아 사용&lt;/li&gt;
  &lt;li&gt;라운드 로빈(Round-Robin) 방식이라고도 한다&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;응답 시간의 최소화&lt;/strong&gt;를 꾀한다&lt;/li&gt;
  &lt;li&gt;컴퓨터 시스템의 전체 효율은 좋아지나 개인 사용자 입장에서는 반응 속도가 느려질 수 있다&lt;/li&gt;
  &lt;li&gt;다중 프로그램밍을 전제로 하기 때문에 다중 프로그래밍보다 복잡&lt;/li&gt;
  &lt;li&gt;H/W를 보다 능률적으로 사용할 수 있는 시스템&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;실시간-처리real-time-processing-시스템&quot;&gt;실시간 처리(Real Time Processing) 시스템&lt;/h2&gt;
&lt;p&gt;우주 왕복선이나 레이더 추적기 등 정해진 시간에 반드시 수행되어야 하는 작업들에 적당한 방식으로 &lt;strong&gt;한정된 시간 제약 조건&lt;/strong&gt;에서 자료를 분석하여 처리하는 시스템&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;실행 결과를 즉시 받아볼 수 있어 응답 시간이 짧다&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;다중-모드multi-mode-처리-시스템&quot;&gt;다중 모드(Multi Mode) 처리 시스템&lt;/h2&gt;
&lt;p&gt;일괄 처리, 시간 분할 처리, 실시간 처리를 모두 수행할 수 있는 운영 방식&lt;/p&gt;

&lt;h2 id=&quot;분산-처리distributed-시스템&quot;&gt;분산 처리(Distributed) 시스템&lt;/h2&gt;
&lt;p&gt;하나의 작업을 여러 개의 컴퓨터 시스템이 공동으로 작업할 수 있는 운영 방식&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;각 컴퓨터 시스템은 &lt;strong&gt;독립&lt;/strong&gt;적인 CPU와 메모리를 사용&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;약 결합&lt;/strong&gt;(Loosely Coupled) 형태의 시스템 운영에 적합&lt;/li&gt;
  &lt;li&gt;통신 회선을 통하여 각 시스템에서 처리된 작업들을 모아 중앙 컴퓨터에서 처리&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;클라이언트 / 서버&lt;/strong&gt; 운영체제&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;전송 지연이 길고 데이터 처리율이 낮다&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;i class=&quot;fa fa-info-circle&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt; &lt;strong&gt;약 결합 시스템&lt;/strong&gt; :&lt;br /&gt;
각 프로세스마다 &lt;strong&gt;독립된 메모리&lt;/strong&gt;를 가진 시스템으로 분산 처리 시스템이라고도 한다. 둘 이상의 독립된 컴퓨터 시스템을 통신망을 통해 연결한 시스템.&lt;/p&gt;

    &lt;p&gt;각 시스템마다 &lt;strong&gt;독자적인 운영체제&lt;/strong&gt;를 가지고 있으며, 독립적으로 작동할 수 있고 필요한 경우 &lt;strong&gt;메시지 전달&lt;/strong&gt;이나 &lt;strong&gt;원격 프로시저 호출&lt;/strong&gt;을 통해 프로세스 간 &lt;strong&gt;상호통신&lt;/strong&gt;이 가능하다&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;병렬-처리parallel-시스템&quot;&gt;병렬 처리(Parallel) 시스템&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;하나의 메모리&lt;/strong&gt;를 &lt;strong&gt;여러 개의 CPU&lt;/strong&gt;가 사용하는 컴퓨터 시스템&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;강 결합 형태의 시스템에 적합&lt;/li&gt;
  &lt;li&gt;복잡한 수치 연산, 과학 기술 처리에 적합한 방식&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;i class=&quot;fa fa-info-circle&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt; &lt;strong&gt;강 결합 시스템&lt;/strong&gt; :&lt;br /&gt;
동일 운영체제 하에서 여러 개의 프로세스가 하나의 메모리를 공유하여 사용하는 시스템으로 다중(병렬)처리 시스템이라고도 한다.&lt;/p&gt;

    &lt;p&gt;하나의 운영체제가 모든 프로세스와 시스템 하드웨어를 제어하며, 프로세스 간 &lt;strong&gt;통신은 공유메모리&lt;/strong&gt;를 통해 이루어지기에 공유 메모리를 차지하려는 프로세스 간의 &lt;strong&gt;경쟁을 최소화&lt;/strong&gt;하여야 한다. 하나의 메모리를 사용하므로 &lt;strong&gt;프로세스 간의 결합력은 강&lt;/strong&gt;하다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;운영체제-성능-평가-기준&quot;&gt;운영체제 성능 평가 기준&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;처리량&lt;/strong&gt;(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Throughput&lt;/code&gt;)&lt;br /&gt;
일정한 시간 내에서 얼마나 많은 작업량을 처리할 수 있는가의 척도&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;반환 시간&lt;/strong&gt;(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Turn-around Time&lt;/code&gt;)&lt;br /&gt;
요청한 작업에 대하여 그 결과를 사용자에게 되돌려 줄 때까지 소요되는 시간
    &lt;blockquote&gt;
      &lt;p&gt;대기 시간(Waiting Time) + 실행 시간(Running Time) + 응답 시간(Response Time)&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;신뢰도&lt;/strong&gt;(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Reliability&lt;/code&gt;)&lt;br /&gt;
작업의 결과가 얼마나 정확하고 믿을 수 있는가의 기준.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;사용 가능도&lt;/strong&gt;(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Availability&lt;/code&gt;)&lt;br /&gt;
컴퓨터 시스템 내의 한정된 각종 자원을 여러 사용자가 요구할 때, 어느 정도 신속하고 충분하게 지원해 줄 수 있는지의 정도&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;운영체제의-구성&quot;&gt;운영체제의 구성&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;../../assets/images/OS/os-configure.png&quot;&gt;&lt;img src=&quot;../../assets/images/OS/os-configure.png&quot; alt=&quot;&quot; title=&quot;운영체제의 구성&quot; class=&quot;align-center&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;제어-프로그램&quot;&gt;제어 프로그램&lt;/h2&gt;
&lt;p&gt;운영체제에서 가장 기초적인 시스템의 기능을 담당하는 프로그램으로 프로세스 관리, CPU 스케줄링, 입출력 제어, 기억 장치 관리 등의 기능을 수행.&lt;/p&gt;

&lt;p&gt;이러한 제어 프로그램이 항상 작동 중이라면 이를 &lt;strong&gt;커널(Kernel)&lt;/strong&gt;이라고 한다&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;종류&lt;/th&gt;
      &lt;th&gt;기능&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;감시 프로그램(Supervisor Program)&lt;/td&gt;
      &lt;td&gt;- 제어 프로그램의 중추적인 역할을 담당하는 프로그램으로 각종 운영체제 제어 루틴의 호출을 인식하여 해당 제어 루틴을 지시하고 루틴의 동작을 감시/감독하는 프로그램. &lt;br /&gt;- 운영체제 초기에는 감시 프로그램을 모니터라는 용어로 사용&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;데이터 관리 프로그램(Data Management)&lt;/td&gt;
      &lt;td&gt;- 주기억 장치와 보조 기억 장치 사이의 자료 전송, 파일의 조작 및 처리, 입출력 자료와 프로그램의 논리적인 연결 등 운영체제 시스템에서 취급하는 파일과 데이터를 표준적인 방법으로 처리할 수 있도록 관리. &lt;br /&gt;- IOCS(Input Ouput Control System)이라고도 한다. &lt;br /&gt;- 세부적으로 구분하여 정리하면 다음과 같다. &lt;br /&gt;　　Open/Close : 파일의 조작 및 처리, 입출력 자료와 프로그램을 논리적으로 연결 &lt;br /&gt;　　Read/Write : 주기억 장치와 보조 기억 장치 사이의 자료 전송 &lt;br /&gt;　　Blocking/Deblocking : OS에서 취급하는 파일과 데이터를 표준적인 방법으로 처리&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;작업 제어 프로그램(Job Control Program)&lt;/td&gt;
      &lt;td&gt;- 어떤 업무를 처리한 후 다른 업무로의 이행을 자동적으로 수행하기 위한 준비 및 처리 완료를 담당하는 기능을 수행. &lt;br /&gt;- 작업의 연속 처리를 위한 스케줄 및 시스템 자원 할당 등을 담당 &lt;br /&gt;- 운영체제의 각종 제어 루틴(프로세스 관리, CPU 스케줄링 등)의 수행 순서를 관리하며 사용자의 명령어 및 프로그램에 따라 제어 루틴들의 작업 시기를 조절해주는 기능 수행 &lt;br /&gt;&lt;br /&gt;&lt;i class=&quot;fa fa-info-circle&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;작업 제어 스케줄러&lt;br /&gt;　Master Scheduler : 사용자와 운영체제 사이의 통신을 담당&lt;br /&gt;　Job Scheduler : 작업과 작업 사이에 존재하며 작업의 순서를 결정하는 행위를 담당&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;처리-프로그램&quot;&gt;처리 프로그램&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;종류&lt;/th&gt;
      &lt;th&gt;기능&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;언어 번역 프로그램(Language Translator Program)&lt;/td&gt;
      &lt;td&gt;- 사용자가 저급이나 고급 언어를 사용하여 원시 프로그램을 작성하면, 목적 프로그램으로 번역해주는 프로그램&lt;br /&gt;- 제어 프로그램들의 일부를 사용자에 의해 처리될 수 있게 서비스를 제공해주는 것으로 &lt;a href=&quot;/study/os-system-software/#어셈블러assembler&quot;&gt;어셈블러, 컴파일러, 인터프리터&lt;/a&gt;, 프리프로세서가 존재&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;서비스 프로그램(Service Program)&lt;/td&gt;
      &lt;td&gt;- 사용 빈도수가 높은 모듈이나 프로그램들을 사용자가 사용할 수 있도록 제공되는 프로그램&lt;br /&gt;- 시스템 서비스에는 연계 편집기/라이브러리 등이 있고 사용자 서비스에는 정렬/병합/유틸리티 등과 같은 프로그램이 존재&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;문제 프로그램(Problem Program)&lt;/td&gt;
      &lt;td&gt;- 편집기, 데이터베이스, 통신용 프로그램, 그래픽 프로그램 등 사용자의 응용 처리를 위해 사용되는 프로그램&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

</description>
        <pubDate>Tue, 13 Apr 2021 00:00:00 +0900</pubDate>
        <link>https://many258.github.io/study/os-development-process/</link>
        <guid isPermaLink="true">https://many258.github.io/study/os-development-process/</guid>
        
        <category>OS</category>
        
        
        <category>study</category>
        
      </item>
    
      <item>
        <title>[운영체제/OS] 시스템 소프트웨어</title>
        <description>&lt;h1 id=&quot;시스템-소프트웨어&quot;&gt;시스템 소프트웨어&lt;/h1&gt;
&lt;p&gt;응용 프로그램들을 지원하기 위해서 개발된 소프트웨어로 사용자보다는 &lt;strong&gt;하드웨어 위주의 소프트웨어&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;시스템 소프트웨어에는 &lt;strong&gt;운영체제&lt;/strong&gt;(UNIX, MS-DOS, Windows 등)나 &lt;strong&gt;유틸리티&lt;/strong&gt;(컴파일러, 링커, 로더, 매크로 프로세서, 탐색기) 등이 있으며, 규모나 복잡도가 매우 커서 일반 사용자들이 개발하기에는 어렵다&lt;/p&gt;

&lt;p&gt;시스템 소프트웨어를 개발하는 도구들에는 시스템 언어(어셈블리어, C언어) 및 번역 프로그램(어셈블러, 매크로 프로세서, 컴파일러 등)이 있으며 링커, 로더 등도 포함된다&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;프로그램을 기억 장치에 상주시킨다&lt;/li&gt;
  &lt;li&gt;인터럽트를 관리한다&lt;/li&gt;
  &lt;li&gt;기억/주변 장치 관리&lt;/li&gt;
  &lt;li&gt;파일 관리&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;시스템-소프트웨어-개발-도구&quot;&gt;시스템 소프트웨어 개발 도구&lt;/h2&gt;
&lt;h3 id=&quot;어셈블러assembler&quot;&gt;어셈블러(Assembler)&lt;/h3&gt;
&lt;p&gt;어셈블리어로 작성된 소스 프로그램을 &lt;strong&gt;기계어&lt;/strong&gt;(0과 1로 구성된 언어)로 번역하고 로더(실행 가능한 파일로 만드는 프로그램)에 필요한 정보를 생성한다&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;프로그래머가 기계어로 작성하지 않아도 어셈블리어로 작성한 원시 프로그램을 기계어로 번역&lt;/li&gt;
  &lt;li&gt;어셈블리어로 작성된 원시 프로그램은 기계어보다 읽고 이해가 쉽다&lt;/li&gt;
  &lt;li&gt;프로그램의 주소가 기호 번지이다&lt;/li&gt;
  &lt;li&gt;프로그램에 데이터를 사용하기 쉽다&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;어셈블러-기능&quot;&gt;어셈블러 기능&lt;/h4&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;기능&lt;/th&gt;
      &lt;th&gt;상세&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;명령어 생성&lt;/td&gt;
      &lt;td&gt;원시 프로그램에 있는 기호 명령어를 분서갛여 기계어 명령어로 변경&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;기계 주소를 할당&lt;/td&gt;
      &lt;td&gt;원시 프로그램에 있는 기호 번지나 상수의 기억 장소를 할당&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;의사 명령어 처리&lt;/td&gt;
      &lt;td&gt;프로그램의 시작과 종료, 재배치 정보 등 프로그램의 안내자 역할을 하는 명령어들을 처리&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;어셈블러-종류&quot;&gt;어셈블러 종류&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;단일 패스 어셈블러&lt;/strong&gt;(1-Pass)&lt;br /&gt;
원시 프로그램을 &lt;strong&gt;한 번에 검색하여 일괄적&lt;/strong&gt;으로 기계어 코드로 변경&lt;br /&gt;
잘못된 명령어를 사용하는 경우에는 실행할 수 없는 파일을 만든다. 따라서, &lt;strong&gt;정확한 명령어나 기호번지를 사용&lt;/strong&gt;해야 하는 어려움이 존재&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;기호 테이블을 정의&lt;/li&gt;
      &lt;li&gt;한 번에 번역하기 때문에 속도가 빠르다&lt;/li&gt;
      &lt;li&gt;프로그램 크기가 작으며 작성이 어렵다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;이중 패스 어셈블러&lt;/strong&gt;(2-Pass)&lt;br /&gt;
원시 프로그램을 &lt;strong&gt;1차 검색&lt;/strong&gt;하여 명령어 및 기호 번지들을 데이터 베이스 &lt;strong&gt;테이블에 저장&lt;/strong&gt;.&lt;/p&gt;

    &lt;p&gt;잘못 사용한 명령어나 기호 번지는 &lt;strong&gt;프로그래머가 수정&lt;/strong&gt;할 수 있도록 오류 메시지를 출력하기도 한다. 이후에는 각 &lt;strong&gt;테이블에 저장된 정보들을 이용&lt;/strong&gt;하여 기게어 코드나 기억 장소를 변환한다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;매크로-프로세서macro-processor&quot;&gt;매크로 프로세서(Macro Processor)&lt;/h3&gt;
&lt;p&gt;어셈블리어를 사용하기 쉽도록 명령어들을 문자로 치환하여 확장해준다&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;매크로는 일종의 문자열 치환과 같이 사용된 횟수만큼 명령어를 생성, 삽입해서 실행&lt;/li&gt;
  &lt;li&gt;매크로 정의 내에 또 다른 매크로 정의 가능&lt;/li&gt;
  &lt;li&gt;파스칼 언어는 매크로 프로세서의 기능이 없다&lt;/li&gt;
  &lt;li&gt;매크로 라이브러리 : 여러 프로그램에서 공통적으로 자주 사용되는 매크로를 모아 놓은 라이브러리&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;매크로-프로세서-기능&quot;&gt;매크로 프로세서 기능&lt;/h4&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;기본 기능&lt;/th&gt;
      &lt;th&gt;-&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;매크로 &lt;strong&gt;정의 인식&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;원시 프로그램 내에 존재하는 매크로를 파악하여 매크로를 정의한 부분의 시작과 종료를 파악&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;매크로 &lt;strong&gt;정의 저장&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;매크로 프로세서는 매크로 명과 정의된 내용을 매크로 호출 시 확장하기 위해 저장&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;매크로 &lt;strong&gt;호출 인식&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;원시 프로그램 내에 매크로가 확장하기 위한 준비가 되어 있는 지 확인&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;매크로 &lt;strong&gt;확장 및 인수&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;치환 매크로를 호출하면 매크로 명이 있는 원시 프로그램 위치에 저장된 내용과 인수를 치환&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;컴파일러compiler&quot;&gt;컴파일러(Compiler)&lt;/h3&gt;
&lt;p&gt;고급 언어로 작성된 프로그램을 기계에 적합한 프로그램으로 번역해주는 프로그램&lt;/p&gt;

&lt;p&gt;원시 프로그램에 번역 프로그램을 수행하면 번역 프로그램은 기계가 이해할 수 있는 이진수로 구성된 &lt;strong&gt;목적 프로그램을 출력&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;COBOL, C, FORTRAN, PASCAL, ALGOL, Ada…&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;인터프리터interpreter&quot;&gt;인터프리터(Interpreter)&lt;/h3&gt;
&lt;p&gt;고급 언어로 작성된 원시코드 &lt;strong&gt;명령어들을 한번에 한 줄&lt;/strong&gt;씩 읽어들여서 실행하는 프로그램&lt;/p&gt;

&lt;p&gt;인터프리터 과정에서는 최적화 단계를 거쳐 &lt;strong&gt;목적 프로그램을 출력하지 않는&lt;/strong&gt; 것이 컴파일러와 크게 구분되는 점이다(기계어 명령어들이 만들어지는 컴파일 단계를 거칠 필요가 없다)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;BASIC, LISP, Python, APL&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;링커linker&quot;&gt;링커(Linker)&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;../../assets/images/OS/linker.png&quot;&gt;&lt;img src=&quot;../../assets/images/OS/linker.png&quot; alt=&quot;&quot; title=&quot;링커&quot; class=&quot;align-center&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;컴파일러가 만들어낸 하나 이상의 목적 파일을 가져와 이를 &lt;strong&gt;단일 실행 프로그램으로 병합&lt;/strong&gt;하는 프로그램&lt;/p&gt;

&lt;h3 id=&quot;로더loader&quot;&gt;로더(Loader)&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;../../assets/images/OS/loader.png&quot;&gt;&lt;img src=&quot;../../assets/images/OS/loader.png&quot; alt=&quot;&quot; title=&quot;로더&quot; class=&quot;align-center&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;목적 프로그램을 실행 가능한 파일로 변환하기 위해 &lt;strong&gt;주기억 장소를 할당&lt;/strong&gt;하거나, 여러 개의 목적 프로그램을 연계 편집하여 CPU가 처리될 수 있는 프로그램으로 변환&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;좁은 의미&lt;/strong&gt;의 로더 :&lt;br /&gt;
프로그램을 실행하기 위하여 프로그램을 보조 기억 장치로부터 컴퓨터의 주기억 장치에 올려놓는 로더&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;넓은 의미&lt;/strong&gt;의 로더 :&lt;br /&gt;
적재뿐만이 아닌 목적 프로그램들끼리 연결시키거나 주기억 장치를 재배치하는 등의 포괄적인 작업을 수행하는 로더&lt;/p&gt;

&lt;h4 id=&quot;로더의-기능&quot;&gt;로더의 기능&lt;/h4&gt;
&lt;p&gt;일반적으로 로더는 프로그램을 실행하기 위하여 프로그램을 보조 기억 장치로부터 컴퓨터의 주기억 장치에 올려놓는 기능을 가진 프로그램으로 &lt;strong&gt;할당, 연결, 재배치, 적재&lt;/strong&gt; 순서로 진행&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;기능&lt;/th&gt;
      &lt;th&gt;내용&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;할당(Allocation)&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;- 목적 프로그램이 실행된 주기억 장치 공간을 확보&lt;br /&gt;- 단일 프로그램은 프로그램 전체를 적재하여 실행할 수 있는 주기억 장치 공간을 확보 &lt;br /&gt;- 다중 프로그램은 프로그램의 일부를 적재한 후 실행 도중에 필요한 부분을 적재할 수 있는 주기억 장치 공간을 확보&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;연결(Linking)&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;- 여러 개의 독립적인 모듈을 연결 &lt;br /&gt;- 독립적인 주기억 장치의 일부 공간을 논리적인 주소 공간으로 연결 &lt;br /&gt;- 링키지 에디터는 프로그램 적재 시 필요한 프로그램들을 결합하여 주기억 장치에 적재함은 물론 보조 기억 장치에 로드 이미지를 보관해두는 역할을 수행&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;재배치(Relocation)&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;- 프로그램이 주기억 장치 공간 안에서 위치를 변경할 수 있게 한다 &lt;br /&gt;- &lt;strong&gt;베이스 레지스터&lt;/strong&gt;를 관리&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;적재(Loading)&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;프로그램 전체를 주기억 장치에 한 번에 적재하게 하거나 실행 시 필요한 일부분만을 차례로 적재하게 한다&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;로더의-종류&quot;&gt;로더의 종류&lt;/h4&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;로더의 종류&lt;/th&gt;
      &lt;th&gt;내용&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Compile and Go 로더&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;- &lt;strong&gt;번역 프로그램과 로더가 하나로&lt;/strong&gt; 구성되어 번역 프로그램이 로더의 역할(연결 기능은 수행하지 않는다)까지 담당하는 방식 &lt;br /&gt;- 매우 단순하여 프로그램하기가 용이하며 주기억 장소의 제한이 없다면 가장 이상적이라 할 수 있다&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;절대 로더(Absolute Loader)&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;- 로더의 역할이 축수되어 가장 간단한 프로그램으로 구성된 것으로 기억 장소 &lt;strong&gt;할당이나 연결&lt;/strong&gt;을 프로그래머가 직접 지정하는 방식(&lt;strong&gt;재배치&lt;/strong&gt;: 번역 프로그램 / &lt;strong&gt;적재&lt;/strong&gt; : 로더) &lt;br /&gt;- 프로그래머 입장에서는 매우 어렵고 한 번 &lt;strong&gt;지정한 주기억 장소&lt;/strong&gt;의 위치는 &lt;strong&gt;변경이 힘들다&lt;/strong&gt;는 단점 존재&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;직접 연결 로더&lt;/td&gt;
      &lt;td&gt;- 로더가 할당, 연결, 재배치, 적재를 &lt;strong&gt;모두 수행&lt;/strong&gt;하는 일반적인 형태 &lt;br /&gt;- 기억 장소를 자동으로 재배치하고, 독립적으로 프로그래밍된 프로그램들을 연결하여 수행하기 때문에 &lt;strong&gt;재배치 로더 혹은 상대적 로더&lt;/strong&gt;라고도 한다&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Binding 로더&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;- &lt;strong&gt;할당, 연결, 재배치만&lt;/strong&gt; 하는 로더로 프로그램을 실행하기 전 모든 준비만을 담당&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Module 로더&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;- &lt;strong&gt;적재만&lt;/strong&gt;을 담당하는 로더를 의미&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;동적 적재 로더(Direct Linking Loader)&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;- CPU가 현재 사용 중인 부분만 전재하고 &lt;strong&gt;미사용 중인 프로그램&lt;/strong&gt;은 보조 기억 장치에 &lt;strong&gt;저장&lt;/strong&gt;해두는 방식으로 &lt;strong&gt;Load-On-Call&lt;/strong&gt;이라고도 한다 &lt;br /&gt;- &lt;strong&gt;오버레이(Overlay)&lt;/strong&gt; : 프로그램 파일을 분할하여 순차적으로 적재하는 운영 방식&lt;br /&gt;- &lt;strong&gt;스와핑(Swapping)&lt;/strong&gt; : 프로그램 파일을 분할하여 교체하면서 적재하는 운영 방식&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
</description>
        <pubDate>Mon, 12 Apr 2021 00:00:00 +0900</pubDate>
        <link>https://many258.github.io/study/os-system-software/</link>
        <guid isPermaLink="true">https://many258.github.io/study/os-system-software/</guid>
        
        <category>OS</category>
        
        
        <category>study</category>
        
      </item>
    
      <item>
        <title>[운영체제/OS] 운영체제의 기본 개념</title>
        <description>&lt;h1 id=&quot;운영체제os-operating-system&quot;&gt;운영체제(OS: Operating System)&lt;/h1&gt;
&lt;blockquote&gt;
  &lt;p&gt;하드웨어를 제어하는 소프트웨어&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;하드웨어를 활용&lt;/strong&gt;할 수 있도록 펌웨어나 소프트웨어로 만들어진 프로그램&lt;/li&gt;
  &lt;li&gt;컴퓨터 본체 및 각 주변 장치를 가장 &lt;strong&gt;능률적이고 경제적&lt;/strong&gt;으로 사용할 수 있도록 하는 프로그램&lt;/li&gt;
  &lt;li&gt;컴퓨터를 &lt;strong&gt;편리&lt;/strong&gt;하게 사용하고 하드웨어를 효율적으로 사용할 수 있도록 하는 프로그램&lt;/li&gt;
  &lt;li&gt;컴퓨터 자원들인 프로세서, 기억 장치, 파일 및 정보, 네트워크 및 보호 등을 &lt;strong&gt;효율적&lt;/strong&gt;으로 관리할 수 있는 프로그램의 집합&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;운영체제의-목적&quot;&gt;운영체제의 목적&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;컴퓨터 시스템의 처리량, 신뢰성을 최대화&lt;/li&gt;
  &lt;li&gt;컴퓨터 시스템의 반환 시간, 응답 시간, 처리 시간, 대기 시간, 경과 시간을 &lt;strong&gt;최소화&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;컴퓨터를 구성하고 있는 자원을 효율적으로 운영하고 제어&lt;/li&gt;
  &lt;li&gt;사용자와 컴퓨터 시스템과의 &lt;strong&gt;인터페이스&lt;/strong&gt; 제공&lt;/li&gt;
  &lt;li&gt;제한된 자원을 &lt;strong&gt;효율적으로 공유&lt;/strong&gt;하기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;스케줄링&lt;/code&gt; 수행&lt;/li&gt;
  &lt;li&gt;데이터를 공유&lt;/li&gt;
  &lt;li&gt;주변 장치를 관리&lt;/li&gt;
  &lt;li&gt;시스템의 &lt;strong&gt;이식성/호환성&lt;/strong&gt; 증대&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;운영체제의-역할&quot;&gt;운영체제의 역할&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;운영체제는 &lt;strong&gt;스스로 어떤 기능도 수행하지 않고&lt;/strong&gt; 다른 응용 프로그램이 유용한 작업을 할 수 있도록 &lt;strong&gt;환경을 제공&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;하드웨어와 사용자 사이에 내부 및 외부 인터페이스 제공&lt;/li&gt;
  &lt;li&gt;컴퓨터 자원을 여러 사용자가 효율적으로 나누어 사용할 수 있도록 자원을 관리&lt;/li&gt;
  &lt;li&gt;프로세서, 프로세스, 기억 장치, 입출력 장치를 관리&lt;/li&gt;
  &lt;li&gt;컴퓨터를 초기화시켜 작업을 수행할 수 있는 상태로 유지시키는 역할 수행&lt;/li&gt;
  &lt;li&gt;소프트웨어나 하드웨어에 오류가 발생하면 운영체제는 &lt;strong&gt;회복&lt;/strong&gt;을 위해 활동&lt;/li&gt;
  &lt;li&gt;시스템 사용 도중 발생하는 내/외부적인 오류로부터 시스템을 &lt;strong&gt;보호&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;응용 프로그램들이 컴퓨터의 제한된 자원들을 공유할 수 있도록 자원을 관리&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;운영체제-계층-구조&quot;&gt;운영체제 계층 구조&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;../../assets/images/OS/operation-system-layer.png&quot; title=&quot;운영체제 계층 구조&quot;&gt;&lt;img src=&quot;../../assets/images/OS/operation-system-layer.png&quot; alt=&quot;&quot; title=&quot;운영체제 계층 구조&quot; class=&quot;align-center&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;명령어 해석기&lt;/strong&gt;(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Shell&lt;/code&gt;)&lt;br /&gt;
사용자 명령을 입력받아 시스템 기능을 수행하는 명령 해석기&lt;br /&gt;
사용자와 시스템 간의 &lt;strong&gt;인터페이스를 담당&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;제어 프로그램&lt;/strong&gt;(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Kernel&lt;/code&gt;)&lt;br /&gt;
하드웨어를 제어하는 프로그램으로 메모리, CPU, 단말기, 프린터 등 시스템의 자원 활용도를 높이기 위해 스케줄링과 자료 관리를 하는 핵심 요소&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;기계어&lt;/strong&gt;(Machine Language)&lt;br /&gt;
0과 1로 표시되며 실행할 명령, 데이터, 기억 장소의 주소 등을 포함한다. 하드웨어를 직접 실행시킬 수 있는 형태로 구성되며 컴퓨터의 모든 &lt;strong&gt;하드웨어를 제어하기 위한 다양한 비트 형식&lt;/strong&gt;의 명령어가 존재&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;마이크로프로그램&lt;/strong&gt;(Micro-Program)&lt;br /&gt;
ROM이나 PROM에 영구히 기록되는 프로그램을 말하는 것으로 보통 &lt;strong&gt;펌웨어&lt;/strong&gt;를 의미하며 마이크로코드(Microcode)라고도 한다&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 11 Apr 2021 00:00:00 +0900</pubDate>
        <link>https://many258.github.io/study/os-base-concept/</link>
        <guid isPermaLink="true">https://many258.github.io/study/os-base-concept/</guid>
        
        <category>OS</category>
        
        
        <category>study</category>
        
      </item>
    
      <item>
        <title>[데이터통신] OSI 참조 모델</title>
        <description>&lt;h1 id=&quot;osi-참조-모델&quot;&gt;OSI 참조 모델&lt;/h1&gt;
&lt;p&gt;각 업체의 독자적인 기술은 통신의 유용성 및 타사 제품 간 통신 네트워크 문제가 대두되면서 이를 위해 국제 표준화 기구(ISO)에서는 단말기로부터 컴퓨터, 네트워크, 프로세스, 사용자 간의 표준화된 절차를 규정하도록 한 &lt;strong&gt;표준 프로토콜(OSI: Open System Interconnection)&lt;/strong&gt;을 발표하였다&lt;/p&gt;

&lt;h2 id=&quot;설계-원칙&quot;&gt;설계 원칙&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;적절한 수의 계층을 두어 시스템의 복잡도를 최소화&lt;/li&gt;
  &lt;li&gt;서비스 접점의 경계를 두어 되도록 적은 상호 작용이 되도록 하였다&lt;/li&gt;
  &lt;li&gt;비슷한 층은 하나의 계층으로 묶어서 효율성을 증진시켰다&lt;/li&gt;
  &lt;li&gt;인접 층의 서비스를 변형시키지 않는 범위에서 계층에 서비스를 개발할 수 있도록 하였다&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;osi-7계층의-구조와-기능&quot;&gt;OSI 7계층의 구조와 기능&lt;/h2&gt;

&lt;p class=&quot;align-center&quot;&gt;&lt;a href=&quot;../../assets/images/network/data-communication/osi-7-layer.png&quot; title=&quot;OSI 계층 구조&quot;&gt;&lt;img src=&quot;../../assets/images/network/data-communication/osi-7-layer.png&quot; alt=&quot;&quot; title=&quot;OSI 계층 구조&quot; class=&quot;align-center&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;물리-계층physical-layer&quot;&gt;물리 계층(Physical Layer)&lt;/h3&gt;
&lt;p&gt;전송 매체와 전송 신호를 액세스하기 위한 기계적, 전기적, 기능적, 절차적 특성을 규정짓는 최하위 계층&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;통신 케이블, 전송 신호 방식, 물리적 정비를 정의&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#계층-간-데이터-단위&quot;&gt;PDU&lt;/a&gt; : 비트(스트림)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;데이터-링크-계층data-link-layer&quot;&gt;데이터 링크 계층(Data Link Layer)&lt;/h3&gt;
&lt;p&gt;인접한 장치 간에 원활한 데이터의 전송을 하도록 하며, 물리적 연결 간의 신뢰성 있는 정보를 전송하는 계층&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;동기화&lt;/strong&gt;, 오류, 흐름 제어로 프레임을 효과적으로 전송&lt;/li&gt;
  &lt;li&gt;전화를 이용한 인터넷 접속 프로토콜(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PPP&lt;/code&gt;) 기능을 담당&lt;/li&gt;
  &lt;li&gt;프레임 동기화(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BASIC&lt;/code&gt; 동기, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HDLC&lt;/code&gt; 동기, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SDLC&lt;/code&gt; 동기)&lt;/li&gt;
  &lt;li&gt;신뢰성 있고 효율적인 데이터 전송&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;매체 액세스 제어&lt;/strong&gt;(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CSMA/CD&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Token-Bus&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Token-Ring&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;전송 제어 기능 담당&lt;/li&gt;
  &lt;li&gt;논리적 연결인 &lt;strong&gt;링크를 확립하거나 해제&lt;/strong&gt; 수행&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#계층-간-데이터-단위&quot;&gt;PDU&lt;/a&gt; : 프레임&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;네트워크-계층network-layer&quot;&gt;네트워크 계층(Network Layer)&lt;/h3&gt;
&lt;p&gt;통신 시스템 간의 경로를 선택하는 기능, 통신 트래픽의 흐름을 제어하는 기능 및 통신 중에 패킷의 분실로 재전송을 요청할 수 있는 오류 제어 기능을 수행&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;패킷 정보를 목적지까지 전송&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;논리적 어드레싱&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;정보 교환 및 중계 기능을 담당&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;경로 선택&lt;/strong&gt;, &lt;strong&gt;트래픽 제어&lt;/strong&gt;, &lt;strong&gt;체증 제어&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;네트워크 연결을 관리&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#계층-간-데이터-단위&quot;&gt;PDU&lt;/a&gt; : 패킷 or 데이터그램&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;전송-계층transport-layer&quot;&gt;전송 계층(Transport Layer)&lt;/h3&gt;
&lt;p&gt;네트워크 종단 시스템 간의 데이터를 일관성 있고 &lt;strong&gt;투명한 데이터 전송&lt;/strong&gt;을 제공할 수 있도록 종단 간에 통신을 지원&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;종단 사용자 간&lt;/strong&gt;에 에러 복구와 흐름 제어를 제공&lt;/li&gt;
  &lt;li&gt;공유 회선을 &lt;strong&gt;다중화, 집중화&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;주소를 지정&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#계층-간-데이터-단위&quot;&gt;PDU&lt;/a&gt; : TCP 세그먼트&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;세션-계층session-layer&quot;&gt;세션 계층(Session Layer)&lt;/h3&gt;
&lt;p&gt;응용 프로그램 간의 대화를 구성하고, 동기를 취하며 데이터 교환을 관리하기 위한 수단을 지원&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;데이터가 전달되었으나 오류가 있는 데이터를 &lt;strong&gt;회복&lt;/strong&gt;하기 위해 사용&lt;/li&gt;
  &lt;li&gt;전송 방향 결정(&lt;strong&gt;전이중/반이중/단방향&lt;/strong&gt;)&lt;/li&gt;
  &lt;li&gt;데이터 교환, &lt;strong&gt;대화&lt;/strong&gt;를 관리&lt;/li&gt;
  &lt;li&gt;전자 사서함 기능을 제공&lt;/li&gt;
  &lt;li&gt;통신 시스템 간의 &lt;strong&gt;회화 기능&lt;/strong&gt;을 관리&lt;/li&gt;
  &lt;li&gt;대동기점은 데이터 교환을 대화 단위로 분할하여 오류를 확인한다&lt;/li&gt;
  &lt;li&gt;소동기점은 대화의 중간에 삽입되며, 응용 프로그램에 따라 오류 확인이 요구되지 않을 수도 있다&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#계층-간-데이터-단위&quot;&gt;PDU&lt;/a&gt; : 메시지/데이터&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;표현-계층presentation-layer&quot;&gt;표현 계층(Presentation Layer)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;데이터 코드 &lt;strong&gt;변환, 압축, 번역, 암호화/해독&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;표현 형식을 제어&lt;/li&gt;
  &lt;li&gt;정보 형식을 지정&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;구문&lt;/strong&gt; 검색, &lt;strong&gt;문맥&lt;/strong&gt; 관리&lt;/li&gt;
  &lt;li&gt;PDU : 메시지/데이터&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;응용-계층application-layer&quot;&gt;응용 계층(Application Layer)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;사용자가 OSI 환경에 접근이 가능하도록 한다&lt;/li&gt;
  &lt;li&gt;OSI 네트워크 환경에서 사용자에게 서비스를 제공하는 계층&lt;/li&gt;
  &lt;li&gt;PDU : 메시지/데이터&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;계층-간-데이터-단위&quot;&gt;계층 간 데이터 단위&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;../../assets/images/network/data-communication/osi-layer-data-unit.png&quot; title=&quot;계층 간 데이터 단위&quot;&gt;&lt;img src=&quot;../../assets/images/network/data-communication/osi-layer-data-unit.png&quot; alt=&quot;&quot; title=&quot;계층 간 데이터 단위&quot; class=&quot;align-center&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;PCI&lt;/strong&gt;(Protocol Control Information)&lt;br /&gt;
각 계층에서 처리되는 프로토콜 제어 정보로 &lt;strong&gt;하위 계층으로 전달&lt;/strong&gt;되는 PDU에 추가되는 블록. 일반적으로 각 계층의 기능 및 프로그램이라 할 수 있다&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;PDU&lt;/strong&gt;(Protocol Data Unit)&lt;br /&gt;
아래 계층으로 전달되는 데이터 단위로 &lt;strong&gt;PCI와 결합&lt;/strong&gt;되어 전달&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;SDU&lt;/strong&gt;(Service Data Unit)&lt;br /&gt;
상위 계층에서 전달받은 데이터 단위로 SDU는 &lt;strong&gt;PCI와 결합&lt;/strong&gt;되어 하위 계층에 PDU 데이터 단위로 전달&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;SAP&lt;/strong&gt;(Service Access Point)&lt;br /&gt;
&lt;strong&gt;(N)층이 (N+1)층에 제공하는 서비스&lt;/strong&gt;를 의미. (N)계층에서 (N+1)계층으로 전달되는 서비스를 (N)-SAP라고 한다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 09 Apr 2021 00:00:00 +0900</pubDate>
        <link>https://many258.github.io/study/data-communication-osi-7-layer/</link>
        <guid isPermaLink="true">https://many258.github.io/study/data-communication-osi-7-layer/</guid>
        
        <category>데이터통신</category>
        
        
        <category>study</category>
        
      </item>
    
      <item>
        <title>[데이터통신] 통신 프로토콜</title>
        <description>&lt;h1 id=&quot;통신-프로토콜&quot;&gt;통신 프로토콜&lt;/h1&gt;
&lt;p&gt;서로 다른 시스템에 존재하는 개체 간의 원활한 통신을 위한 소프트웨어적 하드웨어적 약속이나 규칙 및 규약을 의미&lt;/p&gt;

&lt;h2 id=&quot;통신-프로토콜-기본-구성-요소&quot;&gt;통신 프로토콜 기본 구성 요소&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;구문&lt;/strong&gt;(Syntax) : 데이터 형식, 부호화, 신호 레벨 등의 요소&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;의미&lt;/strong&gt;(Semantics) : 전송 제어 및 오류 처리를 위한 정보 등을 규정&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;시간&lt;/strong&gt;(Timing) : 두 개체 간의 통신 속도를 조정하거나 메시지의 전송 및 순서에 대한 특성을 가리킨다&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;통신-프로토콜-주요-기능&quot;&gt;통신 프로토콜 주요 기능&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;기능&lt;/th&gt;
      &lt;th&gt;내용&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;단편화와 재결합&lt;br /&gt;(Fragmentation &amp;amp; Reassembly)&lt;/td&gt;
      &lt;td&gt;많은 양의 데이터 블록을 효율적인 전송이 되도록 작은 단위의 블록으로 단편화하여 전송하며, 수신된 작은 단위 블록은 다시 원래의 데이터가 될 수 있도록 재결합되어야 한다&lt;br /&gt;효과적으로 오류 제어를 할 수 있고 응답 시간이 빠르다&lt;br /&gt;재결합 시 프레임에 순서 번호 부여를 하는 등 부수적인 데이터의 증가와 처리 시간이 길어져서 비효율적이다&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;캡슐화&lt;br /&gt;(Encapsulation)&lt;/td&gt;
      &lt;td&gt;데이터의 플래그, 주소, 제어 정보 등 정보 데이터와 정보   데이터를 오류 없이 전송하기 위한 구조적인 묶음을 의미&lt;br /&gt;HDSL, BASIC, DDCMP, TCP&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;캡슐의 주요 제어 정보&lt;/td&gt;
      &lt;td&gt;주소, 에러 검출 코드, 프로토콜 제어&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;연결 제어&lt;br /&gt;(Connection Control)&lt;/td&gt;
      &lt;td&gt;회선 접속 → 링크 확립 → 데이터 전송 → 링크 해제 → 회선 절단에서 링크 확립과 링크 해제 단계를 제어하는 기능&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;흐름 제어&lt;br /&gt;(Flow Control)&lt;/td&gt;
      &lt;td&gt;두 개체 사이에 데이터의 개수나 속도의 조절하는   기능&lt;br /&gt;Sliding Window&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;오류 제어&lt;br /&gt;(Error Control)&lt;/td&gt;
      &lt;td&gt;수신된 오류를 검출하고 재전송을 요구하는 기능&lt;br /&gt;ARQ, Hamming Code, Parity&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;동기화&lt;br /&gt;(Synchronization)&lt;/td&gt;
      &lt;td&gt;데이터 전송은 직렬 전송으로 이루어진다. 따라서 송신측의 정보를 수신측에서 정확하게 수신하려면 직렬 입력 파형으로부터 비트와 문자를 정확하게 시간에 맞추어 수신해야 한다. 이처럼 송신측과 수신측이   같은 시간으로 동작하게 하는 기능&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;순서 제어&lt;br /&gt;(Sequencing)&lt;/td&gt;
      &lt;td&gt;연결 제어의 순서적 절차 기능으로 데이터 조각에 순서를 부여하여 전송하거나 수신된 데이터 조각을 순서에 맞게 조립하는 기능&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;주소 지정&lt;br /&gt;(Addressing)&lt;/td&gt;
      &lt;td&gt;데이터를 목적지까지 전송할 수 있도록 데이터에 목적지 위치를 추가하고 관리하는 기능&lt;br /&gt;IP주소, 서브넷 마스크, NIC 주소, ARP, RARP&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;다중화&lt;br /&gt;(Multiplexing)&lt;/td&gt;
      &lt;td&gt;여러 개의 회선에서 데이터를 받아 한 개의 고속 회선으로 송신하거나 반대로 고속 회선에서 데이터를 입력받아 여러 개의 회선으로 분할하는 기능&lt;br /&gt;FDM, TDM, CDM&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;경로   선택&lt;br /&gt;(Routing)&lt;/td&gt;
      &lt;td&gt;송/수신 간에 중간 서브넷을 거쳐 최적의 경로를 선택하는 기술로 서브넷 자원의 이용을 최대화하여 평균 패킷 전송 시간을 최소화하는 기능&lt;br /&gt;Fixed, Flooding, RIP, ERP, BGP, EGP&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;통신-프로토콜의-종류&quot;&gt;통신 프로토콜의 종류&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;ARPANET&lt;/strong&gt;(Advanced Research Projects Agency Network)&lt;br /&gt;
현재 사용 중인 인터넷의 모체가 된 네트워크.&lt;/p&gt;

    &lt;p&gt;패킷 교환 기술을 이용하여 전용 회선으로 연결된 여러 대의 컴퓨터로 구성되었으며, 미 국방성의 지원으로 개발된 &lt;strong&gt;최초의 유선형 패킷 교환&lt;/strong&gt; 시스템&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;SNA&lt;/strong&gt;(System Network Architecture)&lt;br /&gt;
특정한 시스템이나 프로그램이 아닌 &lt;strong&gt;네트워크상의 통신 규약&lt;/strong&gt;.&lt;/p&gt;

    &lt;p&gt;사용자와 하드웨어, 각 세부적인 기술들을 분리시켜 네트워크의 모든 구성 요소가 다른 네트워크와 통신이 원활할 수 있도록 제시한 네트워크 구조&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;X.25&lt;/strong&gt;&lt;br /&gt;
패킷 교환망에 광범위하게 사용되는 네트워크 프로토콜로서 CCITT에 의해 표준으로 채택되었다.&lt;/p&gt;

    &lt;p&gt;패킷형으로 동작하는 데이터 단말 장치(DTE)와 데이터 회선 종단 장치(DCE) 간의 인터페이스로, 사용자 단말 장치와 패킷 교환망(PSDN) 간의 데이터 교환 절차를 정의&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;공중 패킷 교환망에 대한 &lt;strong&gt;ITU-T&lt;/strong&gt;의 권고안&lt;/li&gt;
      &lt;li&gt;물리 계층, 데이터 링크 계층, 패킷 계층들에 대한 기능으로 구성&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;연결형&lt;/strong&gt; 네트워크 프로토콜&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;흐름 및 오류 제어&lt;/strong&gt; 기능을 제공&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;OSI&lt;/strong&gt;(Open Systems Interconnection, 개방형 시스템 간 상호 접속)&lt;br /&gt;
국제 표준화 기구인 ISO에서 개발된 OSI는 통신 네트워크 간에 어떻게 데이터를 전송할 것인가에 대한 표준 규약 또는 참조 모델&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;ISDN&lt;/strong&gt;(Integrated Services Digital Network)&lt;br /&gt;
발신 가입자로부터 수신자까지의 모든 전송, 교환 과정이 디지털 방식으로 처리되며 음성과 비음성, 영상 등 서비스를 종합적으로 처리하는 종합 정보 통신망&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;IN&lt;/strong&gt;(Intelligent Network, 지능망)&lt;br /&gt;
기존의 &lt;strong&gt;통신망에 컴퓨터를 연결&lt;/strong&gt;하여 새로운 기술을 쉽게 접목할 수 있게 한 지능화된 네트워크를 의미.&lt;/p&gt;

    &lt;p&gt;기존의 공중 전화망(PSTN)에 컴퓨터를 연결하고, 서비스 교환 시스템(SSP), 서비스 제어 시스템(SCP), 서비스 관리 시스템(SMS) 등의 소프트웨어를 설치한 것&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;PPP&lt;/strong&gt;(Point to Point Protocol)&lt;br /&gt;
전화선과 모뎀을 이용하여 인터넷을 접속하기 위한 프레임 프로토콜로 이전에 사용했던 방식인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SLIP&lt;/code&gt;을 개선하여 에러 검출 기능과 복구 기능을 추가한 프로토콜.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;문자&lt;/strong&gt; 위주 프레임&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IETF&lt;/code&gt;의 표준 프로토콜&lt;/li&gt;
      &lt;li&gt;주로 두 개의 라우터를 접속할 때 사용&lt;/li&gt;
      &lt;li&gt;다중 프로토콜 지원&lt;/li&gt;
      &lt;li&gt;오류 &lt;strong&gt;검출만 제공&lt;/strong&gt;되며, 재전송을 통한 오류 복구와 흐름 제어은 제공 되지 않음&lt;/li&gt;
      &lt;li&gt;비동기식 링크도 지원해야 하기 때문에 프레임은 반드시 바이트의 정수배가 되어야 한다&lt;/li&gt;
      &lt;li&gt;동기/비동기 회선 모두를 통하여 전송&lt;/li&gt;
      &lt;li&gt;압축 기능 제공&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;구조&lt;/strong&gt; : [Flag][Address][Control][&lt;strong&gt;Protocol&lt;/strong&gt;][Data][FCS][Flag]
        &lt;ul&gt;
          &lt;li&gt;&lt;strong&gt;PAP&lt;/strong&gt;(Password Authentication Protocol)&lt;br /&gt;
초기 접속 시 아이디와 비밀번호를 미리 입력해 놓으면 자동으로 접속할 수 있는 프로토콜&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;CHAP&lt;/strong&gt;(Challenge Handshake Authentication Protocol)&lt;br /&gt;
초기 접속이 이루어질 때 매번 3단계의 핸드세이크 인증을 수행하는 방법&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;통신-프로토콜-계층-간-관계도&quot;&gt;통신 프로토콜 계층 간 관계도&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;../../assets/images/network/data-communication/network-layer-compare.png&quot; title=&quot;통신 프로토콜 계층 간 관계도&quot; class=&quot;align-center&quot;&gt;&lt;img src=&quot;../../assets/images/network/data-communication/network-layer-compare.png&quot; alt=&quot;&quot; title=&quot;통신 프로토콜 계층 간 관계도&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;통신-제어-프로그램&quot;&gt;통신 제어 프로그램&lt;/h2&gt;
&lt;p&gt;데이터 전송 회선과 통신 제어 장치를 이용하여 컴퓨터와 단말기 간, 단말기와 단말기 간, 컴퓨터와 컴퓨터 간에 정보를 송/수신하기 위한 프로그램을 총칭하여 통신 제어 프로그램 혹은 통신 소프트웨어라 한다&lt;/p&gt;

&lt;h3 id=&quot;통신-제어-프로그램의-3가지-기능&quot;&gt;통신 제어 프로그램의 3가지 기능&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;데이터 송/수신 기능&lt;/strong&gt;&lt;br /&gt;
두 노드 간에 정보 교환을 위해서는 사전에 송/수신측 간 통신제어 프로그램의 명령이나 응답에 관한 신호의 제어 및 전달방식을 약속하여야 한다. 이러한 약속을 프로토콜이라고 하며 통신소프트웨어가 지원&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;통신 하드웨어 제어 기능&lt;/strong&gt;
통신에 필요한 하드웨어와의 신호 및 데이터 송/수신을 행하는 모든 통신 제어를 소프트웨어가 지원&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;이용자 인터페이스 제어 기능&lt;/strong&gt;
이용자가 통신 시스템을 쉽게 지시하고 통신 기능을 원만히 수행할 수 있도록 하는 기본 명령을 소프트웨어가 지원&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 08 Apr 2021 00:00:00 +0900</pubDate>
        <link>https://many258.github.io/study/data-communication-protocol/</link>
        <guid isPermaLink="true">https://many258.github.io/study/data-communication-protocol/</guid>
        
        <category>데이터통신</category>
        
        
        <category>study</category>
        
      </item>
    
      <item>
        <title>[데이터통신] 인터네트워킹</title>
        <description>&lt;h1 id=&quot;인터네트워킹&quot;&gt;인터네트워킹&lt;/h1&gt;
&lt;p&gt;근거리 네트워크망 혹은 광역망 간에 상호 접속시키는 제반 기법으로 인터네트워킹의 전체 구성을 &lt;strong&gt;인터넷&lt;/strong&gt;이라고 하며 그 구성 요소를 &lt;strong&gt;서브넷&lt;/strong&gt;이라고 한다&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;TCP/IP를 기본 프로토콜로 한다&lt;/li&gt;
  &lt;li&gt;X.25 네트워크를 통한 가상 회선, 데이터그램 서비스를 제공&lt;/li&gt;
  &lt;li&gt;로컬 네트워크 상호 간 연결에는 &lt;strong&gt;브리지&lt;/strong&gt;가 사용&lt;/li&gt;
  &lt;li&gt;외부 네트워크와 연결할 경우에는 게이트웨이와 라우터가 필수적&lt;/li&gt;
  &lt;li&gt;IP는 여러 개의 패킷 교환망들의 상호 연결을 위한 범용 &lt;strong&gt;비연결성 프로토콜&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;TCP는 데이터 &lt;strong&gt;전송 프로토콜&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;HTTP, FTP, Telnet, Mail, IRC가 주요 서비스&lt;/li&gt;
  &lt;li&gt;다른 네트워크 또는 같은 네트워크를 연결하여 그 중추 역할을 하는 네트워크로 보통 &lt;strong&gt;인터넷의 주가 되는 기간망&lt;/strong&gt;을 &lt;strong&gt;백본&lt;/strong&gt;이라고 한다&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;인터네트워킹의-4계층&quot;&gt;인터네트워킹의 4계층&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;링크 계층&lt;/strong&gt;(물리 계층, 데이터 링크 계층)
    &lt;ul&gt;
      &lt;li&gt;통신망을 액세스할 수 있는 프로토콜로 흐름제어나 에러 제어의 서비스를 제공&lt;/li&gt;
      &lt;li&gt;Ethernet, IEEE802, X.25&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;인터넷 계층&lt;/strong&gt;(네트워크 계층)
    &lt;ul&gt;
      &lt;li&gt;데이터를 전송하기 위한 절차, 순서 제어 등의 서비스 제공&lt;/li&gt;
      &lt;li&gt;IP&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;전송 계층&lt;/strong&gt;(세션 계층, 전송 계층)
    &lt;ul&gt;
      &lt;li&gt;호스트들 간의 신뢰성 있는 통신 제공&lt;/li&gt;
      &lt;li&gt;연결 위주의 데이터 프로토콜, 데이터그램 프로토콜, 음성 프로토콜, 실시간 데이터 프로토콜&lt;/li&gt;
      &lt;li&gt;TCP&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;응용 계층&lt;/strong&gt;(표현 계층, 응용 계층)
    &lt;ul&gt;
      &lt;li&gt;응용 프로그램 간의 데이터 송수신을 제공&lt;/li&gt;
      &lt;li&gt;FTP, SMTP, Telnet 등&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;인터넷-프로토콜-스위트internet-protocol-suite&quot;&gt;인터넷 프로토콜 스위트(Internet Protocol Suite)&lt;/h2&gt;
&lt;p&gt;인터넷에서 컴퓨터들이 서로 정보를 주고받는 데 쓰이는 통신규약 모음이다. 인터넷 프로토콜 슈트 중 TCP와 IP가 가장 많이 쓰이기 때문에 TCP/IP 프로토콜 슈트라고도 불린다&lt;/p&gt;

&lt;h3 id=&quot;링크-계층&quot;&gt;링크 계층&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;프토토콜&lt;/th&gt;
      &lt;th&gt;기능&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;OSPF&lt;/td&gt;
      &lt;td&gt;- Open Shortest Path First, 최단 경로 우선 프로토콜&lt;br /&gt;- 인터넷 프로토콜 네트워크를 위한 링크 스테이트 라우팅 프로토콜&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SLIP&lt;/td&gt;
      &lt;td&gt;- Serial Line Internet Protocol, 직렬 회선 인터넷 프로토콜&lt;br /&gt;- 대부분의 컴퓨터에 내장된 직렬 포트에서 인터넷 등의 TCP/IP 네트워크에 전화선 등 직렬 통신 회선을 통해 일시적으로 접속하기 위한 프로토콜&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;PPP&lt;/td&gt;
      &lt;td&gt;- Point-to-Point  Protocol, 점 대 점 프로토콜&lt;br /&gt;- 두 통신 노드 간의 직접적인 연결을 위해 일반적으로 사용되는 데이터 링크 프로토콜&lt;br /&gt;- 인증, 암호화를 통한 전송 및 데이터 압축 기능 제공&lt;br /&gt;- SLIP, LAPB와 같은 프로토콜에 대한 대안으로 사용&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MAC&lt;/td&gt;
      &lt;td&gt;- Media Access Control, 매체 접근 제어&lt;br /&gt;- 자료 전송 프로토콜의 하부 계층이며 OSI 모델에 규정된 데이터 링크 계층의 일부&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Ethernet&lt;/td&gt;
      &lt;td&gt;- OSI 모델의 물리 계층에서 신호와 배선, 데이터 링크 계층에서 MAC 패킷과 프로토콜의 형식을 정의&lt;br /&gt;- 현재 가장 널리 사용되고 있으며, 토큰 링, FDDI 등의 다른 표준을 대부분 대체&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;DSL&lt;/td&gt;
      &lt;td&gt;- Digital Subscriver Line, 디지털 가입자 회선&lt;br /&gt;- 지역 전화망을 통해 디지털 데이터 전송을 제공하는 기술의 계열&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ISDN&lt;/td&gt;
      &lt;td&gt;- Integrated Service Digital Network, 광대역 종합 통신망&lt;br /&gt;- 모든 정보를 디지털 신호로 만들어 하나의 네트워크를 통하여 문자, 그림, 음성, 화상, 비디오, 팩시밀리 등과 같은 모든 종류의   서비스를 제공하는 통신망&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;FDDI&lt;/td&gt;
      &lt;td&gt;- Fiber Distributed Data Interface, 파이버 분산형 데이터 인터페이스&lt;br /&gt;- 근거리 통신망의 데이터 전송을 위한 100Mbit/sec의 광 표준을 제공&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;RARP&lt;/td&gt;
      &lt;td&gt;- Reverse Address Resolution Protocol, 역순 주소 결정 프로토콜&lt;br /&gt;- IP호스트가 자신의 물리 네트워크 주소(MAC)는 알지만 IP주소를 모르는 경우에 서버로부터 IP주소를 요청하기 위해 사용&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;인터넷-계층&quot;&gt;인터넷 계층&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;프로토콜&lt;/th&gt;
      &lt;th&gt;기능&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;IP&lt;/td&gt;
      &lt;td&gt;- Internet Protocol, 인터넷 프로토콜&lt;br /&gt;- 송신 호스트와 수신 호스트가 패킷 교환 네트워크에서 정보를 주고받는 데 사용하는 정보 위주의 규약&lt;br /&gt;- 호스트의 주소 지정과 패킷 분할 및 재조립 기능 담당&lt;br /&gt;- 비신뢰성(Unreliability), 비연결성(Connectionlessness)&lt;br /&gt;- IPv4, IPv6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ARP&lt;/td&gt;
      &lt;td&gt;- Address Resolution Protocol, 주소 결정 프로토콜&lt;br /&gt;- 네트워크 상에서 IP주소를 물리적 네트워크 주소로 대응시키기 위해 사용되는 프로토콜&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ICMP&lt;/td&gt;
      &lt;td&gt;- Internet Control Message Protocol, 인터넷 제어 메시지 프로토콜&lt;br /&gt;- 네트워크 컴퓨터 위에서 돌아가는 운영체제에서 오류메시지를 전송하는 데 주로 사용&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;IGMP&lt;/td&gt;
      &lt;td&gt;- Internet Group Management Protocol, 인터넷 그룹 관리 프로토콜&lt;br /&gt;- 호스트 컴퓨터와 인접 라우터가 멀티캐스트 그룹 멤버십을 구성하는 데 사용하는 통신 프로토콜&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;IPSec&lt;/td&gt;
      &lt;td&gt;- Internet Protocol Security&lt;br /&gt;- 통신 세션의 각 IP패킷을 암호화하고 인증하는 안전한 인터넷 프로토콜 통신을 위한 인터넷 프로토콜 스위트&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;전송-계층&quot;&gt;전송 계층&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;프로토콜&lt;/th&gt;
      &lt;th&gt;기능&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;TCP&lt;/td&gt;
      &lt;td&gt;- Transmission Control Protocol, 전송 제어 프로토콜&lt;br /&gt;- 네트워크의 정보 전달을 통제하는 프로토콜이자 인터넷을 이루는 핵심 프로토콜&lt;br /&gt;- 연결형, 신뢰성 확보, 복구 기능 제공, 순서 재조정 기능&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;QUIC&lt;/td&gt;
      &lt;td&gt;- 범용 목적의 전송 계층 통신 프로토콜&lt;br /&gt;- TCP를 사용하는 연결 지향 웹 애플리케이션의 성능을 개선&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;UDP&lt;/td&gt;
      &lt;td&gt;- User/Universal Datagram Protocol, 사용자 데이터그램 프로토콜&lt;br /&gt;- 인터넷 프로토콜 스위트의 주요 프로토콜&lt;br /&gt;- 주로 DNS, IPTV, VoIP, TFTP, IP터널에서 사용&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;DCCP&lt;/td&gt;
      &lt;td&gt;- Datagram Congestion Control Protocol, 데이터그램 혼잡 제어 프로토콜&lt;br /&gt;- 메시지 지향적인 전송 계층 통신 프로토콜&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SCTP&lt;/td&gt;
      &lt;td&gt;- Stream Control Transmission Protocol, 스트림 제어 전송 프로토콜&lt;br /&gt;- 컴퓨터 네트워킹에서 프로토콜 번호 132를 사용하는 전송 계층 프로토콜&lt;br /&gt;- TCP와 UDP의 동일한 서비스 기능들 가운데 일부를 제공&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;RSVP&lt;/td&gt;
      &lt;td&gt;- Resource ReSerVation Protocol, 자원 예약 프로토콜&lt;br /&gt;- RFC 2205에 기술된 전송 계층 프로토콜&lt;br /&gt;- 네트워크 상에서 자원을 예약할 수 있도록 디자인된 프로토콜&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;응용-계층&quot;&gt;응용 계층&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;프로토콜&lt;/th&gt;
      &lt;th&gt;기능&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;BGP&lt;/td&gt;
      &lt;td&gt;- Border Gateway Protocol, 경계 경로 프로토콜&lt;br /&gt;- 인터넷에서 자율시스템(AS) 중 라우팅 및 도달 가능성 정보를 교환하기 위해 설계된, 표준화된 외부 게이트웨이 프로토콜의 하나&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;NSP&lt;/td&gt;
      &lt;td&gt;- Name Service Protocol&lt;br /&gt;- DNS가 발표되기 전 사용되던 호스크와 IP 어드레스의 매핑 프로토콜&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;DNS&lt;/td&gt;
      &lt;td&gt;- Domain Name System, 도메인 네임 시스템&lt;br /&gt;- 호스트의 도메인 이름을 호스트의 네트워크 주소로 바꾸거나 그 반대의 변환을 수행할 수 있도록 하기 위해 개발&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;LLMNR&lt;/td&gt;
      &lt;td&gt;- Link-Local Multicast Name Resolution&lt;br /&gt;- DNS을 기반으로 고완된 프로토콜&lt;br /&gt;- 패킷 포맷 IPv4, IPv6 호스트 상에서 모두 사용 가능&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Archie&lt;/td&gt;
      &lt;td&gt;FTP 지원 프로토콜로 전 세계의 FTP Host를 검색하는 프로토콜&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;FTP&lt;/td&gt;
      &lt;td&gt;- File Transfer Protocol, 파일 전송 프로토콜&lt;br /&gt;- TCP/IP 프로토콜을 가지고 서버와 클라이언트 사이의 파일 전송을 하기 위한 프로토콜&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;TFTP&lt;/td&gt;
      &lt;td&gt;- Trivial File Transfer Protocol&lt;br /&gt;- FTP보다 더 단순한 방식으로 파일을 전송(불안정하다는 단점이 존재)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SFTP&lt;/td&gt;
      &lt;td&gt;- SSH/Secure File Transfer Protocol&lt;br /&gt;- 신뢰할 수 있는 데이터 스트림을 통해 파일 접근, 파일 전송, 파일 관리를 제공하는 네트워크 프로토콜&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;HTTP&lt;/td&gt;
      &lt;td&gt;- Hyper Text Transfer Protocol(80 Port)&lt;br /&gt;- 인터넷에서 고급화된 파일(텍스트, 그래픽, 사운드, 오디오 등)을 송수신하는 서비스&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;POP3&lt;/td&gt;
      &lt;td&gt;- Post Office Protocol&lt;br /&gt;- 원격 서버로부터 TCP/IP 연결을 통해 이메일을 가져오는데 사용&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;IMAP&lt;/td&gt;
      &lt;td&gt;- Internet Message Access Protocol, 인터넷 메시지 접속 프로토콜&lt;br /&gt;- 원격 서버로부터 TCP/IP 연결을 통해 이메일을 가져오는데 사용&lt;br /&gt;- 온라인/오프라인을 지원하므로 POP3와 달리 이메일 메시지를 서버에 남겨 두었다가 나중에 삭제 가능&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;LDAP&lt;/td&gt;
      &lt;td&gt;- Lightweight Directory Access Protocol, 경량 디렉토리 접근 프로토콜&lt;br /&gt;- TCP/IP위에서 디렉터리 서비스를 조회하고 수정하는 응용 프로토콜&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MQTT&lt;/td&gt;
      &lt;td&gt;- Message Queuing Telemetry Transport&lt;br /&gt;- ISO 표준 발생-구독 기반의 메시징 프로토콜&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;NNTP&lt;/td&gt;
      &lt;td&gt;- Network News Transfer Protocol&lt;br /&gt;- 뉴스 서버 간에 유즈넷 뉴스 기사를 전송하고 최종 사용자 클라이언트 애플리케이션에 의해 기사를 구독, 게시할 수 있게 하기 위한 애플리케이션 프로토콜&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;NTP&lt;/td&gt;
      &lt;td&gt;- Network Time Protocol&lt;br /&gt;- 패킷 교환, 가변 레이턴시 데이터 네트워크를 통해 컴퓨터 시스템 간 시간 동기화를 위한 네트워크 프로토콜&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;RTP&lt;/td&gt;
      &lt;td&gt;- Real-Time Transport Protocol&lt;br /&gt;- 네트워크상에서 음성이나 영상 또는 시뮬레이션 데이터 등 실시간 전송이 필요한 응용에 대하여 편리한 전송 기능을 제공&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;RTCP&lt;/td&gt;
      &lt;td&gt;- Real-Time Control Protocol&lt;br /&gt;- 세션의 모든 참여자에게 컨트롤 패킷을 주기적으로 전송&lt;br /&gt;- 데이터 전송을 모니터링하고 최소한의 제어와 인증 기능을 제공&lt;br /&gt;- RTP 세션의 대역 외 통계 및 제어 정보를 제공&lt;br /&gt;- RTCP가 직접 미디어 데이터를 전송하지는 않는다&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;RTSP&lt;/td&gt;
      &lt;td&gt;- Real Time Streaming Protocol&lt;br /&gt;- 스트리밍 미디어 서버를 제어할 목적으로 엔터테인먼트, 통신 시스템에 사용하도록 설계된 네트워크 제어 프로토콜&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;RIP&lt;/td&gt;
      &lt;td&gt;- Routing Information Protocol&lt;br /&gt;- UDP/IP 상에서 동작하는 라우팅 프로토콜&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SIP&lt;/td&gt;
      &lt;td&gt;- Session Initiation Protocol&lt;br /&gt;- IETE에서 정의한 시그널링 프로토콜로 음성과 화상통화같은 멀티미디어 세션을 제어하기 위해 널리 사용&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SMTP&lt;/td&gt;
      &lt;td&gt;- Simple Mail Transfer Protocol(25 Port)&lt;br /&gt;- 인터넷에서 이메일을 보내기 위해 이용되는 프로토콜&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SNMP&lt;/td&gt;
      &lt;td&gt;- Simple Network Management Protocol, 간이 망 관리 프로토콜&lt;br /&gt;- IP 네트워크상의 장치로부터 정보를 수집 및 관리하며, 또한 정보를 수정하여 장치의 동작을 변경하는 데 사용&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SSH&lt;/td&gt;
      &lt;td&gt;- Secure SHell, 시큐어 셸 (22 Port)&lt;br /&gt;- 네트워크 상의 다른 컴퓨터에 로그인하거나 원격 시스템에서 명령을 실행하고 다른 시스템으로 파일을 복사할 수 있도록 해주는 응용 프로그램 또는 프로토콜&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Telnet&lt;/td&gt;
      &lt;td&gt;- 멀리 떨어진 호스트에 원격 접속하여 사용할 수 있는 가상 터미널(VT) 서비스 프로토콜&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;TLS/SSL&lt;/td&gt;
      &lt;td&gt;- Transport Layer Security/Secure Sockets Layer&lt;br /&gt;- 컴퓨터 네트워크에 통신 보안을 제공하기 위해 설계된 암호 규약&lt;br /&gt;- TCP/IP 네트워크를 사용하는 통신에 적용되며 통신 과정에서 전송 계층 종단간 보안과 데이터 무결성을 확보해준다&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;XMPP&lt;/td&gt;
      &lt;td&gt;- eXtensible Messaging and Presense Protocol&lt;br /&gt;- XML에 기반한 메시지 지향 미들웨어용 통신 프로토콜&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Gopher&lt;/td&gt;
      &lt;td&gt;- 인터넷을 위해 고안된 문서 검색 프로토콜&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;IRC&lt;/td&gt;
      &lt;td&gt;- Internet Relay Chat&lt;br /&gt;- 인터넷 채팅 서비스 프로토콜&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;DHCP&lt;/td&gt;
      &lt;td&gt;- Dynamic Host Configuration Protocol&lt;br /&gt;- 호스트 IP 구성 관리를 단순화하는 IP 표준&lt;br /&gt;- 네트워크에 연결되어 있는 컴퓨터가 시동될 때 DHCP 서버로부터 IP 주소와 구성 매개 변수를 동적으로 할당받아 자동으로 TCP/IP 설정이 이루어진다&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;프로토콜-구조&quot;&gt;프로토콜 구조&lt;/h2&gt;
&lt;h3 id=&quot;tcp-header&quot;&gt;TCP Header&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;SRC&lt;/strong&gt;(Source Port) : 송신측의 포트 주소 기록&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;DEST&lt;/strong&gt;(Destination) : 수신측의 포트 주소 기록&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;SEQ&lt;/strong&gt;(Sequence Number) : 전체 데이터의 세그먼트 위치 기록(상위)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;ACK&lt;/strong&gt;(Acknowledgment) : 전체 데이터 세그먼트 위치를 기록(하위)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;DO&lt;/strong&gt;(Data Offset) : TCP 헤더 길이 기록&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;RES&lt;/strong&gt;(Reserved) : 확장될 때 사용할 예비 영역&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;CF&lt;/strong&gt;(Control Flags) : 패킷의 종류를 표시하는 플래그&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;WINDOW&lt;/strong&gt; : 수신 가능한 최대 세그먼트 길이를 기록&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;CS&lt;/strong&gt;(Checksum) : 오류를 체크하는 알고리즘 기록&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;URGPTR&lt;/strong&gt;(Urgent Pointer) : 긴급 데이터 포인트 기록&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;udp-header-8byte&quot;&gt;UDP Header (8Byte)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Source&lt;/strong&gt; Port Number : 송신 포트번호&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Destination&lt;/strong&gt; Port Number : 수신 포트번호&lt;/li&gt;
  &lt;li&gt;UDP Total &lt;strong&gt;length&lt;/strong&gt; : UDP 헤더와 데이터를 합친 길이&lt;/li&gt;
  &lt;li&gt;UDP &lt;strong&gt;Checksum&lt;/strong&gt; : UDP 헤더와 데이터를 모두 포함하여 검사&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;rtp-header&quot;&gt;RTP Header&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Padding&lt;/strong&gt;(P)&lt;br /&gt;
세팅되어 있는 경우는 그 패킷의 끝에 전송하려는 데이터 외에 &lt;strong&gt;추가적인 데이터&lt;/strong&gt;들이 포함되어 있다&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Marker&lt;/strong&gt;(M)&lt;br /&gt;
패킷 스트림에서 프레임 간의 &lt;strong&gt;경계에 존재&lt;/strong&gt;하는 특별한 경우를 표시&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Extension&lt;/strong&gt;(X)&lt;br /&gt;
세팅되어 있는 경우는 RTP 헤더 마지막에 &lt;strong&gt;확장 헤더가 있음을&lt;/strong&gt; 의미&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Payload Type&lt;/strong&gt;(PT)&lt;br /&gt;
데이터가 어떤 형식인지를 지정&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Timestamp&lt;/strong&gt;&lt;br /&gt;
데이터그램에 포함된 &lt;strong&gt;데이터의 생성 시기&lt;/strong&gt;를 나타낸다&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;rtcp-패킷-유형&quot;&gt;RTCP 패킷 유형&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;SR(Sender Report) : 세션의 품질에 대한 정보를 포함&lt;/li&gt;
  &lt;li&gt;RR(Receiver Report) : 세션의 품질에 대한 정보를 포함&lt;/li&gt;
  &lt;li&gt;SDES(Source Description) : 세션에 속한 각 참가자의 ID에 대한 정보를 포함&lt;/li&gt;
  &lt;li&gt;BYE(Goodbye) : 세션에서 하나 이상의 소스가 더 이상 활성화 상태가 아님을 나타낸다&lt;/li&gt;
  &lt;li&gt;APP(APPlication-defined) : 새 응용 프로그램에서 실험적으로 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;RR/SR Header
    &lt;ul&gt;
      &lt;li&gt;버전&lt;/li&gt;
      &lt;li&gt;패딩 : 1로 설정된 경우, 추가 패딩 옥텟의 개수&lt;/li&gt;
      &lt;li&gt;수신 보고서 개수 : RTCP 패킷에 포함된 수신 블록의 개수&lt;/li&gt;
      &lt;li&gt;패킷 유형 : RR(201), SR(200)&lt;/li&gt;
      &lt;li&gt;길이 : 1을 뺀 32비트 단어에 RTCP 패킷의 길이를 포함&lt;/li&gt;
      &lt;li&gt;식별자 : 패킷의 동기화 소스 식별자를 포함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ip-header&quot;&gt;IP Header&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;VER(Version, 4bit)&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;IHL(Internet Header Length, 4bit)&lt;br /&gt;
IP 헤더 길이로 보통 24바이트 정도이다. 4비트로 표현된 길이에 4바이트를 곱하면 IP 헤더의 길이&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;TOS(Type Source, 8bit)&lt;br /&gt;
IP 서비스 형태로 상위층에 의해 결정&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;TL(Total Length, 16bit)&lt;br /&gt;
IP 헤더 길이와 TCP 헤더와 TCP 데이터의 길이를 더한 길이&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ID(IDentification, 16bit)&lt;br /&gt;
참고 정보들이 기록&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;FL(Flags, 3bit)&lt;br /&gt;
패킷 분할의 정보로 첫 번째 비트는 사용하지 않고, 2번째 비트가 ‘1’이면 분할 가능, ‘0’이면 분할 불가를 의미하고 3번째 비트가 ‘0’이면 분할된 패킷의 최후 패킷을 의미&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;TTL(Time To Live, 8bit)&lt;br /&gt;
패킷을 처리하는 데 필요한 시간으로 데이터그램 패킷의 최대 수명 시간은 255초. 범람 라우팅에서는 Hop Count로 사용하는 블록&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;PROT(PROTocol, 8bit)&lt;br /&gt;
IP 계층에서 서비스를 받을 상위 계층의 프로토콜 번호로 TCP 계층의 TCP(6)/UDP(17)을 기입하는 블록&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;HC(Header Checksum, 16bit)&lt;br /&gt;
IP헤더의 오류 체크 블록&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SOURCE(Source address, 32bit)&lt;br /&gt;
송신측의 IP 어드레스&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;DEST(DESTination, 32bit)&lt;br /&gt;
수신측의 IP 어드레스&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;OPT(OPTion)&lt;br /&gt;
표준 IP헤더에는 없는 정보를 송신할 때 사용하는 블록&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 08 Apr 2021 00:00:00 +0900</pubDate>
        <link>https://many258.github.io/study/data-communication-internetworking/</link>
        <guid isPermaLink="true">https://many258.github.io/study/data-communication-internetworking/</guid>
        
        <category>데이터통신</category>
        
        
        <category>study</category>
        
      </item>
    
      <item>
        <title>[데이터통신] 근거리 네트워킹(LAN)</title>
        <description>&lt;h1 id=&quot;lanlocal-area-network&quot;&gt;LAN(Local Area Network)&lt;/h1&gt;
&lt;p&gt;동일 빌딩 내 또는 한정된 지역 내 등 &lt;strong&gt;비교적 좁은 지역&lt;/strong&gt;에 분산 배치된 컴퓨터와 프린터 등의 단말기를 &lt;strong&gt;통신 회선으로 연결&lt;/strong&gt;하여 각종 정보를 교환할 수 있는 통신 네트워크&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;단일 기관의 소유 및 제한된 지역 내의 네트워크&lt;/li&gt;
  &lt;li&gt;어떤 종류의 통신 시스템 기기와도 연결이 가능&lt;/li&gt;
  &lt;li&gt;광대역 전송 매체의 사용으로 고속 통신 가능&lt;/li&gt;
  &lt;li&gt;오류 발생률이 낮으며, 전송 지연을 최소화할 수 있다&lt;/li&gt;
  &lt;li&gt;공유 매체의 사용으로 &lt;strong&gt;경로 선택없이&lt;/strong&gt; 매체에 연결된 모든 장치로 데이터 전송 가능&lt;/li&gt;
  &lt;li&gt;통신 기기의 &lt;strong&gt;재배치와 확장성이 좋다&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;노드 값이 저렴&lt;/li&gt;
  &lt;li&gt;기본 형태는 스타형, 링형, 버스형, 계층형으로 분류&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;lan의-평가-요소&quot;&gt;LAN의 평가 요소&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;지연 시간(&lt;strong&gt;Turn Around Time&lt;/strong&gt;)&lt;/li&gt;
  &lt;li&gt;시스템 신뢰성(&lt;strong&gt;System Reliability&lt;/strong&gt;)&lt;/li&gt;
  &lt;li&gt;응답 시간(&lt;strong&gt;Reponse Time&lt;/strong&gt;)&lt;/li&gt;
  &lt;li&gt;처리량(&lt;strong&gt;Throughput&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;lan의-서비스-영역에-따른-구분&quot;&gt;LAN의 서비스 영역에 따른 구분&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;CO-LAN&lt;/strong&gt;(Central Office LAN)&lt;br /&gt;
대학, 병원 및 연구소, 기업체 등 LAN 구성 여건이 미비한 지역과 지역 사이를 기존의 통신망을 연결시켜 제공한 망으로 보통 공중 기업 데이터망이라 한다&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;MAN&lt;/strong&gt;(Metropolitan Area Network)&lt;br /&gt;
LAN의 지역적인 협소성을 경제적으로 개선한 망으로 서비스 범위는 대략 50Km 영역으로 규정짓고 있다. 도시형 통신망이라고도 하며, 대단위 아파트 단지 등을 대상으로 구성하는 통신망&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;WAN&lt;/strong&gt;(Wide Area Network)&lt;br /&gt;
지역적인 거리와 무관하게 같은 이해 단체 간을 연결한 망 형태로 각기 다른 LAN을 통합해야 하는 어려움이 있지만 &lt;strong&gt;망간의 폐쇄성 때문에 안전성이 뛰어나&lt;/strong&gt; 많이 사용되는 형태&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;VAN&lt;/strong&gt;(Value Added Network)&lt;br /&gt;
통신회선을 직접 보유하거나 통신 사업자의 회선을 임차하여 단순한 정보 기능 이상의 &lt;strong&gt;부가가치를 부여&lt;/strong&gt;하고 음성 또는 데이터 정보를 제공하는 광범위하고도 복합적인 통신 서비스 형태&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;lan의-통신-방식에-따른-구분&quot;&gt;LAN의 통신 방식에 따른 구분&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;베이스밴드&lt;/strong&gt; 방식
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;디지털&lt;/strong&gt; 신호&lt;/li&gt;
      &lt;li&gt;채널이 1개&lt;/li&gt;
      &lt;li&gt;전송 속도는 1~10Mbps&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;양방향 통신&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;데이터 전송에 응용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;브로드밴드&lt;/strong&gt; 방식
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;아날로그&lt;/strong&gt; 신호&lt;/li&gt;
      &lt;li&gt;채널이 20~30개&lt;/li&gt;
      &lt;li&gt;전송 속도는 150Mbps&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;단방향 통신&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;음성, 영상 전송에 응용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;lan의-기본-형태&quot;&gt;LAN의 기본 형태&lt;/h2&gt;

&lt;h3 id=&quot;스타형성형&quot;&gt;스타형(성형)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;중앙&lt;/strong&gt;에 컴퓨터가 있고 이를 중심으로 단말기가 연결된 형태&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;네트워크 구성의 가장 기본적인 형태로 교환 노드의 수가 적다&lt;/li&gt;
  &lt;li&gt;온라인 시스템의 전형적인 방식&lt;/li&gt;
  &lt;li&gt;중앙 집중 제어용이므로 보수 관리와 단말기의 추가, 삭제가 용이&lt;/li&gt;
  &lt;li&gt;각 단말기마다 &lt;strong&gt;전송 속도를 다르게&lt;/strong&gt; 할 수 있다&lt;/li&gt;
  &lt;li&gt;하나의 단말기가 고장나도 &lt;strong&gt;다른 단말기에 영향을 주지 않는다&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;단말기의 고장 발견이 쉽다&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;독립된 경로를 갖고&lt;/strong&gt; 있으므로 &lt;strong&gt;보안성이 뛰어나다&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;중앙 컴퓨터가 고장나면 전체 시스템이 마비&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;링형&quot;&gt;링형&lt;/h3&gt;
&lt;p&gt;서로 &lt;strong&gt;이웃&lt;/strong&gt;하고 있는 단말기가 컴퓨터끼리만 연결시킨 형태&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;양쪽 방향으로 접근이 가능하여 통신 장애에 대한 &lt;strong&gt;융통성&lt;/strong&gt;이 존재&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;LAN에서 가장 많이 채택&lt;/strong&gt;되고 있는 방식&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;중계기의 수가 많아&lt;/strong&gt;진다&lt;/li&gt;
  &lt;li&gt;한 노드가 절단되어도 우회로를 구성하여 통신이 가능한 형태의 통신망&lt;/li&gt;
  &lt;li&gt;단말기의 추가 및 삭제가 복잡&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;공유하는 경로를 갖고&lt;/strong&gt; 있으므로 &lt;strong&gt;보안성이 떨어진다&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;버스형&quot;&gt;버스형&lt;/h3&gt;
&lt;p&gt;1개의 통신 회선에 여러 개의 단말기를 접속하는 형태&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;통신 회선이 1개이므로 물리적 구조가 간단&lt;/li&gt;
  &lt;li&gt;단말기의 추가 및 삭제가 용이&lt;/li&gt;
  &lt;li&gt;하나의 단말기가 고장나도 다른 단말기에 영향을 주지 않는다&lt;/li&gt;
  &lt;li&gt;공유하는 경로를 갖고 있으므로 보안성이 떨어진다&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;lan의-전송-매체&quot;&gt;LAN의 전송 매체&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;케이블 규격
    &lt;blockquote&gt;
      &lt;p&gt;X BASE/BROAD Y&lt;br /&gt;
&lt;sub&gt;&lt;strong&gt;X&lt;/strong&gt; : 데이터 전송 속도(단위-1Mbps)&lt;/sub&gt;&lt;br /&gt;
&lt;sub&gt;&lt;strong&gt;Y&lt;/strong&gt; : 길이(단위-100M)&lt;/sub&gt;&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;꼬임선 케이블(Twisted Cable)
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;전기적 간섭 현상을 줄이기 위해&lt;/strong&gt;서 균일하게 서로 감겨있는 형태의 케이블&lt;/li&gt;
      &lt;li&gt;하나의 케이블에 여러 쌍의 꼬임선들을 절연체로 피복하여 구성&lt;/li&gt;
      &lt;li&gt;다른 전송 매체에 비해서 거리/대역폭/데이터 전송률 면에서 제한적&lt;/li&gt;
      &lt;li&gt;가격이 저렴하고 설치가 간편한 이점&lt;/li&gt;
      &lt;li&gt;주파수 대역이 좁기 때문에 채널 수가 제한적&lt;/li&gt;
      &lt;li&gt;내구성이 약하다&lt;/li&gt;
      &lt;li&gt;스타형/링형/버스형에서 주로 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;동축 케이블(Coaxial Cable)
    &lt;ul&gt;
      &lt;li&gt;신뢰성/경제성/내구성 우수&lt;/li&gt;
      &lt;li&gt;버스형/링형에 주로 사용&lt;/li&gt;
      &lt;li&gt;베이스밴드 방식&lt;br /&gt;
디지털 신호를 변조하지 않고 사용하며 데이터 통신에 적합&lt;/li&gt;
      &lt;li&gt;브로드밴드 방식&lt;br /&gt;
주파수를 다중화시켜 사용하며 CATV에 적합&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;광 케이블(Optical Fiber Cable)
    &lt;ul&gt;
      &lt;li&gt;LAN의 전송 매체 중 가장 우수&lt;/li&gt;
      &lt;li&gt;대역폭이 넓어 정보 전송 능력이 향상되며, 동축 케이블보다 신호 감쇠 현상이 매우 적다&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;전기적 잡음 영향을 받지 않기 때문에&lt;/strong&gt; 신뢰성이 좋다&lt;/li&gt;
      &lt;li&gt;광을 이용하여 전송하기 때문에 &lt;strong&gt;보안성&lt;/strong&gt;이 뛰어나다&lt;/li&gt;
      &lt;li&gt;동축 케이블에 비해 &lt;strong&gt;무게와 크기에서 이점&lt;/strong&gt;을 가진다&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;전기적으로 무 유도성, 무 누화&lt;/strong&gt;이다&lt;/li&gt;
      &lt;li&gt;고속의 데이터 전송과 대량의 데이터 전송이 가능&lt;/li&gt;
      &lt;li&gt;작은 크기와 적은 무게로 설치가 용이&lt;/li&gt;
      &lt;li&gt;많은 중계 급 전선이 필요하지 않다(증폭기 간격 최대 119Km)&lt;/li&gt;
      &lt;li&gt;버스형과 링형에 주로 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;van&quot;&gt;VAN&lt;/h2&gt;
&lt;p&gt;통신 회선을 직접 보유하거나 통신 사업자의 회선을 임차하여 단순한 정보 기능이상의 &lt;strong&gt;부가가치를 부여&lt;/strong&gt;하고 음성 또는 데이터 정보를 제공하는 광범위하고도 복합적인 통신 서비스&lt;/p&gt;

&lt;h3 id=&quot;van-계층&quot;&gt;VAN 계층&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;정보 처리 계층(응용 계층) - &lt;strong&gt;정보 처리 기능&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;업무 처리, DB 관리, 고객 관리, 회계 관리 등 제공&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;통신 처리 계층(표현/세션/전송 계층) - &lt;strong&gt;통신 처리 기능&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;속도 변환, 코드 변환, 포맷 변환, 미디어 변환, 프로토콜 변환&lt;/li&gt;
      &lt;li&gt;메일 박스 : 메시지를 축적해두고 필요시 꺼내는 기능&lt;/li&gt;
      &lt;li&gt;동보 통신 : 1번의 통신으로 다수의 상대방에게 동일한 메시지를 보내는 기능&lt;/li&gt;
      &lt;li&gt;시각 지정 통신 : 정해진 시간에 메시지를 전송하는 기능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;네트워크 계층(네트워크 계층) - &lt;strong&gt;교환 기능&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;패킷 교환, 회선 교환&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;기본 처리 계층(데이터링크/물리) - &lt;strong&gt;전송 기능&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;물리적 회선을 의미하여 정보를 단순히 전송하는 고유 기능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;이더넷ethernet&quot;&gt;이더넷(Ethernet)&lt;/h2&gt;
&lt;p&gt;LAN의 가장 대표적인 버스 구조 방식으로 DEC, Intel, Xerox가 공동으로 개발시킨 &lt;strong&gt;표준 LAN&lt;/strong&gt;을 이더넷이라고 부른다.&lt;/p&gt;

&lt;p&gt;이더넷은 데이터를 보내려는 컴퓨터가 먼저 통신망이 사용중인지 아닌지 판별한 후에 비어 있을 때 데이터를 보내는 CSMA/CD 방식을 사용&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;접근 방법 : &lt;strong&gt;CSMA/CD&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;주소 지정 : &lt;strong&gt;6바이트&lt;/strong&gt;의 물리적인 주소&lt;/li&gt;
  &lt;li&gt;신호 방식 : &lt;strong&gt;맨체스터&lt;/strong&gt; 디지털 부호&lt;/li&gt;
  &lt;li&gt;데이터 전송률 : 1~100Mbps&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;교환형 이더넷(Switched Ethernet)
    &lt;ul&gt;
      &lt;li&gt;10BASE-T형 이더넷의 성능을 향상시킨 모델&lt;/li&gt;
      &lt;li&gt;물리적으로 스타형, 논리적으로 버스형의 형태&lt;/li&gt;
      &lt;li&gt;이론적인 전송속도 : 10Mbps * N(교환기의 수)&lt;/li&gt;
      &lt;li&gt;스위칭 기술의 도입으로 불필요한 패킷의 흐름을 막을 수 있다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;고속 이더넷(Fast Ethernet)
    &lt;ul&gt;
      &lt;li&gt;영상처리/실시간 오디오/비디오와 같은 새로운 응용들이 구현되면서 10Mbps보다 높은 전송 속도가 필요하여 개발된 모델&lt;/li&gt;
      &lt;li&gt;데이터 전송률 : 100Mbps&lt;/li&gt;
      &lt;li&gt;변형된 스타형의 형태&lt;/li&gt;
      &lt;li&gt;전송 속도가 증가되었으며 충돌 영역도 감소&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;기가비트 이더넷(Gigabit Ethernet)
    &lt;ul&gt;
      &lt;li&gt;광 케이블을 사용하며, 전송속도는 1Gbps&lt;/li&gt;
      &lt;li&gt;전이중, 반이중 통신 방식 지원&lt;/li&gt;
      &lt;li&gt;최소한의 충돌 감지를 위하여 프레임 크기를 64바이트에서 512바이트로 확장&lt;/li&gt;
      &lt;li&gt;기존 네트워크와의 호환성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 07 Apr 2021 00:00:00 +0900</pubDate>
        <link>https://many258.github.io/study/data-communication-lan/</link>
        <guid isPermaLink="true">https://many258.github.io/study/data-communication-lan/</guid>
        
        <category>데이터통신</category>
        
        
        <category>study</category>
        
      </item>
    
      <item>
        <title>[데이터통신] 인터넷 고속 접속 서비스</title>
        <description>&lt;h1 id=&quot;종합-정보-통신망isdn--integrated-service-digital-network&quot;&gt;종합 정보 통신망(ISDN : Integrated Service Digital Network)&lt;/h1&gt;
&lt;p&gt;음성 및 비음성의 다양한 통신 서비스를 하나의 통신망을 통하여 &lt;strong&gt;종합적으로 서비스&lt;/strong&gt;해주는 통신 시스템&lt;/p&gt;

&lt;p&gt;즉, 기존의 음성 서비스를 제공하는 공중 교환 전화망(PSTN), 데이터 통신 서비스를 제공하는 공중 교환 데이터망(PSDN)과 무선이나 별개의 통신망을 통하여 화상 서비스 받는 등 &lt;strong&gt;모든 통신망을 하나의 디지털 네트워크&lt;/strong&gt;를 통하여 제공하는 통신망 기술&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;모든 정보 통신망을 하나의 통신망으로 통폐합하여 &lt;strong&gt;확장성과 재배치성&lt;/strong&gt;이 좋다&lt;/li&gt;
  &lt;li&gt;동시에 복수 통신이 가능&lt;/li&gt;
  &lt;li&gt;모든 통신 선로와 교환기를 디지털화&lt;/li&gt;
  &lt;li&gt;기존 전화망은 디지털 교환기와 연결하여 &lt;strong&gt;기본 서비스&lt;/strong&gt;(2B+D)를 제공&lt;/li&gt;
  &lt;li&gt;규모가 큰 사용자와 기업은 광케이블을 설치하여 &lt;strong&gt;1차군 서비스&lt;/strong&gt;(23B+D, 30B+D)를 제공&lt;/li&gt;
  &lt;li&gt;통신망의 중복 투자를 피할 수 있어 &lt;strong&gt;경제적&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;통신망의 교환 접속 기능에는 회선 교환 방식과 패킷 교환 방식이 존재&lt;/li&gt;
  &lt;li&gt;64Kbps 1회선 교환 서비스가 기본&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;isdn-서비스&quot;&gt;ISDN 서비스&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;베어러 서비스&lt;/strong&gt;(Bearer Service)&lt;br /&gt;
통신망이 제공할 수 있는 회선 교환, 패킷 교환 등 전달되는 데이터에 변형을 주지 않고 그대로 전달만 하는 서비스.&lt;/p&gt;

    &lt;p&gt;OSI 모델의 &lt;strong&gt;하위 계층&lt;/strong&gt;(물리 계층, 데이터 링크 계층, 네트워크 계층)의 기능을 제공하는 서비스&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;텔레 서비스&lt;/strong&gt;(Tele Service)&lt;br /&gt;
실제로 단말을 조작하고 통신하는 이용자측의 서비스. 전화/비디오텍스/팩시밀리/텔렉스 등 협대역 서비스와 고품질의 음성, 화상 회의 등 64Kbps에서 2Mbps까지 이르는 광대역 서비스.&lt;/p&gt;

    &lt;p&gt;전송 기능 외에 정보 처리 기능까지 서비스하며 &lt;strong&gt;OSI 모델의 전 계층&lt;/strong&gt;의 기능을 제공&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;isdn이-제공하는-채널의-종류&quot;&gt;ISDN이 제공하는 채널의 종류&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;채널&lt;/th&gt;
      &lt;th&gt;신호 속도&lt;/th&gt;
      &lt;th&gt;내용&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;B(Bearer)&lt;/td&gt;
      &lt;td&gt;64Kbps&lt;/td&gt;
      &lt;td&gt;- 음성이나 데이터 전송을 위한 디지털 채널&lt;br /&gt;- 기본적인 이용자 데이터 채널로 PCM화된 디지털 음성이나 회선 교환 혹은 패킷 교환 등에 이용&lt;br /&gt;- 고속의 데이터는 회석 교환 방식이나 패킷 교환 방식을 이용&lt;br /&gt;- 팩시밀리, 저속의 비디오 데이터를 전송할 때 사용되기도 한다&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;D(Data)&lt;/td&gt;
      &lt;td&gt;16Kbps/64Kbps&lt;/td&gt;
      &lt;td&gt;- 회선 교환의 신호 채널로 사용&lt;br /&gt;- 소량의 사용자 데이터를 전송하는 기능 제공&lt;br /&gt;- 서비스 제어를 위한 채널과 저속의 패킷 전송 채널로 사용&lt;br /&gt;- 패킷 교환이나 신호를 기다리지 않는 저속 원격 계측에도 사용&lt;br /&gt;- 텔레텍스, 비상 서비스, 에너지 관리 등에 이용&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;H(Hybrid)&lt;/td&gt;
      &lt;td&gt;384Kbps(H0)&lt;br /&gt;1536Kbps(H11)&lt;br /&gt;1920Kbps(H12)&lt;/td&gt;
      &lt;td&gt;- 고속의 사용자 정보를 위해 사용&lt;br /&gt;- 고속의 회선 교환, 패킷 교환, 디지털 전용선에서 이용&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;4Khz&lt;/td&gt;
      &lt;td&gt;- 아날로그   가입자선 정보 채널&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;8Kbps&lt;/td&gt;
      &lt;td&gt;- 아날로그   디지털 복합 가이자선 정보 채널&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;BRI&lt;/strong&gt;(Basic Rate Interface, 기본 속도 인터페이스)&lt;br /&gt;
가정이나 소규모 사무실 등의 사용자를 위한 ISDN 서비스&lt;br /&gt;
2B+D라 불리는 두 개의 B채널과 한 개의 D 채널로 구성
    &lt;blockquote&gt;
      &lt;p&gt;물리적 속도 : 2B + D + &lt;strong&gt;오버헤드&lt;/strong&gt; = &lt;strong&gt;192Kbps&lt;/strong&gt;&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;PRI&lt;/strong&gt;(Primary Rate Interface, 1차군 접속 서비스)&lt;br /&gt;
ISDN 회선을 많이 사용하는 기업체나 학교 등에서 사용되는 서비스&lt;br /&gt;
&lt;strong&gt;23B+D&lt;/strong&gt;(북미식, 1536Mbps), &lt;strong&gt;30B+D&lt;/strong&gt;(유럽식, 1920Mbps) 등 다양한 방식이 존재&lt;br /&gt;
D채널은 &lt;strong&gt;64Kbps&lt;/strong&gt;를 사용하고 오버헤드로 &lt;strong&gt;8Kbps&lt;/strong&gt;를 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;기능-그룹&quot;&gt;기능 그룹&lt;/h2&gt;
&lt;p&gt;각 장치들의 경계점을 명확하게 규정하기 위해 사용&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;NT(Network Terminal, 망 종단장치)&lt;/li&gt;
  &lt;li&gt;TE(Terminal Equipment, 사용자 관련 장비)&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;기능 그룹&lt;/th&gt;
      &lt;th&gt;기능&lt;/th&gt;
      &lt;th&gt;사용 예&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;TE1&lt;/td&gt;
      &lt;td&gt;- ISDN 접속 기능을 가진 단말기&lt;/td&gt;
      &lt;td&gt;ISDN 전화기, ISDN용 컴퓨터&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;TA&lt;/td&gt;
      &lt;td&gt;- Terminal Adapter&lt;br /&gt;- 아날로그 접속 기능 단말기&lt;/td&gt;
      &lt;td&gt;일반 전화기&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;TE2&lt;/td&gt;
      &lt;td&gt;- TE2 단말 장치에 ISDN 접속 기능을 제공&lt;br /&gt;- 프로토콜 변환 기능, 속도 변환 기능을 제공&lt;/td&gt;
      &lt;td&gt;ISDN용 모뎀(S-Card)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;NT1&lt;/td&gt;
      &lt;td&gt;- 선로의 종단점으로 다중화기 기능, DSU 기능   제공&lt;br /&gt;- 1계층 지원, 비트 동기&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;NT2&lt;/td&gt;
      &lt;td&gt;- 교환 기능, 집중화 기능, 라우터 기능 제공&lt;br /&gt;- 2, 3계층 지원&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;접속점&quot;&gt;접속점&lt;/h2&gt;
&lt;p&gt;전산망 기기가 타인의 전산망 기기와 접속되는 경우에 그 설치와 보전에 관한 책임의 한계를 명확하게 구분하기 위한 접속점&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;U(User)&lt;br /&gt;
외부망과 내부망을 구분하는 경계점&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;T(Terminal)&lt;br /&gt;
NT1과 NT2 사이에 기준점으로 사용자와 네트워크와의 경계점&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;S(System)&lt;br /&gt;
각각의 ISDN 단말기들에게 제공되는 인터페이스로 사용자 단말기와 네트워크 장비가 구분되는 경계점&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;R(Rate)&lt;br /&gt;
비 ISDN 단말기와 TA사이의 인터페이스로서 일반 단말기와 ISDN용 장비를 구분하는 경계점&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;atmasynchronous-transfer-mode-비동기-전송-방식&quot;&gt;ATM(Asynchronous Transfer Mode, 비동기 전송 방식)&lt;/h1&gt;
&lt;p&gt;80년대에 N-ISDN(협대역 종합 정보 통신망)이 완성되었으나, N-ISDN으로는 HDTV 등의 화질을 수용한다는 것이 불가능하였고, 결국 &lt;strong&gt;B-ISDN(광대역 ISDN)&lt;/strong&gt;이 출현하게 되었다. 이를 &lt;strong&gt;실현하기 위한 방법&lt;/strong&gt;으로 등장한 것이 ATM이다&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;데이터를 일정한 크기인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;셀&lt;/code&gt;로 구분하여 순서대로 전송하는 자료의 전송방식&lt;/li&gt;
  &lt;li&gt;고정 길이 패킷(셀)을 전송하므로 송수신 처리가 단순&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;셀 단위로 동기&lt;/strong&gt;가 이루어지기 때문에 &lt;strong&gt;오버헤드가 줄어들어&lt;/strong&gt; 고속 전송이 가능&lt;/li&gt;
  &lt;li&gt;B-ISDN과 결합하여 전 세계 네트워크의 고속 상호 연결을 가능하게 한다&lt;/li&gt;
  &lt;li&gt;비동기식 다중화 방식을 사용&lt;/li&gt;
  &lt;li&gt;양 끝단 간 오류와 흐름을 제어하므로 어떤 종류의 서비스라도 제공할 수 있다&lt;/li&gt;
  &lt;li&gt;멀티미디어 서비스에 적합&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;프로토콜-구조&quot;&gt;프로토콜 구조&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;단계
    &lt;ul&gt;
      &lt;li&gt;관리 단계(Management Plane) : 망 관리를 담당
        &lt;ul&gt;
          &lt;li&gt;단계 관리(Plane Management)&lt;/li&gt;
          &lt;li&gt;계층 관리(Layer Management)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;제어 단계(Control Plane) : 제어 정보를 전송&lt;/li&gt;
      &lt;li&gt;사용자 단계(User Plane) : 사용자 정보 전송&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;계층
    &lt;ul&gt;
      &lt;li&gt;제어 상위 계층(Control Higher Layer) - 어플리케이션 담당&lt;/li&gt;
      &lt;li&gt;사용자 정보 상위 계층(User Information Higher Layer)&lt;/li&gt;
      &lt;li&gt;ATM 변환 계층(ATM Adaptation Layer) - &lt;strong&gt;48바이트 이내&lt;/strong&gt;로 데이터를 잘라내서 &lt;strong&gt;페이로드&lt;/strong&gt;를 제작&lt;/li&gt;
      &lt;li&gt;ATM 계층(ATM Layer) - 프레임 제작, 헤더 정의&lt;/li&gt;
      &lt;li&gt;물리 계층(Physical Layer) - 전송에 적합한 신호 혹은 비트로 변환&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;셀의-구조&quot;&gt;셀의 구조&lt;/h2&gt;
&lt;p&gt;총 53바이트이며, 5바이트의 헤더와 48바이트 페이로드로 구성&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;GFC(Generic Flow Control, 4Bit)&lt;br /&gt;
트래픽 제어 정보를 표시&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;VPI(Virtual Path Identifier, 8Bit)&lt;br /&gt;
경로 배정용으로 사용&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;VCI(Virtual Channel Identifier, 16Bit)&lt;br /&gt;
채널 배정용으로 사용&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;PT(Payload Type, 3Bit)&lt;br /&gt;
사용자 정보와 망 정보를 구분&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;CLP(Cell Lose Priority, 1Bit)&lt;br /&gt;
셀 폐기 우선순위를 표시&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;HEC(Header Error Control, 8Bit)&lt;br /&gt;
셀 헤더의 오류 제어&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;adslasymmetric-digital-subscriber-비대칭-디지털-가입자-회선&quot;&gt;ADSL(Asymmetric Digital Subscriber, 비대칭 디지털 가입자 회선)&lt;/h1&gt;
&lt;p&gt;기존에 전화망을 이용한 통신은 최대 56Kbps까지의 속도를 보장하였으나, 멀티미디어 통신은 불가능하였고 인터넷의 폭발적 사용 증대로 인해 저렴하고 빠른 데이터 통신이 요구되었다.&lt;/p&gt;

&lt;p&gt;전화망은 음성 신호를 실어 나르기 위해 설계된 네트워크이다. 음성 대역만을 전송하면 되므로 보호 대역을 고려하고 4,000Hz의 기본 주파수만을 사용하였다. 하지만 고속의 데이터 통신이 요구되면서 비 사용중인 4,400Hz에서 &lt;strong&gt;1MHz인 대역폭을 이용하여 고속의 데이터 전송&lt;/strong&gt;을 제공하는 기술&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ADSL(Asymmetric Digital Subscriber Line)&lt;/li&gt;
  &lt;li&gt;HDSL(High-data rate Digital Subscriber Line)&lt;/li&gt;
  &lt;li&gt;SDSL(Single line Digital Subscriber Line)&lt;/li&gt;
  &lt;li&gt;VDSL(Very High bit rate Digital Subscriber Line)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;전화 음성 신호를 실어 나르는 기존의 전화망은 그대로 사용하면서 고속의 데이터 통신 서비스를 제공받을 수 있다&lt;/li&gt;
  &lt;li&gt;데이터 통신을 사용하기 위해서는 전화를 걸어야 하는 단점은 있지만 일단 접속이 되면 사용 시간과 무관하게 계속적으로 사용 가능&lt;/li&gt;
  &lt;li&gt;인터넷 사용 시 데이터 흐름은 서버로부터 받는 데이터가 대부분인데 반해 사용자가 발생하는 데이터는 그리 많지 않다. 따라서 이러한 데이터 흐름을 반영하여 하향/상향 채널화하고 각각 다른 대역을 할당하여 회선 효율을 높일 수 있게 하였다&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;catvcable-television&quot;&gt;CATV(Cable Television)&lt;/h1&gt;
&lt;p&gt;원래 난시청 지역에서 안테나 또는 공동 안테나를 설치하여 수신된 TV 방송국의 전파를 유선으로 각 가정에 분배/공급하기 위해 탄생하였으나 오늘날에는 다양한 영상 통신 시스템으로 발전하고 있다&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;동축 케이블 이용&lt;/li&gt;
  &lt;li&gt;PSTN을 이용하는 ADSL이나 ISDN처럼 접속과정이 필요 없다&lt;/li&gt;
  &lt;li&gt;24시간 내내 시간에 관계없이 인터넷 서비스를 제공받을 수 있다&lt;/li&gt;
  &lt;li&gt;케이블 TV와 다른 주파수를 사용하므로 TV 시청에 영향을 주기 않는다&lt;/li&gt;
  &lt;li&gt;케이블 모뎀이 사용된다&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 07 Apr 2021 00:00:00 +0900</pubDate>
        <link>https://many258.github.io/study/data-communication-digital-network-service/</link>
        <guid isPermaLink="true">https://many258.github.io/study/data-communication-digital-network-service/</guid>
        
        <category>데이터통신</category>
        
        
        <category>study</category>
        
      </item>
    
      <item>
        <title>[데이터통신] 트래픽 제어</title>
        <description>&lt;h1 id=&quot;트래픽-제어traffic-control&quot;&gt;트래픽 제어(Traffic Control)&lt;/h1&gt;
&lt;p&gt;네트워크 내로 송/수신되는 &lt;strong&gt;패킷의 수&lt;/strong&gt;를 일정하게 조절하여 네트워크를 효율적으로 이용할 수 있도록하는 기술로 수신측의 버퍼량이 &lt;strong&gt;한계점을 초과&lt;/strong&gt;하지 않도록 한다&lt;/p&gt;

&lt;h2 id=&quot;흐름-제어flow-control&quot;&gt;흐름 제어(Flow Control)&lt;/h2&gt;
&lt;p&gt;패킷 교환 방식에서 통신망 내 트래픽 제어의 원할한 흐름을 위해 네트워크 내의 노드와 노드 사이에 &lt;strong&gt;전송하는 패킷의 양이나 속도를 규제&lt;/strong&gt;하는 기술. 혹은 &lt;strong&gt;수신기 버퍼의 오버플로우를 예방&lt;/strong&gt;하기 위한 것으로 데이터 프레임의 전송률을 조정하는 것을 의미&lt;/p&gt;

&lt;h3 id=&quot;일정한-시간choke-packet&quot;&gt;일정한 시간(Choke Packet)&lt;/h3&gt;
&lt;p&gt;수신측에서 송신측에 전송하는 전송 지연 신호로 송신측의 데이터 전송 속도를 조절하는 방법. 수신측에서 일정한 시간(Choke Packet)을 송신측에 전송할 때마다 송신측은 &lt;strong&gt;일정한 시간만큼 점증적으로 데이터 전송 시간을 늦춘다&lt;/strong&gt;. 지원 중지 시간(Time Out) 동안 수신측에서 &lt;strong&gt;Choke Packet이 없는 경우&lt;/strong&gt; 송신측은 다시 &lt;strong&gt;원래의 속도로 복귀&lt;/strong&gt;한다&lt;/p&gt;

&lt;h3 id=&quot;단일-승낙&quot;&gt;단일 승낙&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Wait-Before-Go&lt;/strong&gt;&lt;br /&gt;
수신측의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Go&lt;/code&gt; 명령이 오면 전송하고 아무런 신호가 도착하지 않으면 대기(송신측이 &lt;strong&gt;수동적&lt;/strong&gt;)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Ask-And-Wait&lt;/strong&gt;&lt;br /&gt;
송신측에서 전송 여부를 물어보고 수신이 가능하다는 신호가 도착하면 전송(송신측이 &lt;strong&gt;능동적&lt;/strong&gt;)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;다중-승낙&quot;&gt;다중 승낙&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Window-Edge&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;수신측의 버퍼의 개수&lt;/strong&gt;를 송신측에 전송 하면 송신측에서는 임의로 데이터의 개수를 정하여 전송하는 방법&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;wbatwait-before-and-transmission&quot;&gt;WBAT(Wait Before And Transmission)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;수신측&lt;/strong&gt;에서는 수신할 데이터의 개수를 &lt;strong&gt;임의로 정하여&lt;/strong&gt; 송신측에 전달하면 송신측은 수신측에서 요구한 개수만큼만을 송신. 수신측에는 아무런 신호가 도착하지 않으면 무한정 대기&lt;/p&gt;

&lt;h3 id=&quot;슬라이딩-윈도sliding-window&quot;&gt;슬라이딩 윈도(Sliding Window)&lt;/h3&gt;
&lt;p&gt;전송측이 전송한 프레임에 대한 ACK 프레임을 수신하지 않더라도 여러 개의 프레임을 연속적으로 전송하도록 허용하는 방법&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/network/data-communication/sliding-window.png&quot; alt=&quot;&quot; title=&quot;슬라이딩 윈도우&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;한 번에 여러 개의 프레임을 전송할 경우 가장 효율적인 기법으로 송신측에서는 수신측으로 부터 전송할 &lt;strong&gt;프레임의 개수(윈도 크기)를 미리 지정&lt;/strong&gt;받는다.&lt;/p&gt;

&lt;p&gt;지정받은 개수만큼 송신 측에서는 자율적으로 프레임의 개수를 전송할 수 있다. 송신측에서는 &lt;strong&gt;지정받은 프레임의 개수&lt;/strong&gt;만큼을 모두 &lt;strong&gt;전송하고 나면 더 이상 전송할 수 없게&lt;/strong&gt; 된다&lt;/p&gt;

&lt;p&gt;수신측에서 전송할 프레임의 개수를 &lt;strong&gt;다시 지정&lt;/strong&gt;하게 되면 그때서야 &lt;strong&gt;다시 전송&lt;/strong&gt;할 수 있게 된다&lt;/p&gt;

&lt;h2 id=&quot;혼잡-제어congestion-control&quot;&gt;혼잡 제어(Congestion Control)&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;네트워크 내&lt;/strong&gt;에서 패킷의 대기 지연이 너무 높아지게 되어 트래픽이 붕괴되지 않도록 네트워크 측면에서 패킷의 흐름을 제어하는 트래픽 제어 기술&lt;/p&gt;

&lt;p&gt;네트워크 상에 패킷 수를 조절하는 기술로 네트워크 상에 각 노드들의 &lt;strong&gt;패킷 수신 버퍼를 한계점 이하로 사용&lt;/strong&gt;하도록 조절한다&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/network/data-communication/congestion-avoidance.png&quot; alt=&quot;&quot; title=&quot;혼잡제어&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;느린 시작&lt;/strong&gt;(Slow Start)&lt;br /&gt;
윈도우의 크기를 1/2/4/8… 지수적으로 증가시켜 초기에는 느리지만 갈수록 빨라진다&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;혼잡 회피&lt;/strong&gt;(Congestion Avoidance)&lt;br /&gt;
느린 시작의 지수적 증가가 임계값에 도달하면 혼잡으로 간주하고 회피를 위해 윈도우의 크기를 1씩 선형적으로 증가시켜 혼잡을 예방하는 방식&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;네트워크상에 체증 제어가 실패하면 패킷의 흐름이 전혀 없는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;교착상태&lt;/code&gt;가 발생하여 궁극적으로 인접한 모든 노드까지 영향을 주게 되는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;룩업&lt;/code&gt; 상태가 된다&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;흐름 제어&lt;/strong&gt; : &lt;strong&gt;두 노드 사이&lt;/strong&gt;에 패킷 수를 조절하는 기술&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;체증 제어&lt;/strong&gt; : &lt;strong&gt;네트워크에서&lt;/strong&gt; 패킷 수를 조절하는 기술&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;교착상태-회피&quot;&gt;교착상태 회피&lt;/h2&gt;
&lt;p&gt;노드 간에 패킷을 기억할 수 있는 &lt;strong&gt;버퍼가 디스크의 용량이 넘쳐 패킷을 전송할 수 없는 상태&lt;/strong&gt;로 흐름 제어가 실패하면 체증이 유발되고 패킷의 흐름이 정지되는 교착상태가 발생&lt;/p&gt;

&lt;p&gt;이러한 교착상태가 발생되는 경우는 같은 목적지를 갖는 패킷을 모두 할당하지 않도록 조절해야 한다. 교착상태 발생 후 계속적으로 심화되면 룩업 상태가 발생하므로 그 전에 교착상태에 있는 노드 중에 하나를 선택하여 &lt;strong&gt;패킷 버퍼를 모두 폐기&lt;/strong&gt;하면 룩업 상태를 방지할 수 있다.&lt;/p&gt;

&lt;p&gt;이 때 폐기되는 패킷들은 사용자에 의하여 재전송되어야 한다.&lt;/p&gt;

&lt;h3 id=&quot;룩업-상태lock-up&quot;&gt;룩업 상태(Lock-Up)&lt;/h3&gt;
&lt;p&gt;패킷 교환망에서 교환기를 여러 사용자가 공유함으로써 패킷의 개수가 급속히 증가하거나 교환기 버퍼 용량의 부족으로 교착상태가 발생한다.&lt;/p&gt;

&lt;p&gt;이러한 부분적인 교착상태는 계속 확대되어 근접한 교환기까지도 영향을 주게 되며, 이로 인하여 &lt;strong&gt;네트워크 전체의 패킷 흐름이 멈추게 되는&lt;/strong&gt; 현상을 말한다.&lt;/p&gt;
</description>
        <pubDate>Tue, 06 Apr 2021 00:00:00 +0900</pubDate>
        <link>https://many258.github.io/study/data-communication-traffic-control/</link>
        <guid isPermaLink="true">https://many258.github.io/study/data-communication-traffic-control/</guid>
        
        <category>데이터통신</category>
        
        
        <category>study</category>
        
      </item>
    
      <item>
        <title>[데이터통신] 경로 선택 제어</title>
        <description>&lt;h1 id=&quot;경로-선택routing&quot;&gt;경로 선택(Routing)&lt;/h1&gt;
&lt;p&gt;송/수신 간에 중간 서브넷을 거쳐 &lt;strong&gt;최적의 경로를 선택&lt;/strong&gt;하는 기술&lt;/p&gt;

&lt;p&gt;서브넷 &lt;strong&gt;자원의 이용을 최대화&lt;/strong&gt;하여 평균 패킷 전송 시간을 &lt;strong&gt;최소화&lt;/strong&gt;한다&lt;/p&gt;

&lt;h2 id=&quot;경로-선택-요소&quot;&gt;경로 선택 요소&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;성능 기준(Performance Criterion)
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;홉수의 최소화&lt;/strong&gt; : 가장 적게 교환기를 경유할 수 있도록 한다&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;최저 비용 경로&lt;/strong&gt; : 경로를 배정하는 기술이나 비용이 적게 사용되도록 한다&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;최고의 처리율&lt;/strong&gt; : 정해진 시간 안에 패킷의 경로 배정을 최대로 진행하게 한다&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;지연의 최소화&lt;/strong&gt; : 패킷이 교환기에 저장된 시간이 최소가 되도록 한다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;결정 시간(Decision Time)
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;데이터그램 방식&lt;/strong&gt; : 패킷의 경로 결정 시간을 환경에 맞게 정한다&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;가상 회선 방식&lt;/strong&gt; : 패킷의 경로 결정 시간은 이미 정해져 있게 한다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;결정 장소(Decision Place)
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;분산식&lt;/strong&gt; : 주변 네트워크 정보를 참조&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;집중식&lt;/strong&gt; : 경로 정보 센터(RCC)의 정보를 참조&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;네트워크 정보 발생지(Network Information Source)
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;네트워크 형태&lt;/strong&gt; : 패킷이 처음 만들어진 네트워크 형태를 의미&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;트래픽 양&lt;/strong&gt; : 정해진 시간 안에 패킷들의 송/수신 개수를 의미&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;경로 배정 전략(Routing Plan)
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;고정형&lt;/strong&gt; : 패킷의 경로가 항상 일정하게 전달&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;범람형&lt;/strong&gt; : 패킷을 여러 개로 복사하여 전달&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;적응형&lt;/strong&gt; : 경로 선택기의 진행 정보를 이용하여 전달&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;적응 경로 배정 갱신 시간(Adaptive Routing Update Time)
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;연속적&lt;/strong&gt; : 경로 선택기의 정보를 계속 변경해준다&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;주기적&lt;/strong&gt; : 경로 선택기의 정보를 주기적으로 변경해준다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;경로-선택-프로토콜&quot;&gt;경로 선택 프로토콜&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/network/data-communication/routing-protocol.png&quot; alt=&quot;&quot; title=&quot;라우팅 프로토콜 분류&quot; /&gt;&lt;/p&gt;

&lt;p&gt;현재의 인터넷 상에서 운영되는 모든 네트워크에서는 서로 다른 경로 선택 프로토콜들이 사용되고 있다. 인터넷은 하나의 네트워크 관리 조직이 운영하는 지역인 AS의 집합으로 이루어져 있다&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AS&lt;/strong&gt;(Autonomous Systems, 자율 시스템) : 동일한 라우팅 프로토콜을 사용하는 네트워크&lt;/p&gt;

&lt;p&gt;모든 AS는 AS 안에 있는 경로 선택기들과 통신을 하기 위하여 경로 선택 프로토콜을 사용&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;거리벡터 알고리즘&lt;/strong&gt;&lt;br /&gt;
행렬로 이루어진 거리 정보 값을 인접 라우터와 주기적으로 교환하여 테이블을 갱신하고 이를 통해 경로를 선택하는 구조.&lt;/p&gt;

    &lt;p&gt;교환되는 정보가 기본적으로 거리 정보뿐이기 때문에 단순하고 다루기 쉬운 반면, 장애 등의 원인을 알아내기에는 어렵다는 단점이 존재&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;라우터와 라우터 간의 거리를 더하여 계산&lt;/li&gt;
      &lt;li&gt;라우팅 메트릭 값의 설정 요소
        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;&lt;strong&gt;네트워크 지연&lt;/strong&gt;&lt;br /&gt;
하나의 패킷이 네트워크를 통하여 전송측에서 목적지까지 전송되는 데 소요되는 시간으로 링크의 대역폭, 실제 거리, 포트의 큐, 네트워크의 과부하 등 다양한 요인에 의해 결정&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;&lt;strong&gt;대역폭&lt;/strong&gt;&lt;br /&gt;
연결된 네트워크 구간에서 사용 가능한 트래픽의 양&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;&lt;strong&gt;신뢰성&lt;/strong&gt;&lt;br /&gt;
각 네트워크 연결 상태에 있어서 얼마만큼의 신뢰를 유지하는 가를 수치로 표현&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;&lt;strong&gt;부하&lt;/strong&gt;&lt;br /&gt;
네트워크 트래픽의 바쁜 정도&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;링크상태 알고리즘&lt;/strong&gt;&lt;br /&gt;
거리벡터 라우팅 프로토콜의 단점을 보완하기 위해 개발.&lt;/p&gt;

    &lt;p&gt;모든 라우터가 모든 링크 정보를 가지며 라우팅 정보가 변경될 경우(이벤트 기반)에 &lt;strong&gt;변경된 라우팅 정보만을 전파&lt;/strong&gt;시키는 구조(트래픽 발생량 감소 =&amp;gt; 규모 큰 네트워크에서도 사용이 가능, 라우팅 루프같은 오류가 발생하지 않음)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;시간 지연 문제의 발생이 적다&lt;/li&gt;
      &lt;li&gt;복잡한 구조로 경로설정이 구현되므로 주소 배분이나 장치 설정의 어려움이 발생&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;igpinterior-gateway-protocol-내부-게이트웨이-프로토콜&quot;&gt;IGP(Interior Gateway Protocol, 내부 게이트웨이 프로토콜)&lt;/h3&gt;
&lt;p&gt;AS 내부의 라우터들끼리 라우팅 정보를 교환하는 데 사용되는 라우팅 프로토콜&lt;/p&gt;

&lt;h4 id=&quot;riprouting-information-protocol-인터넷-라우팅-프로토콜&quot;&gt;RIP(Routing Information Protocol, 인터넷 라우팅 프로토콜)&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;거리벡터 알고리즘을 사용하는 가장 단순하고 일반적인 프로토콜&lt;/li&gt;
  &lt;li&gt;라우팅 테이블은 데이터그램 패킷을 통하여 모든 라우터에 전달&lt;/li&gt;
  &lt;li&gt;매 30초마다 라우팅 정보를 전달, 라우팅 정보는 180초 동안만 유효&lt;/li&gt;
  &lt;li&gt;최대 홉을 15로 제한하므로 소/중규모 네트워크에 적합&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Broadcast 방식&lt;/strong&gt;을 사용해서 인접한 라우터 간의 정보를 교환하므로 네트워크 대역폭의 낭비가 초래되고 네트워크에 연결되어 있는 모든 호스트들은 라우팅 처리와 무관하게 관련된 패킷을 처리해야 하므로 연결된 모든 장치에 &lt;strong&gt;오버헤드가 발생&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;ripv2rfc1723&quot;&gt;RIPv2(RFC1723)&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;RIP와 동일한 기본 알고리즘을 사용하면서 단점을 보완한 프로토콜&lt;/li&gt;
  &lt;li&gt;인증 메커니즘을 제공하고 인터넷 전체에 &lt;strong&gt;VLSM&lt;/strong&gt;을 사용할 수 있도록 보완&lt;/li&gt;
  &lt;li&gt;인식 기능이 제공되기 때문에 Broadcast 방식이나 Multicast 방식으로 갱신 정보를 전송하는 것이 가능&lt;/li&gt;
  &lt;li&gt;서브넷 마스크 기능 포함&lt;/li&gt;
  &lt;li&gt;EGP에서 얻어진 AS 번호 등의 정보를 통지하기 위해 사용되는 외부 루트태그 기능 존재&lt;/li&gt;
  &lt;li&gt;RIP에서는 서브넷 마스크를 바이트 단위로 인식을 하여 A/B/C 클래스 단위로 인식하였으나, RIPv2에서는 &lt;strong&gt;비트 단위&lt;/strong&gt;로 인식&lt;/li&gt;
  &lt;li&gt;멀티라우팅 프로토콜 환경에서 라우팅 수행 중에 다음에 전송될 라우터 중 최적 라우터의 선택이 가능하도록 하는 ‘다음 홉 주소’ 사용&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;멀티캐스트&lt;/strong&gt; 방식을 사용하기 때문에 라우팅 프로토콜이 지원하지 않는 호스트의 부하를 경감시킬 수 있으며, 또한 RIP 외는 지원하지 않는 라우터에서 해석할 수 없는 정보를 RIPv2 라우터 사이에 공유하도록 함으로써 신뢰성을 향상시킨다&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;ospfopen-shortest-path-first&quot;&gt;OSPF(Open Shortest Path First)&lt;/h4&gt;
&lt;p&gt;RIP의 한계를 극복하기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IETF&lt;/code&gt;(Internet Engineering Task Force)에서 고안한 방식으로 네트워크 &lt;strong&gt;변화가 있을 때에만 갱신함&lt;/strong&gt;으로 대역을 효과적으로 사용할 수 있는 라우팅 프로토콜&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;망 구성이 &lt;strong&gt;계층적 구조&lt;/strong&gt;로 구성되어 있으며 Area라는 구간을 나누어 사용(대규모 네트워크에서 효율적으로 사용이 가능)&lt;/li&gt;
  &lt;li&gt;Area를 나누면 서로 교환해야 되는 상태정보도 줄어들고 링크 계산 속도, 빈도가 줄어들게 되며 라우팅 테이블의 크기도 줄어 관리하기가 용이해진다&lt;/li&gt;
  &lt;li&gt;라우팅 정보를 인접한 라우터에 모두 전송하는 플러딩 방식을 사용하므로 토폴로지에 관한 정보가 전체 네트워크 상의 라우터에서 동일하게 유지&lt;/li&gt;
  &lt;li&gt;거리의 제한이 없다&lt;/li&gt;
  &lt;li&gt;SPF 알고리즘을 통해 직접 경로계산을 하기 때문에 리소스 소모량이 많다&lt;/li&gt;
  &lt;li&gt;LSA : 라우팅 정보를 담아 주고 받는 광고 패킷&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;igrpinternet-gateway-routing-protocol&quot;&gt;IGRP(Internet Gateway Routing Protocol)&lt;/h4&gt;
&lt;p&gt;BGP를 보완한 기술로 중간 규모의 네트워크에서 사용하는 경로 설정 프로토콜&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;시스코 사에서 독자적으로 개발한 프로토콜&lt;/li&gt;
  &lt;li&gt;독립적인 네트워크 내에서만 사용하기 위해 개발&lt;/li&gt;
  &lt;li&gt;RIP와 유사하게 Hop수를 기준으로 한 정보를 전송&lt;/li&gt;
  &lt;li&gt;복수의 경로상에서 로드 밸런싱 기능을 지원&lt;/li&gt;
  &lt;li&gt;RIP와 유사하지만, 크고 복잡한 네트워크를 위해 개발&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;eigrpenhanced-interior-gateway-routing-protocol&quot;&gt;EIGRP(Enhanced Interior Gateway Routing Protocol)&lt;/h4&gt;
&lt;p&gt;거리 벡터 알고리즘을 사용하는 IGRP를 발전시켜 개발한 라우팅 프로토콜.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;IGRP의 매트릭 방식을 그대로 사용하여 최적경로를 선택&lt;/li&gt;
  &lt;li&gt;링크제어 알고리즘처럼 네트워크 변화에 즉시 업데이트를 수행&lt;/li&gt;
  &lt;li&gt;Router 정보 전송을 위해 IP 프로토콜 88번 사용&lt;/li&gt;
  &lt;li&gt;DUAL(Diffusing Update Algorithm)을 사용하여 최적 경로(Successor)와 후속 경로(Feasible Successor)를 선출&lt;/li&gt;
  &lt;li&gt;메트릭 값이 같은 경로만 부하 분산이 가능한 RIP와 OSPF와는 다르게 메트릭 값이 다른 경로로 부하 분산이 가능(Unequal Cost 부하 분산 지원)&lt;/li&gt;
  &lt;li&gt;대규모 네트워크에 적용 시 SIA(Stuck In Active)현상이 발생할 수 있다&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;egperpexterior-gatewayrouting-protocol-외부-게이트웨이-프로토콜&quot;&gt;EGP/ERP(Exterior Gateway/Routing Protocol, 외부 게이트웨이 프로토콜)&lt;/h3&gt;
&lt;p&gt;RIP만으로는 패킷망의 모든 경로를 가상으로 확보할 수 없기에 TCP/IP를 사용하는 네트워크와의 연합으로 패킷 경로를 확보한다.&lt;/p&gt;

&lt;p&gt;즉, AS 상호 간에 라우팅 정보를 교환하는 데 사용되는 프로토콜&lt;/p&gt;

&lt;h4 id=&quot;bgpborder-gateway-protocol-경계-게이트웨이-프토토콜&quot;&gt;BGP(Border Gateway Protocol, 경계 게이트웨이 프토토콜)&lt;/h4&gt;
&lt;p&gt;인터넷상의 게이트웨이 호스트들 간에 흔히 사용되는 프로토콜로 &lt;strong&gt;관리자에 의해 독자적인 경로 설정이 필요&lt;/strong&gt;할 때 사용하는 프로토콜&lt;br /&gt;
ISP 업체 연결하거나, 두개이상 ISP 동시 접속할때 (Multihoming), BGP를 사용 한다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;라우팅정보를 유니캐스트 방식으로 전송한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;경로-선택-전략&quot;&gt;경로 선택 전략&lt;/h2&gt;

&lt;h3 id=&quot;비적응적-방법&quot;&gt;비적응적 방법&lt;/h3&gt;
&lt;p&gt;경로 선택이 단순하고 중간 노드의 상태를 전혀 고려하지 않는다.&lt;/p&gt;

&lt;p&gt;패킷을 전송할 때 경로를 선택할 수 잇는 프로그램을 미리 패킷에 삽입하면 패킷은 패킷에 있는 경로 선택 프로그램대로 진행되도록 하는 &lt;strong&gt;정적이고 수동적인 방법&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&quot;고정-경로-선택fixed-routing-착국-부호-방식&quot;&gt;고정 경로 선택(Fixed Routing, 착국 부호 방식)&lt;/h4&gt;
&lt;p&gt;교환기마다 접속하려는 상대방에 미리 붙여둔 번호를 해석하여 진행 경로를 선정하는 방식&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;이미 정해진 경로로 진행하기 때문에 유연성이 없다&lt;/li&gt;
  &lt;li&gt;지나간 경로로 되돌아가는 루프가 없다&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;범람-경로-선택flooding-routing-플러딩&quot;&gt;범람 경로 선택(Flooding Routing, 플러딩)&lt;/h4&gt;
&lt;p&gt;입력된 경로를 제외하고 &lt;strong&gt;모든 경로에 패킷의 복사본이 전송&lt;/strong&gt;되는 방법으로 &lt;strong&gt;신뢰성&lt;/strong&gt;과 최단 경로가 보장되지만 복사된 패킷의 증가로 &lt;strong&gt;체증이 유발&lt;/strong&gt;될 수 있다&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;홉카운트를 이용하여 체증 유발을 방지할 수 있다&lt;/li&gt;
  &lt;li&gt;중간 네트워크(서브넷) 정보를 이용하지 않는다&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;적응적-방법&quot;&gt;적응적 방법&lt;/h3&gt;
&lt;p&gt;중간 노드의 상태가 원활하지 않는 경우 체증과 지연이 심화될 수 있다. 이러한 단점을 보완한 적응적 방법은 중간 노드의 체증이나 교착상태 등의 변화에 대한 &lt;strong&gt;정보를 얻어 능동적&lt;/strong&gt;으로 경로를 선택하는 동적인 방법&lt;/p&gt;

&lt;h4 id=&quot;국부적-경로-선택isolated-routing&quot;&gt;국부적 경로 선택(Isolated Routing)&lt;/h4&gt;
&lt;p&gt;지역적으로 외부 노드의 정보를 얻지 않고 국부적인 노드의 &lt;strong&gt;독립적인 판단&lt;/strong&gt;에 의하여 결정되는 방법으로 거시적인 관점보다는 근시안적이기 때문에 체증 유발 가능성이 존재&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;짧은 큐 경로 선택&lt;/strong&gt;(Shortest Queue Routing, Hot Potato Routing)&lt;br /&gt;
인접 노드의 버퍼의 개수가 가장 적은 쪽으로 패킷을 보내는 방식&lt;br /&gt;
패킷이 &lt;strong&gt;목적지와 멀어질 수 있다&lt;/strong&gt;는 단점이 있지만 패킷을 노드 밖으로 보내는 방법으로는 가장 확실한 방법&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;국부 지연 평가 방법&lt;/strong&gt;(Local Delay Estimate, Backward Learning)&lt;br /&gt;
이미 지나간 패킷의 정보를 &lt;strong&gt;충분한 시간을 갖고 평가&lt;/strong&gt;하여 경로를 선택하는 방법&lt;br /&gt;
정확도나 경로 선택의 &lt;strong&gt;시기를 놓칠 수 있다&lt;/strong&gt;는 단점 존재&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;분산-경로-선택distribute-routing&quot;&gt;분산 경로 선택(Distribute Routing)&lt;/h4&gt;
&lt;p&gt;체증이 발생하는 문제점과 효율적인 경로 선택을 위해 사용하며 자신을 중심으로 &lt;strong&gt;인접해있는 모든 경로 선택기&lt;/strong&gt;의 정보를 분석하여 광범위한 지역까지의 경로를 확보하는 방식&lt;/p&gt;

&lt;h4 id=&quot;집중-경로-선택centralized-routing&quot;&gt;집중 경로 선택(Centralized Routing)&lt;/h4&gt;
&lt;p&gt;전체 네트워크의 경로 흐름을 파악하고 제어하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RCC&lt;/code&gt;(Routing Control Center)의 정보로 경로를 선택하는 방법으로 RCC의 고장 시 전체 통신망은 마비된다&lt;/p&gt;
</description>
        <pubDate>Mon, 05 Apr 2021 00:00:00 +0900</pubDate>
        <link>https://many258.github.io/study/data-communication-routing/</link>
        <guid isPermaLink="true">https://many258.github.io/study/data-communication-routing/</guid>
        
        <category>데이터통신</category>
        
        
        <category>study</category>
        
      </item>
    
  </channel>
</rss>
